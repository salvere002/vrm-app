{"ast":null,"code":"import { calcHead } from \"./calcHead\";\nimport { calcEyes, stabilizeBlink, calcPupils, calcBrow } from \"./calcEyes\";\nimport { calcMouth } from \"./calcMouth\";\n/** Class representing face solver. */\nexport class FaceSolver {\n  /**\n   * Combines head, eye, pupil, and eyebrow calcs into one method\n   * @param {Results} lm : array of results from tfjs or mediapipe\n   * @param {String} runtime: set as either \"tfjs\" or \"mediapipe\"\n   * @param {IFaceSolveOptions} options: options for face solver\n   */\n  static solve(lm) {\n    let {\n      runtime = \"tfjs\",\n      video = null,\n      imageSize = null,\n      smoothBlink = false,\n      blinkSettings = []\n    } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    if (!lm) {\n      console.error(\"Need Face Landmarks\");\n      return;\n    }\n    // set image size based on video\n    if (video) {\n      const videoEl = typeof video === \"string\" ? document.querySelector(video) : video;\n      imageSize = {\n        width: videoEl.videoWidth,\n        height: videoEl.videoHeight\n      };\n    }\n    //if runtime is mediapipe, we need the image dimentions for accurate calculations\n    if (runtime === \"mediapipe\" && imageSize) {\n      for (const e of lm) {\n        e.x *= imageSize.width;\n        e.y *= imageSize.height;\n        e.z *= imageSize.width;\n      }\n    }\n    const getHead = calcHead(lm);\n    const getMouth = calcMouth(lm);\n    //set high and low remapping values based on the runtime (tfjs vs mediapipe) of the results\n    blinkSettings = blinkSettings.length > 0 ? blinkSettings : runtime === \"tfjs\" ? [0.55, 0.85] : [0.35, 0.5];\n    let getEye = calcEyes(lm, {\n      high: blinkSettings[1],\n      low: blinkSettings[0]\n    });\n    // apply blink stabilizer if true\n    if (smoothBlink) {\n      getEye = stabilizeBlink(getEye, getHead.y);\n    }\n    const getPupils = calcPupils(lm);\n    const getBrow = calcBrow(lm);\n    return {\n      head: getHead,\n      eye: getEye,\n      brow: getBrow,\n      pupil: getPupils,\n      mouth: getMouth\n    };\n  }\n}\n/** expose blink stabilizer as a static method */\nFaceSolver.stabilizeBlink = stabilizeBlink;","map":{"version":3,"names":["calcHead","calcEyes","stabilizeBlink","calcPupils","calcBrow","calcMouth","FaceSolver","solve","lm","runtime","video","imageSize","smoothBlink","blinkSettings","arguments","length","undefined","console","error","videoEl","document","querySelector","width","videoWidth","height","videoHeight","e","x","y","z","getHead","getMouth","getEye","high","low","getPupils","getBrow","head","eye","brow","pupil","mouth"],"sources":["/Users/hzh-mac/Downloads/VRM/vrm-app/node_modules/kalidokit/dist/FaceSolver/index.js"],"sourcesContent":["import { calcHead } from \"./calcHead\";\nimport { calcEyes, stabilizeBlink, calcPupils, calcBrow } from \"./calcEyes\";\nimport { calcMouth } from \"./calcMouth\";\n/** Class representing face solver. */\nexport class FaceSolver {\n    /**\n     * Combines head, eye, pupil, and eyebrow calcs into one method\n     * @param {Results} lm : array of results from tfjs or mediapipe\n     * @param {String} runtime: set as either \"tfjs\" or \"mediapipe\"\n     * @param {IFaceSolveOptions} options: options for face solver\n     */\n    static solve(lm, { runtime = \"tfjs\", video = null, imageSize = null, smoothBlink = false, blinkSettings = [], } = {}) {\n        if (!lm) {\n            console.error(\"Need Face Landmarks\");\n            return;\n        }\n        // set image size based on video\n        if (video) {\n            const videoEl = (typeof video === \"string\" ? document.querySelector(video) : video);\n            imageSize = {\n                width: videoEl.videoWidth,\n                height: videoEl.videoHeight,\n            };\n        }\n        //if runtime is mediapipe, we need the image dimentions for accurate calculations\n        if (runtime === \"mediapipe\" && imageSize) {\n            for (const e of lm) {\n                e.x *= imageSize.width;\n                e.y *= imageSize.height;\n                e.z *= imageSize.width;\n            }\n        }\n        const getHead = calcHead(lm);\n        const getMouth = calcMouth(lm);\n        //set high and low remapping values based on the runtime (tfjs vs mediapipe) of the results\n        blinkSettings = blinkSettings.length > 0 ? blinkSettings : runtime === \"tfjs\" ? [0.55, 0.85] : [0.35, 0.5];\n        let getEye = calcEyes(lm, {\n            high: blinkSettings[1],\n            low: blinkSettings[0],\n        });\n        // apply blink stabilizer if true\n        if (smoothBlink) {\n            getEye = stabilizeBlink(getEye, getHead.y);\n        }\n        const getPupils = calcPupils(lm);\n        const getBrow = calcBrow(lm);\n        return {\n            head: getHead,\n            eye: getEye,\n            brow: getBrow,\n            pupil: getPupils,\n            mouth: getMouth,\n        };\n    }\n}\n/** expose blink stabilizer as a static method */\nFaceSolver.stabilizeBlink = stabilizeBlink;\n"],"mappings":"AAAA,SAASA,QAAQ,QAAQ,YAAY;AACrC,SAASC,QAAQ,EAAEC,cAAc,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,YAAY;AAC3E,SAASC,SAAS,QAAQ,aAAa;AACvC;AACA,OAAO,MAAMC,UAAU,CAAC;EACpB;AACJ;AACA;AACA;AACA;AACA;EACI,OAAOC,KAAKA,CAACC,EAAE,EAAuG;IAAA,IAArG;MAAEC,OAAO,GAAG,MAAM;MAAEC,KAAK,GAAG,IAAI;MAAEC,SAAS,GAAG,IAAI;MAAEC,WAAW,GAAG,KAAK;MAAEC,aAAa,GAAG;IAAI,CAAC,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;IAChH,IAAI,CAACN,EAAE,EAAE;MACLS,OAAO,CAACC,KAAK,CAAC,qBAAqB,CAAC;MACpC;IACJ;IACA;IACA,IAAIR,KAAK,EAAE;MACP,MAAMS,OAAO,GAAI,OAAOT,KAAK,KAAK,QAAQ,GAAGU,QAAQ,CAACC,aAAa,CAACX,KAAK,CAAC,GAAGA,KAAM;MACnFC,SAAS,GAAG;QACRW,KAAK,EAAEH,OAAO,CAACI,UAAU;QACzBC,MAAM,EAAEL,OAAO,CAACM;MACpB,CAAC;IACL;IACA;IACA,IAAIhB,OAAO,KAAK,WAAW,IAAIE,SAAS,EAAE;MACtC,KAAK,MAAMe,CAAC,IAAIlB,EAAE,EAAE;QAChBkB,CAAC,CAACC,CAAC,IAAIhB,SAAS,CAACW,KAAK;QACtBI,CAAC,CAACE,CAAC,IAAIjB,SAAS,CAACa,MAAM;QACvBE,CAAC,CAACG,CAAC,IAAIlB,SAAS,CAACW,KAAK;MAC1B;IACJ;IACA,MAAMQ,OAAO,GAAG9B,QAAQ,CAACQ,EAAE,CAAC;IAC5B,MAAMuB,QAAQ,GAAG1B,SAAS,CAACG,EAAE,CAAC;IAC9B;IACAK,aAAa,GAAGA,aAAa,CAACE,MAAM,GAAG,CAAC,GAAGF,aAAa,GAAGJ,OAAO,KAAK,MAAM,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,GAAG,CAAC;IAC1G,IAAIuB,MAAM,GAAG/B,QAAQ,CAACO,EAAE,EAAE;MACtByB,IAAI,EAAEpB,aAAa,CAAC,CAAC,CAAC;MACtBqB,GAAG,EAAErB,aAAa,CAAC,CAAC;IACxB,CAAC,CAAC;IACF;IACA,IAAID,WAAW,EAAE;MACboB,MAAM,GAAG9B,cAAc,CAAC8B,MAAM,EAAEF,OAAO,CAACF,CAAC,CAAC;IAC9C;IACA,MAAMO,SAAS,GAAGhC,UAAU,CAACK,EAAE,CAAC;IAChC,MAAM4B,OAAO,GAAGhC,QAAQ,CAACI,EAAE,CAAC;IAC5B,OAAO;MACH6B,IAAI,EAAEP,OAAO;MACbQ,GAAG,EAAEN,MAAM;MACXO,IAAI,EAAEH,OAAO;MACbI,KAAK,EAAEL,SAAS;MAChBM,KAAK,EAAEV;IACX,CAAC;EACL;AACJ;AACA;AACAzB,UAAU,CAACJ,cAAc,GAAGA,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}