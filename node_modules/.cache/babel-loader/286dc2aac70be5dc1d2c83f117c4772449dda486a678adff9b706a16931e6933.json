{"ast":null,"code":"var _jsxFileName = \"/Users/hzh-mac/Downloads/VRM/vrm-app/src/index.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader.js';\nimport { VRM, VRMSchema, VRMUtils } from '@pixiv/three-vrm';\nimport { drawConnectors, drawLandmarks } from '@mediapipe/drawing_utils';\nimport { Holistic, POSE_CONNECTIONS, HAND_CONNECTIONS, FACEMESH_TESSELATION } from '@mediapipe/holistic';\nimport { Face, Pose, Hand, Utils, Vector } from 'kalidokit';\nimport * as CameraUtils from '@mediapipe/camera_utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst clamp = Utils.clamp;\nconst lerp = Vector.lerp;\nconst App = () => {\n  _s();\n  const rendererRef = useRef();\n  const canvasRef = useRef();\n  const cameraRef = useRef();\n  const controlsRef = useRef();\n  const sceneRef = useRef();\n  const currentVrmRef = useRef();\n  const [isCameraOn, setCameraOn] = useState(true);\n  const [drawLandmarksEnabled, setDrawLandmarksEnabled] = useState(true);\n  const toggleCamera = useCallback(() => {\n    setCameraOn(!isCameraOn);\n  }, [isCameraOn]);\n  const toggleDrawLandmarks = useCallback(() => {\n    setDrawLandmarksEnabled(!drawLandmarksEnabled);\n  }, [drawLandmarksEnabled]);\n  useEffect(() => {\n    const videoElement = document.querySelector(\".input_video\");\n    const guideCanvas = document.querySelector('canvas.guides');\n    const renderer = new THREE.WebGLRenderer({\n      alpha: true\n    });\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    renderer.setPixelRatio(window.devicePixelRatio);\n    rendererRef.current = renderer;\n    document.body.appendChild(renderer.domElement);\n    const orbitCamera = new THREE.PerspectiveCamera(70, window.innerWidth / window.innerHeight, 0.1, 1000);\n    orbitCamera.position.set(0.0, 1.4, 0.7);\n    cameraRef.current = orbitCamera;\n    const orbitControls = new OrbitControls(orbitCamera, renderer.domElement);\n    orbitControls.screenSpacePanning = true;\n    orbitControls.target.set(0.0, 1.4, 0.0);\n    orbitControls.update();\n    controlsRef.current = orbitControls;\n    const scene = new THREE.Scene();\n    sceneRef.current = scene;\n    const light = new THREE.DirectionalLight(0xffffff);\n    light.position.set(1.0, 1.0, 1.0).normalize();\n    scene.add(light);\n    const clock = new THREE.Clock();\n    function animate() {\n      requestAnimationFrame(animate);\n      if (currentVrmRef.current) {\n        currentVrmRef.current.update(clock.getDelta());\n      }\n      renderer.render(scene, orbitCamera);\n    }\n    animate();\n    const loader = new GLTFLoader();\n    loader.crossOrigin = 'anonymous';\n    loader.load('https://rolling-filters.s3.amazonaws.com/3d/vroid.vrm', gltf => {\n      VRMUtils.removeUnnecessaryJoints(gltf.scene);\n      VRM.from(gltf).then(vrm => {\n        scene.add(vrm.scene);\n        currentVrmRef.current = vrm;\n        currentVrmRef.current.scene.rotation.y = Math.PI;\n      });\n    }, progress => {\n      console.log('Loading model...', 100.0 * (progress.loaded / progress.total), '%');\n    }, error => {\n      console.error(error);\n    });\n    const rigRotation = function (name) {\n      let rotation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n        x: 0,\n        y: 0,\n        z: 0\n      };\n      let dampener = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n      let lerpAmount = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0.3;\n      if (!currentVrmRef.current) {\n        return;\n      }\n      const Part = currentVrmRef.current.humanoid.getBoneNode(VRMSchema.HumanoidBoneName[name]);\n      if (!Part) {\n        return;\n      }\n      const euler = new THREE.Euler(rotation.x * dampener, rotation.y * dampener, rotation.z * dampener);\n      const quaternion = new THREE.Quaternion().setFromEuler(euler);\n      Part.quaternion.slerp(quaternion, lerpAmount);\n    };\n    const rigFace = riggedFace => {\n      if (!currentVrmRef.current) {\n        return;\n      }\n      rigRotation('Neck', riggedFace.head, 0.7);\n      const Blendshape = currentVrmRef.current.blendShapeProxy;\n      const PresetName = VRMSchema.BlendShapePresetName;\n      riggedFace.eye.l = lerp(clamp(1 - riggedFace.eye.l, 0, 1), Blendshape.getValue(PresetName.Blink), 0.5);\n      riggedFace.eye.r = lerp(clamp(1 - riggedFace.eye.r, 0, 1), Blendshape.getValue(PresetName.Blink), 0.5);\n      riggedFace.eye = Face.stabilizeBlink(riggedFace.eye, riggedFace.head.y);\n      Blendshape.setValue(PresetName.Blink, riggedFace.eye.l);\n      Blendshape.setValue(PresetName.I, lerp(riggedFace.mouth.shape.I, Blendshape.getValue(PresetName.I), 0.5));\n      Blendshape.setValue(PresetName.A, lerp(riggedFace.mouth.shape.A, Blendshape.getValue(PresetName.A), 0.5));\n      Blendshape.setValue(PresetName.E, lerp(riggedFace.mouth.shape.E, Blendshape.getValue(PresetName.E), 0.5));\n      Blendshape.setValue(PresetName.O, lerp(riggedFace.mouth.shape.O, Blendshape.getValue(PresetName.O), 0.5));\n      Blendshape.setValue(PresetName.U, lerp(riggedFace.mouth.shape.U, Blendshape.getValue(PresetName.U), 0.5));\n      let lookTarget = new THREE.Euler(lerp(oldLookTarget.x, riggedFace.pupil.y, 0.4), lerp(oldLookTarget.y, riggedFace.pupil.x, 0.4), 0, 'XYZ');\n      oldLookTarget.copy(lookTarget);\n      currentVrmRef.current.lookAt.applyer.lookAt(lookTarget);\n    };\n    const animateVRM = (vrm, results) => {\n      if (!vrm) {\n        return;\n      }\n      let riggedFace;\n      const faceLandmarks = results.faceLandmarks;\n      if (faceLandmarks) {\n        riggedFace = Face.solve(faceLandmarks, {\n          runtime: 'mediapipe',\n          video: videoElement\n        });\n        rigFace(riggedFace);\n      }\n    };\n    let oldLookTarget = new THREE.Euler();\n    const onResults = results => {\n      drawResults(results);\n      animateVRM(currentVrmRef.current, results);\n    };\n    const drawResults = results => {\n      guideCanvas.width = videoElement.videoWidth;\n      guideCanvas.height = videoElement.videoHeight;\n      const canvasCtx = guideCanvas.getContext('2d');\n      canvasCtx.save();\n      canvasCtx.clearRect(0, 0, guideCanvas.width, guideCanvas.height);\n      if (drawLandmarksEnabled) {\n        drawConnectors(canvasCtx, results.faceLandmarks, FACEMESH_TESSELATION, {\n          color: '#C0C0C070',\n          lineWidth: 1\n        });\n        if (results.faceLandmarks && results.faceLandmarks.length === 478) {\n          drawLandmarks(canvasCtx, [results.faceLandmarks[468], results.faceLandmarks[468 + 5]], {\n            color: '#ffe603',\n            lineWidth: 2\n          });\n        }\n      }\n    };\n    const holistic = new Holistic({\n      locateFile: file => {\n        return `https://cdn.jsdelivr.net/npm/@mediapipe/holistic@0.5.1635989137/${file}`;\n      }\n    });\n    holistic.setOptions({\n      modelComplexity: 1,\n      smoothLandmarks: true,\n      minDetectionConfidence: 0.7,\n      minTrackingConfidence: 0.7,\n      refineFaceLandmarks: true\n    });\n    holistic.onResults(onResults);\n    const camera = new CameraUtils.Camera(videoElement, {\n      onFrame: async () => {\n        await holistic.send({\n          image: videoElement\n        });\n      },\n      width: 640,\n      height: 480\n    });\n    if (isCameraOn) {\n      camera.start();\n    } else {\n      camera.stop();\n    }\n  }, [isCameraOn]);\n  useEffect(() => {\n    const drawResults = results => {\n      guideCanvas.width = videoElement.videoWidth;\n      guideCanvas.height = videoElement.videoHeight;\n      const canvasCtx = guideCanvas.getContext('2d');\n      canvasCtx.save();\n      canvasCtx.clearRect(0, 0, guideCanvas.width, guideCanvas.height);\n      if (drawLandmarksEnabled) {\n        drawConnectors(canvasCtx, results.faceLandmarks, FACEMESH_TESSELATION, {\n          color: '#C0C0C070',\n          lineWidth: 1\n        });\n        if (results.faceLandmarks && results.faceLandmarks.length === 478) {\n          drawLandmarks(canvasCtx, [results.faceLandmarks[468], results.faceLandmarks[468 + 5]], {\n            color: '#ffe603',\n            lineWidth: 2\n          });\n        }\n      }\n    };\n  }, [drawLandmarksEnabled]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleCamera,\n      style: {\n        position: 'absolute',\n        top: '10px',\n        right: '10px'\n      },\n      children: isCameraOn ? 'Turn camera off' : 'Turn camera on'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleDrawLandmarks,\n      style: {\n        position: 'absolute',\n        top: '50px',\n        right: '10px'\n      },\n      children: drawLandmarksEnabled ? 'Turn landmarks off' : 'Turn landmarks on'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n      className: \"input_video\",\n      ref: canvasRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      className: \"guides\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 240,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"TZlYcYT+xQMds4te03UE4GRRtc4=\");\n_c = App;\nReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 253,\n  columnNumber: 17\n}, this), document.getElementById('root'));\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useRef","useState","ReactDOM","THREE","OrbitControls","GLTFLoader","VRM","VRMSchema","VRMUtils","drawConnectors","drawLandmarks","Holistic","POSE_CONNECTIONS","HAND_CONNECTIONS","FACEMESH_TESSELATION","Face","Pose","Hand","Utils","Vector","CameraUtils","jsxDEV","_jsxDEV","clamp","lerp","App","_s","rendererRef","canvasRef","cameraRef","controlsRef","sceneRef","currentVrmRef","isCameraOn","setCameraOn","drawLandmarksEnabled","setDrawLandmarksEnabled","toggleCamera","useCallback","toggleDrawLandmarks","videoElement","document","querySelector","guideCanvas","renderer","WebGLRenderer","alpha","setSize","window","innerWidth","innerHeight","setPixelRatio","devicePixelRatio","current","body","appendChild","domElement","orbitCamera","PerspectiveCamera","position","set","orbitControls","screenSpacePanning","target","update","scene","Scene","light","DirectionalLight","normalize","add","clock","Clock","animate","requestAnimationFrame","getDelta","render","loader","crossOrigin","load","gltf","removeUnnecessaryJoints","from","then","vrm","rotation","y","Math","PI","progress","console","log","loaded","total","error","rigRotation","name","arguments","length","undefined","x","z","dampener","lerpAmount","Part","humanoid","getBoneNode","HumanoidBoneName","euler","Euler","quaternion","Quaternion","setFromEuler","slerp","rigFace","riggedFace","head","Blendshape","blendShapeProxy","PresetName","BlendShapePresetName","eye","l","getValue","Blink","r","stabilizeBlink","setValue","I","mouth","shape","A","E","O","U","lookTarget","oldLookTarget","pupil","copy","lookAt","applyer","animateVRM","results","faceLandmarks","solve","runtime","video","onResults","drawResults","width","videoWidth","height","videoHeight","canvasCtx","getContext","save","clearRect","color","lineWidth","holistic","locateFile","file","setOptions","modelComplexity","smoothLandmarks","minDetectionConfidence","minTrackingConfidence","refineFaceLandmarks","camera","Camera","onFrame","send","image","start","stop","children","onClick","style","top","right","fileName","_jsxFileName","lineNumber","columnNumber","className","ref","_c","getElementById","$RefreshReg$"],"sources":["/Users/hzh-mac/Downloads/VRM/vrm-app/src/index.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader.js';\nimport { VRM, VRMSchema, VRMUtils } from '@pixiv/three-vrm';\nimport {drawConnectors,drawLandmarks} from '@mediapipe/drawing_utils'\nimport { Holistic, POSE_CONNECTIONS, HAND_CONNECTIONS, FACEMESH_TESSELATION} from '@mediapipe/holistic';\nimport { Face, Pose, Hand, Utils, Vector } from 'kalidokit';\nimport * as CameraUtils from '@mediapipe/camera_utils';\n\nconst clamp = Utils.clamp;\nconst lerp = Vector.lerp;\n\nconst App = () => {\n  const rendererRef = useRef();\n  const canvasRef = useRef();\n  const cameraRef = useRef();\n  const controlsRef = useRef();\n  const sceneRef = useRef();\n  const currentVrmRef = useRef();\n\n  const [isCameraOn, setCameraOn] = useState(true);\n  const [drawLandmarksEnabled, setDrawLandmarksEnabled] = useState(true);\n\n  const toggleCamera = useCallback(() => {\n    setCameraOn(!isCameraOn);\n  }, [isCameraOn]);\n\n  const toggleDrawLandmarks = useCallback(() => {\n    setDrawLandmarksEnabled(!drawLandmarksEnabled);\n  }, [drawLandmarksEnabled]);\n\n  useEffect(() => {\n    const videoElement = document.querySelector(\".input_video\");\n    const guideCanvas = document.querySelector('canvas.guides');\n\n    const renderer = new THREE.WebGLRenderer({ alpha: true });\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    renderer.setPixelRatio(window.devicePixelRatio);\n    rendererRef.current = renderer;\n    document.body.appendChild(renderer.domElement);\n\n    const orbitCamera = new THREE.PerspectiveCamera(70, window.innerWidth / window.innerHeight, 0.1, 1000);\n    orbitCamera.position.set(0.0, 1.4, 0.7);\n    cameraRef.current = orbitCamera;\n\n    const orbitControls = new OrbitControls(orbitCamera, renderer.domElement);\n    orbitControls.screenSpacePanning = true;\n    orbitControls.target.set(0.0, 1.4, 0.0);\n    orbitControls.update();\n    controlsRef.current = orbitControls;\n\n    const scene = new THREE.Scene();\n    sceneRef.current = scene;\n\n    const light = new THREE.DirectionalLight(0xffffff);\n    light.position.set(1.0, 1.0, 1.0).normalize();\n    scene.add(light);\n\n    const clock = new THREE.Clock();\n\n    function animate() {\n      requestAnimationFrame(animate);\n\n      if (currentVrmRef.current) {\n        currentVrmRef.current.update(clock.getDelta());\n      }\n      renderer.render(scene, orbitCamera);\n    }\n    animate();\n\n    const loader = new GLTFLoader();\n    loader.crossOrigin = 'anonymous';\n    loader.load(\n      'https://rolling-filters.s3.amazonaws.com/3d/vroid.vrm',\n      (gltf) => {\n        VRMUtils.removeUnnecessaryJoints(gltf.scene);\n\n        VRM.from(gltf).then((vrm) => {\n          scene.add(vrm.scene);\n          currentVrmRef.current = vrm;\n          currentVrmRef.current.scene.rotation.y = Math.PI;\n        });\n      },\n      (progress) => {\n        console.log('Loading model...', 100.0 * (progress.loaded / progress.total), '%');\n      },\n      (error) => {\n        console.error(error);\n      }\n    );\n\n    const rigRotation = (name, rotation = { x: 0, y: 0, z: 0 }, dampener = 1, lerpAmount = 0.3) => {\n      if (!currentVrmRef.current) {\n        return;\n      }\n      const Part = currentVrmRef.current.humanoid.getBoneNode(VRMSchema.HumanoidBoneName[name]);\n      if (!Part) {\n        return;\n      }\n\n      const euler = new THREE.Euler(rotation.x * dampener, rotation.y * dampener, rotation.z * dampener);\n      const quaternion = new THREE.Quaternion().setFromEuler(euler);\n      Part.quaternion.slerp(quaternion, lerpAmount);\n    };\n\n    \n\n    const rigFace = (riggedFace) => {\n      if (!currentVrmRef.current) {\n        return;\n      }\n      rigRotation('Neck', riggedFace.head, 0.7);\n\n      const Blendshape = currentVrmRef.current.blendShapeProxy;\n      const PresetName = VRMSchema.BlendShapePresetName;\n\n      riggedFace.eye.l = lerp(clamp(1 - riggedFace.eye.l, 0, 1), Blendshape.getValue(PresetName.Blink), 0.5);\n      riggedFace.eye.r = lerp(clamp(1 - riggedFace.eye.r, 0, 1), Blendshape.getValue(PresetName.Blink), 0.5);\n      riggedFace.eye = Face.stabilizeBlink(riggedFace.eye, riggedFace.head.y);\n      Blendshape.setValue(PresetName.Blink, riggedFace.eye.l);\n\n      Blendshape.setValue(PresetName.I, lerp(riggedFace.mouth.shape.I, Blendshape.getValue(PresetName.I), 0.5));\n      Blendshape.setValue(PresetName.A, lerp(riggedFace.mouth.shape.A, Blendshape.getValue(PresetName.A), 0.5));\n      Blendshape.setValue(PresetName.E, lerp(riggedFace.mouth.shape.E, Blendshape.getValue(PresetName.E), 0.5));\n      Blendshape.setValue(PresetName.O, lerp(riggedFace.mouth.shape.O, Blendshape.getValue(PresetName.O), 0.5));\n      Blendshape.setValue(PresetName.U, lerp(riggedFace.mouth.shape.U, Blendshape.getValue(PresetName.U), 0.5));\n\n      let lookTarget = new THREE.Euler(\n        lerp(oldLookTarget.x, riggedFace.pupil.y, 0.4),\n        lerp(oldLookTarget.y, riggedFace.pupil.x, 0.4),\n        0,\n        'XYZ'\n      );\n      oldLookTarget.copy(lookTarget);\n      currentVrmRef.current.lookAt.applyer.lookAt(lookTarget);\n    };\n\n    const animateVRM = (vrm, results) => {\n      if (!vrm) {\n        return;\n      }\n      let riggedFace;\n\n      const faceLandmarks = results.faceLandmarks;\n\n      if (faceLandmarks) {\n        riggedFace = Face.solve(faceLandmarks, {\n          runtime: 'mediapipe',\n          video: videoElement,\n        });\n        rigFace(riggedFace);\n      }\n    };\n\n    let oldLookTarget = new THREE.Euler();\n    const onResults = (results) => {\n      drawResults(results);\n      animateVRM(currentVrmRef.current, results);\n    };\n\n    const drawResults = (results) => {\n      guideCanvas.width = videoElement.videoWidth;\n      guideCanvas.height = videoElement.videoHeight;\n      const canvasCtx = guideCanvas.getContext('2d');\n      canvasCtx.save();\n      canvasCtx.clearRect(0, 0, guideCanvas.width, guideCanvas.height);\n    \n      if (drawLandmarksEnabled) {\n        drawConnectors(canvasCtx, results.faceLandmarks, FACEMESH_TESSELATION, {\n          color: '#C0C0C070',\n          lineWidth: 1,\n        });\n        if (results.faceLandmarks && results.faceLandmarks.length === 478) {\n          drawLandmarks(canvasCtx, [results.faceLandmarks[468], results.faceLandmarks[468 + 5]], {\n            color: '#ffe603',\n            lineWidth: 2,\n          });\n        }\n      }\n    };\n\n    const holistic = new Holistic({\n      locateFile: (file) => {\n        return `https://cdn.jsdelivr.net/npm/@mediapipe/holistic@0.5.1635989137/${file}`;\n      },\n    },);\n\n    holistic.setOptions({\n      modelComplexity: 1,\n      smoothLandmarks: true,\n      minDetectionConfidence: 0.7,\n      minTrackingConfidence: 0.7,\n      refineFaceLandmarks: true,\n    });\n  \n    holistic.onResults(onResults);\n\n    \n    const camera = new CameraUtils.Camera(videoElement, {\n      onFrame: async () => {\n        await holistic.send({ image: videoElement });\n      },\n      width: 640,\n      height: 480\n    });\n\n    if(isCameraOn) {\n      camera.start();\n    } else {\n      camera.stop();\n    }\n  }, [isCameraOn]);\n\n  useEffect(() => {\n    const drawResults = (results) => {\n      guideCanvas.width = videoElement.videoWidth;\n      guideCanvas.height = videoElement.videoHeight;\n      const canvasCtx = guideCanvas.getContext('2d');\n      canvasCtx.save();\n      canvasCtx.clearRect(0, 0, guideCanvas.width, guideCanvas.height);\n\n      if (drawLandmarksEnabled) {\n        drawConnectors(canvasCtx, results.faceLandmarks, FACEMESH_TESSELATION, {\n          color: '#C0C0C070',\n          lineWidth: 1,\n        });\n        if (results.faceLandmarks && results.faceLandmarks.length === 478) {\n          drawLandmarks(canvasCtx, [results.faceLandmarks[468], results.faceLandmarks[468 + 5]], {\n            color: '#ffe603',\n            lineWidth: 2,\n          });\n        }\n      }\n    };\n  }, [drawLandmarksEnabled]);\n\n  return (\n    <div>\n      <button onClick={toggleCamera} style={{ position: 'absolute', top: '10px', right: '10px' }}>\n        {isCameraOn ? 'Turn camera off' : 'Turn camera on'}\n      </button>\n      <button onClick={toggleDrawLandmarks} style={{ position: 'absolute', top: '50px', right: '10px' }}>\n        {drawLandmarksEnabled ? 'Turn landmarks off' : 'Turn landmarks on'}\n      </button>\n      <video className=\"input_video\" ref={canvasRef} />\n      <canvas className=\"guides\" />\n    </div>\n  );\n};\n\nReactDOM.render(<App />, document.getElementById('root'));"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}