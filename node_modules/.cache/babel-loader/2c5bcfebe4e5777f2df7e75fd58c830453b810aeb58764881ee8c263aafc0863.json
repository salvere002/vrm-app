{"ast":null,"code":"var _jsxFileName = \"/Users/hzh-mac/Downloads/VRM/vrm-app/src/index.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport ReactDOM from 'react-dom';\nimport * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader.js';\nimport { VRM, VRMSchema, VRMUtils } from '@pixiv/three-vrm';\nimport { Holistic, drawLandmarks, drawConnectors, POSE_CONNECTIONS, HAND_CONNECTIONS, FACEMESH_TESSELATION, Camera } from '@mediapipe/holistic';\nimport { Face, Pose, Hand, Utils, Vector } from 'kalidokit';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst remap = Utils.remap;\nconst clamp = Utils.clamp;\nconst lerp = Vector.lerp;\nconst App = () => {\n  _s();\n  const rendererRef = useRef();\n  const canvasRef = useRef();\n  const cameraRef = useRef();\n  const controlsRef = useRef();\n  const sceneRef = useRef();\n  const currentVrmRef = useRef();\n  useEffect(() => {\n    //const guideCanvas = document.querySelector('canvas.guides');\n    //const videoElement = document.querySelector('.input_video');\n    const renderer = new THREE.WebGLRenderer({\n      alpha: true\n    });\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    renderer.setPixelRatio(window.devicePixelRatio);\n    rendererRef.current = renderer;\n    document.body.appendChild(renderer.domElement);\n    const orbitCamera = new THREE.PerspectiveCamera(35, window.innerWidth / window.innerHeight, 0.1, 1000);\n    orbitCamera.position.set(0.0, 1.4, 0.7);\n    cameraRef.current = orbitCamera;\n    const orbitControls = new OrbitControls(orbitCamera, renderer.domElement);\n    orbitControls.screenSpacePanning = true;\n    orbitControls.target.set(0.0, 1.4, 0.0);\n    orbitControls.update();\n    controlsRef.current = orbitControls;\n    const scene = new THREE.Scene();\n    sceneRef.current = scene;\n    const light = new THREE.DirectionalLight(0xffffff);\n    light.position.set(1.0, 1.0, 1.0).normalize();\n    scene.add(light);\n    const clock = new THREE.Clock();\n    function animate() {\n      requestAnimationFrame(animate);\n      if (currentVrmRef.current) {\n        currentVrmRef.current.update(clock.getDelta());\n      }\n      renderer.render(scene, orbitCamera);\n    }\n    animate();\n    const loader = new GLTFLoader();\n    loader.crossOrigin = 'anonymous';\n    loader.load('https://rolling-filters.s3.amazonaws.com/3d/vroid.vrm', gltf => {\n      VRMUtils.removeUnnecessaryJoints(gltf.scene);\n      VRM.from(gltf).then(vrm => {\n        scene.add(vrm.scene);\n        currentVrmRef.current = vrm;\n        currentVrmRef.current.scene.rotation.y = Math.PI;\n      });\n    }, progress => {\n      console.log('Loading model...', 100.0 * (progress.loaded / progress.total), '%');\n    }, error => {\n      console.error(error);\n    });\n    const rigRotation = function (name) {\n      let rotation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n        x: 0,\n        y: 0,\n        z: 0\n      };\n      let dampener = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n      let lerpAmount = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0.3;\n      if (!currentVrmRef.current) {\n        return;\n      }\n      const Part = currentVrmRef.current.humanoid.getBoneNode(VRMSchema.HumanoidBoneName[name]);\n      if (!Part) {\n        return;\n      }\n      const euler = new THREE.Euler(rotation.x * dampener, rotation.y * dampener, rotation.z * dampener);\n      const quaternion = new THREE.Quaternion().setFromEuler(euler);\n      Part.quaternion.slerp(quaternion, lerpAmount);\n    };\n    const rigPosition = function (name) {\n      let position = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n        x: 0,\n        y: 0,\n        z: 0\n      };\n      let dampener = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n      let lerpAmount = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0.3;\n      if (!currentVrmRef.current) {\n        return;\n      }\n      const Part = currentVrmRef.current.humanoid.getBoneNode(VRMSchema.HumanoidBoneName[name]);\n      if (!Part) {\n        return;\n      }\n      const vector = new THREE.Vector3(position.x * dampener, position.y * dampener, position.z * dampener);\n      Part.position.lerp(vector, lerpAmount);\n    };\n    const rigFace = riggedFace => {\n      if (!currentVrmRef.current) {\n        return;\n      }\n      rigRotation('Neck', riggedFace.head, 0.7);\n      const Blendshape = currentVrmRef.current.blendShapeProxy;\n      const PresetName = VRMSchema.BlendShapePresetName;\n      riggedFace.eye.l = lerp(clamp(1 - riggedFace.eye.l, 0, 1), Blendshape.getValue(PresetName.Blink), 0.5);\n      riggedFace.eye.r = lerp(clamp(1 - riggedFace.eye.r, 0, 1), Blendshape.getValue(PresetName.Blink), 0.5);\n      riggedFace.eye = Face.stabilizeBlink(riggedFace.eye, riggedFace.head.y);\n      Blendshape.setValue(PresetName.Blink, riggedFace.eye.l);\n      Blendshape.setValue(PresetName.I, lerp(riggedFace.mouth.shape.I, Blendshape.getValue(PresetName.I), 0.5));\n      Blendshape.setValue(PresetName.A, lerp(riggedFace.mouth.shape.A, Blendshape.getValue(PresetName.A), 0.5));\n      Blendshape.setValue(PresetName.E, lerp(riggedFace.mouth.shape.E, Blendshape.getValue(PresetName.E), 0.5));\n      Blendshape.setValue(PresetName.O, lerp(riggedFace.mouth.shape.O, Blendshape.getValue(PresetName.O), 0.5));\n      Blendshape.setValue(PresetName.U, lerp(riggedFace.mouth.shape.U, Blendshape.getValue(PresetName.U), 0.5));\n      let lookTarget = new THREE.Euler(lerp(oldLookTarget.x, riggedFace.pupil.y, 0.4), lerp(oldLookTarget.y, riggedFace.pupil.x, 0.4), 0, 'XYZ');\n      oldLookTarget.copy(lookTarget);\n      currentVrmRef.current.lookAt.applyer.lookAt(lookTarget);\n    };\n    const animateVRM = (vrm, results) => {\n      if (!vrm) {\n        return;\n      }\n      let riggedPose, riggedLeftHand, riggedRightHand, riggedFace;\n      const faceLandmarks = results.faceLandmarks;\n      const pose3DLandmarks = results.ea;\n      const pose2DLandmarks = results.poseLandmarks;\n      const leftHandLandmarks = results.rightHandLandmarks;\n      const rightHandLandmarks = results.leftHandLandmarks;\n      if (faceLandmarks) {\n        riggedFace = Face.solve(faceLandmarks, {\n          runtime: 'mediapipe',\n          video: videoElement\n        });\n        rigFace(riggedFace);\n      }\n      if (pose2DLandmarks && pose3DLandmarks) {\n        riggedPose = Pose.solve(pose3DLandmarks, pose2DLandmarks, {\n          runtime: 'mediapipe',\n          video: videoElement\n        });\n        rigRotation('Hips', riggedPose.Hips.rotation, 0.7);\n        rigPosition('Hips', {\n          x: -riggedPose.Hips.position.x,\n          y: riggedPose.Hips.position.y + 1,\n          z: -riggedPose.Hips.position.z\n        });\n        rigRotation('Chest', riggedPose.Spine, 0.25, 0.3);\n        rigRotation('Spine', riggedPose.Spine, 0.45, 0.3);\n        rigRotation('RightUpperArm', riggedPose.RightUpperArm, 1, 0.3);\n        rigRotation('RightLowerArm', riggedPose.RightLowerArm, 1, 0.3);\n        rigRotation('LeftUpperArm', riggedPose.LeftUpperArm, 1, 0.3);\n        rigRotation('LeftLowerArm', riggedPose.LeftLowerArm, 1, 0.3);\n        rigRotation('LeftUpperLeg', riggedPose.LeftUpperLeg, 1, 0.3);\n        rigRotation('LeftLowerLeg', riggedPose.LeftLowerLeg, 1, 0.3);\n        rigRotation('RightUpperLeg', riggedPose.RightUpperLeg, 1, 0.3);\n        rigRotation('RightLowerLeg', riggedPose.RightLowerLeg, 1, 0.3);\n      }\n      if (leftHandLandmarks) {\n        riggedLeftHand = Hand.solve(leftHandLandmarks, 'Left');\n        rigRotation('LeftHand', {\n          z: riggedPose.LeftHand.z,\n          y: riggedLeftHand.LeftWrist.y,\n          x: riggedLeftHand.LeftWrist.x\n        });\n        rigRotation('LeftRingProximal', riggedLeftHand.LeftRingProximal);\n        rigRotation('LeftRingIntermediate', riggedLeftHand.LeftRingIntermediate);\n        rigRotation('LeftRingDistal', riggedLeftHand.LeftRingDistal);\n        rigRotation('LeftIndexProximal', riggedLeftHand.LeftIndexProximal);\n        rigRotation('LeftIndexIntermediate', riggedLeftHand.LeftIndexIntermediate);\n        rigRotation('LeftIndexDistal', riggedLeftHand.LeftIndexDistal);\n        rigRotation('LeftMiddleProximal', riggedLeftHand.LeftMiddleProximal);\n        rigRotation('LeftMiddleIntermediate', riggedLeftHand.LeftMiddleIntermediate);\n        rigRotation('LeftMiddleDistal', riggedLeftHand.LeftMiddleDistal);\n        rigRotation('LeftThumbProximal', riggedLeftHand.LeftThumbProximal);\n        rigRotation('LeftThumbIntermediate', riggedLeftHand.LeftThumbIntermediate);\n        rigRotation('LeftThumbDistal', riggedLeftHand.LeftThumbDistal);\n        rigRotation('LeftLittleProximal', riggedLeftHand.LeftLittleProximal);\n        rigRotation('LeftLittleIntermediate', riggedLeftHand.LeftLittleIntermediate);\n        rigRotation('LeftLittleDistal', riggedLeftHand.LeftLittleDistal);\n      }\n      if (rightHandLandmarks) {\n        riggedRightHand = Hand.solve(rightHandLandmarks, 'Right');\n        rigRotation('RightHand', {\n          z: riggedPose.RightHand.z,\n          y: riggedRightHand.RightWrist.y,\n          x: riggedRightHand.RightWrist.x\n        });\n        rigRotation('RightRingProximal', riggedRightHand.RightRingProximal);\n        rigRotation('RightRingIntermediate', riggedRightHand.RightRingIntermediate);\n        rigRotation('RightRingDistal', riggedRightHand.RightRingDistal);\n        rigRotation('RightIndexProximal', riggedRightHand.RightIndexProximal);\n        rigRotation('RightIndexIntermediate', riggedRightHand.RightIndexIntermediate);\n        rigRotation('RightIndexDistal', riggedRightHand.RightIndexDistal);\n        rigRotation('RightMiddleProximal', riggedRightHand.RightMiddleProximal);\n        rigRotation('RightMiddleIntermediate', riggedRightHand.RightMiddleIntermediate);\n        rigRotation('RightMiddleDistal', riggedRightHand.RightMiddleDistal);\n        rigRotation('RightThumbProximal', riggedRightHand.RightThumbProximal);\n        rigRotation('RightThumbIntermediate', riggedRightHand.RightThumbIntermediate);\n        rigRotation('RightThumbDistal', riggedRightHand.RightThumbDistal);\n        rigRotation('RightLittleProximal', riggedRightHand.RightLittleProximal);\n        rigRotation('RightLittleIntermediate', riggedRightHand.RightLittleIntermediate);\n        rigRotation('RightLittleDistal', riggedRightHand.RightLittleDistal);\n      }\n    };\n    let oldLookTarget = new THREE.Euler();\n    const onResults = results => {\n      drawResults(results);\n      animateVRM(currentVrmRef.current, results);\n    };\n    const drawResults = results => {\n      const canvas = canvasRef.current;\n      const canvasCtx = canvas.getContext('2d');\n      canvasCtx.save();\n      canvasCtx.clearRect(0, 0, canvas.width, canvas.height);\n      drawConnectors(canvasCtx, results.poseLandmarks, POSE_CONNECTIONS, {\n        color: '#00cff7',\n        lineWidth: 4\n      });\n      drawLandmarks(canvasCtx, results.poseLandmarks, {\n        color: '#ff0364',\n        lineWidth: 2\n      });\n      drawConnectors(canvasCtx, results.faceLandmarks, FACEMESH_TESSELATION, {\n        color: '#C0C0C070',\n        lineWidth: 1\n      });\n      if (results.faceLandmarks && results.faceLandmarks.length === 478) {\n        drawLandmarks(canvasCtx, [results.faceLandmarks[468], results.faceLandmarks[468 + 5]], {\n          color: '#ffe603',\n          lineWidth: 2\n        });\n      }\n      drawConnectors(canvasCtx, results.leftHandLandmarks, HAND_CONNECTIONS, {\n        color: '#eb1064',\n        lineWidth: 5\n      });\n      drawLandmarks(canvasCtx, results.leftHandLandmarks, {\n        color: '#00cff7',\n        lineWidth: 2\n      });\n      drawConnectors(canvasCtx, results.rightHandLandmarks, HAND_CONNECTIONS, {\n        color: '#22c3e3',\n        lineWidth: 5\n      });\n      drawLandmarks(canvasCtx, results.rightHandLandmarks, {\n        color: '#ff0364',\n        lineWidth: 2\n      });\n    };\n    const holistic = new Holistic({\n      locateFile: file => {\n        return `https://cdn.jsdelivr.net/npm/@mediapipe/holistic@0.1.1613603339/${file}`;\n      }\n    });\n    holistic.setOptions({\n      modelComplexity: 1,\n      smoothLandmarks: true,\n      minDetectionConfidence: 0.7,\n      minTrackingConfidence: 0.7,\n      refineFaceLandmarks: true\n    });\n    const runCamera = async () => {\n      const camera = new Camera(videoElement, {\n        onFrame: async () => {\n          await holistic.send({\n            image: videoElement\n          });\n        },\n        width: 640,\n        height: 480\n      });\n      camera.start();\n    };\n    holistic.onResults(onResults);\n    const drawGuides = results => {\n      guideCanvas.width = videoElement.videoWidth;\n      guideCanvas.height = videoElement.videoHeight;\n      const canvasCtx = guideCanvas.getContext('2d');\n      canvasCtx.save();\n      canvasCtx.clearRect(0, 0, guideCanvas.width, guideCanvas.height);\n      drawConnectors(canvasCtx, results.poseLandmarks, POSE_CONNECTIONS, {\n        color: '#00cff7',\n        lineWidth: 4\n      });\n      drawLandmarks(canvasCtx, results.poseLandmarks, {\n        color: '#ff0364',\n        lineWidth: 2\n      });\n      drawConnectors(canvasCtx, results.faceLandmarks, FACEMESH_TESSELATION, {\n        color: '#C0C0C070',\n        lineWidth: 1\n      });\n      if (results.faceLandmarks && results.faceLandmarks.length === 478) {\n        drawLandmarks(canvasCtx, [results.faceLandmarks[468], results.faceLandmarks[468 + 5]], {\n          color: '#ffe603',\n          lineWidth: 2\n        });\n      }\n      drawConnectors(canvasCtx, results.leftHandLandmarks, HAND_CONNECTIONS, {\n        color: '#eb1064',\n        lineWidth: 5\n      });\n      drawLandmarks(canvasCtx, results.leftHandLandmarks, {\n        color: '#00cff7',\n        lineWidth: 2\n      });\n      drawConnectors(canvasCtx, results.rightHandLandmarks, HAND_CONNECTIONS, {\n        color: '#22c3e3',\n        lineWidth: 5\n      });\n      drawLandmarks(canvasCtx, results.rightHandLandmarks, {\n        color: '#ff0364',\n        lineWidth: 2\n      });\n    };\n    runCamera();\n    return () => {\n      //camera.stop();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"video\", {\n      className: \"input_video\",\n      ref: canvasRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      className: \"guides\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 354,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"yiVFWUXYFj6jUlJPFwruE1QouOs=\");\n_c = App;\nReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 361,\n  columnNumber: 17\n}, this), document.getElementById('root'));\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useRef","ReactDOM","THREE","OrbitControls","GLTFLoader","VRM","VRMSchema","VRMUtils","Holistic","drawLandmarks","drawConnectors","POSE_CONNECTIONS","HAND_CONNECTIONS","FACEMESH_TESSELATION","Camera","Face","Pose","Hand","Utils","Vector","jsxDEV","_jsxDEV","remap","clamp","lerp","App","_s","rendererRef","canvasRef","cameraRef","controlsRef","sceneRef","currentVrmRef","renderer","WebGLRenderer","alpha","setSize","window","innerWidth","innerHeight","setPixelRatio","devicePixelRatio","current","document","body","appendChild","domElement","orbitCamera","PerspectiveCamera","position","set","orbitControls","screenSpacePanning","target","update","scene","Scene","light","DirectionalLight","normalize","add","clock","Clock","animate","requestAnimationFrame","getDelta","render","loader","crossOrigin","load","gltf","removeUnnecessaryJoints","from","then","vrm","rotation","y","Math","PI","progress","console","log","loaded","total","error","rigRotation","name","arguments","length","undefined","x","z","dampener","lerpAmount","Part","humanoid","getBoneNode","HumanoidBoneName","euler","Euler","quaternion","Quaternion","setFromEuler","slerp","rigPosition","vector","Vector3","rigFace","riggedFace","head","Blendshape","blendShapeProxy","PresetName","BlendShapePresetName","eye","l","getValue","Blink","r","stabilizeBlink","setValue","I","mouth","shape","A","E","O","U","lookTarget","oldLookTarget","pupil","copy","lookAt","applyer","animateVRM","results","riggedPose","riggedLeftHand","riggedRightHand","faceLandmarks","pose3DLandmarks","ea","pose2DLandmarks","poseLandmarks","leftHandLandmarks","rightHandLandmarks","solve","runtime","video","videoElement","Hips","Spine","RightUpperArm","RightLowerArm","LeftUpperArm","LeftLowerArm","LeftUpperLeg","LeftLowerLeg","RightUpperLeg","RightLowerLeg","LeftHand","LeftWrist","LeftRingProximal","LeftRingIntermediate","LeftRingDistal","LeftIndexProximal","LeftIndexIntermediate","LeftIndexDistal","LeftMiddleProximal","LeftMiddleIntermediate","LeftMiddleDistal","LeftThumbProximal","LeftThumbIntermediate","LeftThumbDistal","LeftLittleProximal","LeftLittleIntermediate","LeftLittleDistal","RightHand","RightWrist","RightRingProximal","RightRingIntermediate","RightRingDistal","RightIndexProximal","RightIndexIntermediate","RightIndexDistal","RightMiddleProximal","RightMiddleIntermediate","RightMiddleDistal","RightThumbProximal","RightThumbIntermediate","RightThumbDistal","RightLittleProximal","RightLittleIntermediate","RightLittleDistal","onResults","drawResults","canvas","canvasCtx","getContext","save","clearRect","width","height","color","lineWidth","holistic","locateFile","file","setOptions","modelComplexity","smoothLandmarks","minDetectionConfidence","minTrackingConfidence","refineFaceLandmarks","runCamera","camera","onFrame","send","image","start","drawGuides","guideCanvas","videoWidth","videoHeight","children","className","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","getElementById","$RefreshReg$"],"sources":["/Users/hzh-mac/Downloads/VRM/vrm-app/src/index.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport ReactDOM from 'react-dom';\nimport * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader.js';\nimport { VRM, VRMSchema, VRMUtils } from '@pixiv/three-vrm';\nimport { Holistic, drawLandmarks, drawConnectors, POSE_CONNECTIONS, HAND_CONNECTIONS, FACEMESH_TESSELATION, Camera } from '@mediapipe/holistic';\nimport { Face, Pose, Hand, Utils, Vector } from 'kalidokit';\n\nconst remap = Utils.remap;\nconst clamp = Utils.clamp;\nconst lerp = Vector.lerp;\n\nconst App = () => {\n  const rendererRef = useRef();\n  const canvasRef = useRef();\n  const cameraRef = useRef();\n  const controlsRef = useRef();\n  const sceneRef = useRef();\n  const currentVrmRef = useRef();\n\n  useEffect(() => {\n    //const guideCanvas = document.querySelector('canvas.guides');\n    //const videoElement = document.querySelector('.input_video');\n    const renderer = new THREE.WebGLRenderer({ alpha: true });\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    renderer.setPixelRatio(window.devicePixelRatio);\n    rendererRef.current = renderer;\n    document.body.appendChild(renderer.domElement);\n\n    const orbitCamera = new THREE.PerspectiveCamera(35, window.innerWidth / window.innerHeight, 0.1, 1000);\n    orbitCamera.position.set(0.0, 1.4, 0.7);\n    cameraRef.current = orbitCamera;\n\n    const orbitControls = new OrbitControls(orbitCamera, renderer.domElement);\n    orbitControls.screenSpacePanning = true;\n    orbitControls.target.set(0.0, 1.4, 0.0);\n    orbitControls.update();\n    controlsRef.current = orbitControls;\n\n    const scene = new THREE.Scene();\n    sceneRef.current = scene;\n\n    const light = new THREE.DirectionalLight(0xffffff);\n    light.position.set(1.0, 1.0, 1.0).normalize();\n    scene.add(light);\n\n    const clock = new THREE.Clock();\n\n    function animate() {\n      requestAnimationFrame(animate);\n\n      if (currentVrmRef.current) {\n        currentVrmRef.current.update(clock.getDelta());\n      }\n      renderer.render(scene, orbitCamera);\n    }\n    animate();\n\n    const loader = new GLTFLoader();\n    loader.crossOrigin = 'anonymous';\n    loader.load(\n      'https://rolling-filters.s3.amazonaws.com/3d/vroid.vrm',\n      (gltf) => {\n        VRMUtils.removeUnnecessaryJoints(gltf.scene);\n\n        VRM.from(gltf).then((vrm) => {\n          scene.add(vrm.scene);\n          currentVrmRef.current = vrm;\n          currentVrmRef.current.scene.rotation.y = Math.PI;\n        });\n      },\n      (progress) => {\n        console.log('Loading model...', 100.0 * (progress.loaded / progress.total), '%');\n      },\n      (error) => {\n        console.error(error);\n      }\n    );\n\n    const rigRotation = (name, rotation = { x: 0, y: 0, z: 0 }, dampener = 1, lerpAmount = 0.3) => {\n      if (!currentVrmRef.current) {\n        return;\n      }\n      const Part = currentVrmRef.current.humanoid.getBoneNode(VRMSchema.HumanoidBoneName[name]);\n      if (!Part) {\n        return;\n      }\n\n      const euler = new THREE.Euler(rotation.x * dampener, rotation.y * dampener, rotation.z * dampener);\n      const quaternion = new THREE.Quaternion().setFromEuler(euler);\n      Part.quaternion.slerp(quaternion, lerpAmount);\n    };\n\n    const rigPosition = (name, position = { x: 0, y: 0, z: 0 }, dampener = 1, lerpAmount = 0.3) => {\n      if (!currentVrmRef.current) {\n        return;\n      }\n      const Part = currentVrmRef.current.humanoid.getBoneNode(VRMSchema.HumanoidBoneName[name]);\n      if (!Part) {\n        return;\n      }\n\n      const vector = new THREE.Vector3(position.x * dampener, position.y * dampener, position.z * dampener);\n      Part.position.lerp(vector, lerpAmount);\n    };\n\n    const rigFace = (riggedFace) => {\n      if (!currentVrmRef.current) {\n        return;\n      }\n      rigRotation('Neck', riggedFace.head, 0.7);\n\n      const Blendshape = currentVrmRef.current.blendShapeProxy;\n      const PresetName = VRMSchema.BlendShapePresetName;\n\n      riggedFace.eye.l = lerp(clamp(1 - riggedFace.eye.l, 0, 1), Blendshape.getValue(PresetName.Blink), 0.5);\n      riggedFace.eye.r = lerp(clamp(1 - riggedFace.eye.r, 0, 1), Blendshape.getValue(PresetName.Blink), 0.5);\n      riggedFace.eye = Face.stabilizeBlink(riggedFace.eye, riggedFace.head.y);\n      Blendshape.setValue(PresetName.Blink, riggedFace.eye.l);\n\n      Blendshape.setValue(PresetName.I, lerp(riggedFace.mouth.shape.I, Blendshape.getValue(PresetName.I), 0.5));\n      Blendshape.setValue(PresetName.A, lerp(riggedFace.mouth.shape.A, Blendshape.getValue(PresetName.A), 0.5));\n      Blendshape.setValue(PresetName.E, lerp(riggedFace.mouth.shape.E, Blendshape.getValue(PresetName.E), 0.5));\n      Blendshape.setValue(PresetName.O, lerp(riggedFace.mouth.shape.O, Blendshape.getValue(PresetName.O), 0.5));\n      Blendshape.setValue(PresetName.U, lerp(riggedFace.mouth.shape.U, Blendshape.getValue(PresetName.U), 0.5));\n\n      let lookTarget = new THREE.Euler(\n        lerp(oldLookTarget.x, riggedFace.pupil.y, 0.4),\n        lerp(oldLookTarget.y, riggedFace.pupil.x, 0.4),\n        0,\n        'XYZ'\n      );\n      oldLookTarget.copy(lookTarget);\n      currentVrmRef.current.lookAt.applyer.lookAt(lookTarget);\n    };\n\n    const animateVRM = (vrm, results) => {\n      if (!vrm) {\n        return;\n      }\n      let riggedPose, riggedLeftHand, riggedRightHand, riggedFace;\n\n      const faceLandmarks = results.faceLandmarks;\n      const pose3DLandmarks = results.ea;\n      const pose2DLandmarks = results.poseLandmarks;\n      const leftHandLandmarks = results.rightHandLandmarks;\n      const rightHandLandmarks = results.leftHandLandmarks;\n\n      if (faceLandmarks) {\n        riggedFace = Face.solve(faceLandmarks, {\n          runtime: 'mediapipe',\n          video: videoElement,\n        });\n        rigFace(riggedFace);\n      }\n\n      if (pose2DLandmarks && pose3DLandmarks) {\n        riggedPose = Pose.solve(pose3DLandmarks, pose2DLandmarks, {\n          runtime: 'mediapipe',\n          video: videoElement,\n        });\n        rigRotation('Hips', riggedPose.Hips.rotation, 0.7);\n        rigPosition('Hips', {\n          x: -riggedPose.Hips.position.x,\n          y: riggedPose.Hips.position.y + 1,\n          z: -riggedPose.Hips.position.z,\n        });\n        rigRotation('Chest', riggedPose.Spine, 0.25, 0.3);\n        rigRotation('Spine', riggedPose.Spine, 0.45, 0.3);\n        rigRotation('RightUpperArm', riggedPose.RightUpperArm, 1, 0.3);\n        rigRotation('RightLowerArm', riggedPose.RightLowerArm, 1, 0.3);\n        rigRotation('LeftUpperArm', riggedPose.LeftUpperArm, 1, 0.3);\n        rigRotation('LeftLowerArm', riggedPose.LeftLowerArm, 1, 0.3);\n        rigRotation('LeftUpperLeg', riggedPose.LeftUpperLeg, 1, 0.3);\n        rigRotation('LeftLowerLeg', riggedPose.LeftLowerLeg, 1, 0.3);\n        rigRotation('RightUpperLeg', riggedPose.RightUpperLeg, 1, 0.3);\n        rigRotation('RightLowerLeg', riggedPose.RightLowerLeg, 1, 0.3);\n      }\n\n      if (leftHandLandmarks) {\n        riggedLeftHand = Hand.solve(leftHandLandmarks, 'Left');\n        rigRotation('LeftHand', {\n          z: riggedPose.LeftHand.z,\n          y: riggedLeftHand.LeftWrist.y,\n          x: riggedLeftHand.LeftWrist.x,\n        });\n        rigRotation('LeftRingProximal', riggedLeftHand.LeftRingProximal);\n        rigRotation('LeftRingIntermediate', riggedLeftHand.LeftRingIntermediate);\n        rigRotation('LeftRingDistal', riggedLeftHand.LeftRingDistal);\n        rigRotation('LeftIndexProximal', riggedLeftHand.LeftIndexProximal);\n        rigRotation('LeftIndexIntermediate', riggedLeftHand.LeftIndexIntermediate);\n        rigRotation('LeftIndexDistal', riggedLeftHand.LeftIndexDistal);\n        rigRotation('LeftMiddleProximal', riggedLeftHand.LeftMiddleProximal);\n        rigRotation('LeftMiddleIntermediate', riggedLeftHand.LeftMiddleIntermediate);\n        rigRotation('LeftMiddleDistal', riggedLeftHand.LeftMiddleDistal);\n        rigRotation('LeftThumbProximal', riggedLeftHand.LeftThumbProximal);\n        rigRotation('LeftThumbIntermediate', riggedLeftHand.LeftThumbIntermediate);\n        rigRotation('LeftThumbDistal', riggedLeftHand.LeftThumbDistal);\n        rigRotation('LeftLittleProximal', riggedLeftHand.LeftLittleProximal);\n        rigRotation('LeftLittleIntermediate', riggedLeftHand.LeftLittleIntermediate);\n        rigRotation('LeftLittleDistal', riggedLeftHand.LeftLittleDistal);\n      }\n      if (rightHandLandmarks) {\n        riggedRightHand = Hand.solve(rightHandLandmarks, 'Right');\n        rigRotation('RightHand', {\n          z: riggedPose.RightHand.z,\n          y: riggedRightHand.RightWrist.y,\n          x: riggedRightHand.RightWrist.x,\n        });\n        rigRotation('RightRingProximal', riggedRightHand.RightRingProximal);\n        rigRotation('RightRingIntermediate', riggedRightHand.RightRingIntermediate);\n        rigRotation('RightRingDistal', riggedRightHand.RightRingDistal);\n        rigRotation('RightIndexProximal', riggedRightHand.RightIndexProximal);\n        rigRotation('RightIndexIntermediate', riggedRightHand.RightIndexIntermediate);\n        rigRotation('RightIndexDistal', riggedRightHand.RightIndexDistal);\n        rigRotation('RightMiddleProximal', riggedRightHand.RightMiddleProximal);\n        rigRotation('RightMiddleIntermediate', riggedRightHand.RightMiddleIntermediate);\n        rigRotation('RightMiddleDistal', riggedRightHand.RightMiddleDistal);\n        rigRotation('RightThumbProximal', riggedRightHand.RightThumbProximal);\n        rigRotation('RightThumbIntermediate', riggedRightHand.RightThumbIntermediate);\n        rigRotation('RightThumbDistal', riggedRightHand.RightThumbDistal);\n        rigRotation('RightLittleProximal', riggedRightHand.RightLittleProximal);\n        rigRotation('RightLittleIntermediate', riggedRightHand.RightLittleIntermediate);\n        rigRotation('RightLittleDistal', riggedRightHand.RightLittleDistal);\n      }\n    };\n\n    let oldLookTarget = new THREE.Euler();\n    const onResults = (results) => {\n      drawResults(results);\n      animateVRM(currentVrmRef.current, results);\n    };\n\n    const drawResults = (results) => {\n      const canvas = canvasRef.current;\n      const canvasCtx = canvas.getContext('2d');\n      canvasCtx.save();\n      canvasCtx.clearRect(0, 0, canvas.width, canvas.height);\n      drawConnectors(canvasCtx, results.poseLandmarks, POSE_CONNECTIONS, {\n        color: '#00cff7',\n        lineWidth: 4,\n      });\n      drawLandmarks(canvasCtx, results.poseLandmarks, {\n        color: '#ff0364',\n        lineWidth: 2,\n      });\n      drawConnectors(canvasCtx, results.faceLandmarks, FACEMESH_TESSELATION, {\n        color: '#C0C0C070',\n        lineWidth: 1,\n      });\n      if (results.faceLandmarks && results.faceLandmarks.length === 478) {\n        drawLandmarks(canvasCtx, [results.faceLandmarks[468], results.faceLandmarks[468 + 5]], {\n          color: '#ffe603',\n          lineWidth: 2,\n        });\n      }\n      drawConnectors(canvasCtx, results.leftHandLandmarks, HAND_CONNECTIONS, {\n        color: '#eb1064',\n        lineWidth: 5,\n      });\n      drawLandmarks(canvasCtx, results.leftHandLandmarks, {\n        color: '#00cff7',\n        lineWidth: 2,\n      });\n      drawConnectors(canvasCtx, results.rightHandLandmarks, HAND_CONNECTIONS, {\n        color: '#22c3e3',\n        lineWidth: 5,\n      });\n      drawLandmarks(canvasCtx, results.rightHandLandmarks, {\n        color: '#ff0364',\n        lineWidth: 2,\n      });\n    };\n\n    const holistic = new Holistic({\n      locateFile: (file) => {\n        return `https://cdn.jsdelivr.net/npm/@mediapipe/holistic@0.1.1613603339/${file}`;\n      },\n    },);\n\n    holistic.setOptions({\n      modelComplexity: 1,\n      smoothLandmarks: true,\n      minDetectionConfidence: 0.7,\n      minTrackingConfidence: 0.7,\n      refineFaceLandmarks: true,\n    });\n    const runCamera = async () => {\n  \n      const camera = new Camera(videoElement, {\n        onFrame: async () => {\n          await holistic.send({ image: videoElement });\n        },\n        width: 640,\n        height: 480\n      });\n\n      camera.start();\n\n  };\n    holistic.onResults(onResults);\n\n    const drawGuides = (results) => {\n      guideCanvas.width = videoElement.videoWidth;\n      guideCanvas.height = videoElement.videoHeight;\n      const canvasCtx = guideCanvas.getContext('2d');\n      canvasCtx.save();\n      canvasCtx.clearRect(0, 0, guideCanvas.width, guideCanvas.height);\n      drawConnectors(canvasCtx, results.poseLandmarks, POSE_CONNECTIONS, {\n        color: '#00cff7',\n        lineWidth: 4,\n      });\n      drawLandmarks(canvasCtx, results.poseLandmarks, {\n        color: '#ff0364',\n        lineWidth: 2,\n      });\n      drawConnectors(canvasCtx, results.faceLandmarks, FACEMESH_TESSELATION, {\n        color: '#C0C0C070',\n        lineWidth: 1,\n      });\n      if (results.faceLandmarks && results.faceLandmarks.length === 478) {\n        drawLandmarks(canvasCtx, [results.faceLandmarks[468], results.faceLandmarks[468 + 5]], {\n          color: '#ffe603',\n          lineWidth: 2,\n        });\n      }\n      drawConnectors(canvasCtx, results.leftHandLandmarks, HAND_CONNECTIONS, {\n        color: '#eb1064',\n        lineWidth: 5,\n      });\n      drawLandmarks(canvasCtx, results.leftHandLandmarks, {\n        color: '#00cff7',\n        lineWidth: 2,\n      });\n      drawConnectors(canvasCtx, results.rightHandLandmarks, HAND_CONNECTIONS, {\n        color: '#22c3e3',\n        lineWidth: 5,\n      });\n      drawLandmarks(canvasCtx, results.rightHandLandmarks, {\n        color: '#ff0364',\n        lineWidth: 2,\n      });\n    };\n\n    runCamera();\n\n    return () => {\n      //camera.stop();\n    };\n  }, []);\n\n  return (\n    <div>\n      <video className=\"input_video\" ref={canvasRef} />\n      <canvas className=\"guides\" />\n    </div>\n  );\n};\n\nReactDOM.render(<App />, document.getElementById('root'));"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}