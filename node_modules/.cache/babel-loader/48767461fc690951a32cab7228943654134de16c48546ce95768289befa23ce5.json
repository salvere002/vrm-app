{"ast":null,"code":"var _jsxFileName = \"/Users/hzh-mac/Downloads/VRM/vrm-app/src/index.js\";\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader.js';\nimport { VRM, VRMSchema, VRMUtils } from '@pixiv/three-vrm';\nimport { drawConnectors, drawLandmarks } from '@mediapipe/drawing_utils';\nimport { Holistic, POSE_CONNECTIONS, HAND_CONNECTIONS, FACEMESH_TESSELATION } from '@mediapipe/holistic';\nimport { Face, Pose, Hand, Utils, Vector } from 'kalidokit';\nimport * as CameraUtils from '@mediapipe/camera_utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst clamp = Utils.clamp;\nconst lerp = Vector.lerp;\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.toggleCamera = () => {\n      this.setState(prevState => ({\n        isCameraOn: !prevState.isCameraOn\n      }));\n    };\n    this.state = {\n      isCameraOn: true\n    };\n    this.rendererRe = /*#__PURE__*/React.createRef();\n    this.canvasRef = /*#__PURE__*/React.createRef();\n    this.cameraRef = /*#__PURE__*/React.createRef();\n    this.controlsRef = /*#__PURE__*/React.createRef();\n    this.sceneRef = /*#__PURE__*/React.createRef();\n    this.currentVrmRef = /*#__PURE__*/React.createRef();\n    this.camOn = false;\n    useEffect(() => {\n      if (this.rendererRe && this.canvasRef && this.cameraRef && this.controlsRef && this.sceneRef && this.currentVrmRef) {}\n    });\n  }\n  componentDidMount() {\n    var _this = this;\n    // The content of the useEffect hook can be directly moved to this componentDidMount method\n\n    const videoElement = document.querySelector(\".input_video\");\n    const guideCanvas = document.querySelector('canvas.guides');\n    const renderer = new THREE.WebGLRenderer({\n      alpha: true\n    });\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    renderer.setPixelRatio(window.devicePixelRatio);\n    this.rendererRe.current = renderer;\n    document.body.appendChild(renderer.domElement);\n    const orbitCamera = new THREE.PerspectiveCamera(70, window.innerWidth / window.innerHeight, 0.1, 1000);\n    orbitCamera.position.set(0.0, 1.4, 0.7);\n    this.cameraRef.current = orbitCamera;\n    const orbitControls = new OrbitControls(orbitCamera, renderer.domElement);\n    orbitControls.screenSpacePanning = true;\n    orbitControls.target.set(0.0, 1.4, 0.0);\n    orbitControls.update();\n    this.controlsRef.current = orbitControls;\n    const scene = new THREE.Scene();\n    this.sceneRef.current = scene;\n    const light = new THREE.DirectionalLight(0xafffff);\n    light.position.set(1.0, 1.0, 1.0).normalize();\n    scene.add(light);\n    const clock = new THREE.Clock();\n    const loader = new GLTFLoader();\n    loader.crossOrigin = 'anonymous';\n    loader.load('https://rolling-filters.s3.amazonaws.com/3d/vroid.vrm', gltf => {\n      VRMUtils.removeUnnecessaryJoints(gltf.scene);\n      VRM.from(gltf).then(vrm => {\n        scene.add(vrm.scene);\n        this.currentVrmRef.current = vrm;\n        this.currentVrmRef.current.scene.rotation.y = Math.PI;\n      });\n    }, progress => {\n      console.log('Loading model...', 100.0 * (progress.loaded / progress.total), '%');\n    }, error => {\n      console.error(error);\n    });\n    function animate() {\n      requestAnimationFrame(animate);\n      if (this.currentVrmRef.current) {\n        this.currentVrmRef.current.update(clock.getDelta());\n      }\n      renderer.render(scene, orbitCamera);\n    }\n    animate();\n    const rigRotation = function (name) {\n      let rotation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n        x: 0,\n        y: 0,\n        z: 0\n      };\n      let dampener = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n      let lerpAmount = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0.3;\n      if (!_this.currentVrmRef.current) {\n        return;\n      }\n      const Part = _this.currentVrmRef.current.humanoid.getBoneNode(VRMSchema.HumanoidBoneName[name]);\n      if (!Part) {\n        return;\n      }\n      const euler = new THREE.Euler(rotation.x * dampener, rotation.y * dampener, rotation.z * dampener);\n      const quaternion = new THREE.Quaternion().setFromEuler(euler);\n      Part.quaternion.slerp(quaternion, lerpAmount);\n    };\n    const rigFace = riggedFace => {\n      if (!this.currentVrmRef.current) {\n        return;\n      }\n      rigRotation('Neck', riggedFace.head, 0.7);\n      const Blendshape = this.currentVrmRef.current.blendShapeProxy;\n      const PresetName = VRMSchema.BlendShapePresetName;\n      riggedFace.eye.l = lerp(clamp(1 - riggedFace.eye.l, 0, 1), Blendshape.getValue(PresetName.Blink), 0.5);\n      riggedFace.eye.r = lerp(clamp(1 - riggedFace.eye.r, 0, 1), Blendshape.getValue(PresetName.Blink), 0.5);\n      riggedFace.eye = Face.stabilizeBlink(riggedFace.eye, riggedFace.head.y);\n      Blendshape.setValue(PresetName.Blink, riggedFace.eye.l);\n      Blendshape.setValue(PresetName.I, lerp(riggedFace.mouth.shape.I, Blendshape.getValue(PresetName.I), 0.5));\n      Blendshape.setValue(PresetName.A, lerp(riggedFace.mouth.shape.A, Blendshape.getValue(PresetName.A), 0.5));\n      Blendshape.setValue(PresetName.E, lerp(riggedFace.mouth.shape.E, Blendshape.getValue(PresetName.E), 0.5));\n      Blendshape.setValue(PresetName.O, lerp(riggedFace.mouth.shape.O, Blendshape.getValue(PresetName.O), 0.5));\n      Blendshape.setValue(PresetName.U, lerp(riggedFace.mouth.shape.U, Blendshape.getValue(PresetName.U), 0.5));\n      let lookTarget = new THREE.Euler(lerp(oldLookTarget.x, riggedFace.pupil.y, 0.4), lerp(oldLookTarget.y, riggedFace.pupil.x, 0.4), 0, 'XYZ');\n      oldLookTarget.copy(lookTarget);\n      this.currentVrmRef.current.lookAt.applyer.lookAt(lookTarget);\n    };\n    const animateVRM = (vrm, results) => {\n      if (!vrm) {\n        return;\n      }\n      let riggedFace;\n      const faceLandmarks = results.faceLandmarks;\n      if (faceLandmarks) {\n        riggedFace = Face.solve(faceLandmarks, {\n          runtime: 'mediapipe',\n          video: videoElement\n        });\n        rigFace(riggedFace);\n      }\n    };\n    let oldLookTarget = new THREE.Euler();\n    const onResults = results => {\n      drawResults(results);\n      animateVRM(this.currentVrmRef.current, results);\n    };\n    const drawResults = results => {\n      guideCanvas.width = videoElement.videoWidth;\n      guideCanvas.height = videoElement.videoHeight;\n      const canvasCtx = guideCanvas.getContext('2d');\n      canvasCtx.save();\n      canvasCtx.clearRect(0, 0, guideCanvas.width, guideCanvas.height);\n      drawConnectors(canvasCtx, results.faceLandmarks, FACEMESH_TESSELATION, {\n        color: '#C0C0C070',\n        lineWidth: 1\n      });\n      if (results.faceLandmarks && results.faceLandmarks.length === 478) {\n        drawLandmarks(canvasCtx, [results.faceLandmarks[468], results.faceLandmarks[468 + 5]], {\n          color: '#ffe603',\n          lineWidth: 2\n        });\n      }\n    };\n    const holistic = new Holistic({\n      locateFile: file => {\n        return `https://cdn.jsdelivr.net/npm/@mediapipe/holistic@0.5.1635989137/${file}`;\n      }\n    });\n    holistic.setOptions({\n      modelComplexity: 1,\n      smoothLandmarks: true,\n      minDetectionConfidence: 0.7,\n      minTrackingConfidence: 0.7,\n      refineFaceLandmarks: true\n    });\n    holistic.onResults(onResults);\n    const camera = new CameraUtils.Camera(videoElement, {\n      onFrame: async () => {\n        await holistic.send({\n          image: videoElement\n        });\n      },\n      width: 640,\n      height: 480\n    });\n    if (!this.camOn) {\n      this.camOn = true;\n      camera.start();\n    }\n    if (this.isCameraOn) {\n      //camera.start();\n    } else {\n      //camera.stop();\n    }\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.toggleCamera,\n        style: {\n          position: 'absolute',\n          top: '10px',\n          right: '10px'\n        },\n        children: this.state.isCameraOn ? 'Turn camera off' : 'Turn camera on'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n        className: \"input_video\",\n        ref: this.canvasRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n        className: \"guides\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 7\n    }, this);\n  }\n}\nReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 246,\n  columnNumber: 17\n}, this), document.getElementById('root'));","map":{"version":3,"names":["React","Component","ReactDOM","THREE","OrbitControls","GLTFLoader","VRM","VRMSchema","VRMUtils","drawConnectors","drawLandmarks","Holistic","POSE_CONNECTIONS","HAND_CONNECTIONS","FACEMESH_TESSELATION","Face","Pose","Hand","Utils","Vector","CameraUtils","jsxDEV","_jsxDEV","clamp","lerp","App","constructor","props","toggleCamera","setState","prevState","isCameraOn","state","rendererRe","createRef","canvasRef","cameraRef","controlsRef","sceneRef","currentVrmRef","camOn","useEffect","componentDidMount","_this","videoElement","document","querySelector","guideCanvas","renderer","WebGLRenderer","alpha","setSize","window","innerWidth","innerHeight","setPixelRatio","devicePixelRatio","current","body","appendChild","domElement","orbitCamera","PerspectiveCamera","position","set","orbitControls","screenSpacePanning","target","update","scene","Scene","light","DirectionalLight","normalize","add","clock","Clock","loader","crossOrigin","load","gltf","removeUnnecessaryJoints","from","then","vrm","rotation","y","Math","PI","progress","console","log","loaded","total","error","animate","requestAnimationFrame","getDelta","render","rigRotation","name","arguments","length","undefined","x","z","dampener","lerpAmount","Part","humanoid","getBoneNode","HumanoidBoneName","euler","Euler","quaternion","Quaternion","setFromEuler","slerp","rigFace","riggedFace","head","Blendshape","blendShapeProxy","PresetName","BlendShapePresetName","eye","l","getValue","Blink","r","stabilizeBlink","setValue","I","mouth","shape","A","E","O","U","lookTarget","oldLookTarget","pupil","copy","lookAt","applyer","animateVRM","results","faceLandmarks","solve","runtime","video","onResults","drawResults","width","videoWidth","height","videoHeight","canvasCtx","getContext","save","clearRect","color","lineWidth","holistic","locateFile","file","setOptions","modelComplexity","smoothLandmarks","minDetectionConfidence","minTrackingConfidence","refineFaceLandmarks","camera","Camera","onFrame","send","image","start","children","onClick","style","top","right","fileName","_jsxFileName","lineNumber","columnNumber","className","ref","getElementById"],"sources":["/Users/hzh-mac/Downloads/VRM/vrm-app/src/index.js"],"sourcesContent":["import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader.js';\nimport { VRM, VRMSchema, VRMUtils } from '@pixiv/three-vrm';\nimport {drawConnectors,drawLandmarks} from '@mediapipe/drawing_utils'\nimport { Holistic, POSE_CONNECTIONS, HAND_CONNECTIONS, FACEMESH_TESSELATION} from '@mediapipe/holistic';\nimport { Face, Pose, Hand, Utils, Vector } from 'kalidokit';\nimport * as CameraUtils from '@mediapipe/camera_utils';\n\nconst clamp = Utils.clamp;\nconst lerp = Vector.lerp;\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isCameraOn: true\n    };\n\n    this.rendererRe = React.createRef();\n    this.canvasRef = React.createRef();\n    this.cameraRef = React.createRef();\n    this.controlsRef = React.createRef();\n    this.sceneRef = React.createRef();\n    this.currentVrmRef = React.createRef();\n    this.camOn = false;\n    useEffect(()=>{\n\n      if(this.rendererRe &&\n        this.canvasRef &&\n        this.cameraRef &&\n        this.controlsRef &&\n        this.sceneRef &&\n        this.currentVrmRef)\n        {}      \n\n  })\n  }\n\n  toggleCamera = () => {\n    this.setState((prevState) => ({\n      isCameraOn: !prevState.isCameraOn\n    }));\n  };\n\n  componentDidMount() {\n    // The content of the useEffect hook can be directly moved to this componentDidMount method\n    \n    const videoElement = document.querySelector(\".input_video\");\n    const guideCanvas = document.querySelector('canvas.guides');\n\n    const renderer = new THREE.WebGLRenderer({ alpha: true });\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    renderer.setPixelRatio(window.devicePixelRatio);\n    this.rendererRe.current = renderer;\n    document.body.appendChild(renderer.domElement);\n\n    const orbitCamera = new THREE.PerspectiveCamera(70, window.innerWidth / window.innerHeight, 0.1, 1000);\n    orbitCamera.position.set(0.0, 1.4, 0.7);\n    this.cameraRef.current = orbitCamera;\n\n    const orbitControls = new OrbitControls(orbitCamera, renderer.domElement);\n    orbitControls.screenSpacePanning = true;\n    orbitControls.target.set(0.0, 1.4, 0.0);\n    orbitControls.update();\n    this.controlsRef.current = orbitControls;\n\n    const scene = new THREE.Scene();\n    this.sceneRef.current = scene;\n\n    const light = new THREE.DirectionalLight(0xafffff);\n    light.position.set(1.0, 1.0, 1.0).normalize();\n    scene.add(light);\n\n    const clock = new THREE.Clock();\n    const loader = new GLTFLoader();\n    loader.crossOrigin = 'anonymous';\n    loader.load(\n      'https://rolling-filters.s3.amazonaws.com/3d/vroid.vrm',\n      (gltf) => {\n        VRMUtils.removeUnnecessaryJoints(gltf.scene);\n\n        VRM.from(gltf).then((vrm) => {\n          scene.add(vrm.scene);\n          this.currentVrmRef.current = vrm;\n          this.currentVrmRef.current.scene.rotation.y = Math.PI;\n        });\n      },\n      (progress) => {\n        console.log('Loading model...', 100.0 * (progress.loaded / progress.total), '%');\n      },\n      (error) => {\n        console.error(error);\n      }\n    );\n    function animate() {\n      requestAnimationFrame(animate);\n\n      if (this.currentVrmRef.current) {\n        this.currentVrmRef.current.update(clock.getDelta());\n      }\n      renderer.render(scene, orbitCamera);\n    }\n    animate();\n\n    \n\n    const rigRotation = (name, rotation = { x: 0, y: 0, z: 0 }, dampener = 1, lerpAmount = 0.3) => {\n      if (!this.currentVrmRef.current) {\n        return;\n      }\n      const Part = this.currentVrmRef.current.humanoid.getBoneNode(VRMSchema.HumanoidBoneName[name]);\n      if (!Part) {\n        return;\n      }\n\n      const euler = new THREE.Euler(rotation.x * dampener, rotation.y * dampener, rotation.z * dampener);\n      const quaternion = new THREE.Quaternion().setFromEuler(euler);\n      Part.quaternion.slerp(quaternion, lerpAmount);\n    };\n\n    \n\n    const rigFace = (riggedFace) => {\n      if (!this.currentVrmRef.current) {\n        return;\n      }\n      rigRotation('Neck', riggedFace.head, 0.7);\n\n      const Blendshape = this.currentVrmRef.current.blendShapeProxy;\n      const PresetName = VRMSchema.BlendShapePresetName;\n\n      riggedFace.eye.l = lerp(clamp(1 - riggedFace.eye.l, 0, 1), Blendshape.getValue(PresetName.Blink), 0.5);\n      riggedFace.eye.r = lerp(clamp(1 - riggedFace.eye.r, 0, 1), Blendshape.getValue(PresetName.Blink), 0.5);\n      riggedFace.eye = Face.stabilizeBlink(riggedFace.eye, riggedFace.head.y);\n      Blendshape.setValue(PresetName.Blink, riggedFace.eye.l);\n\n      Blendshape.setValue(PresetName.I, lerp(riggedFace.mouth.shape.I, Blendshape.getValue(PresetName.I), 0.5));\n      Blendshape.setValue(PresetName.A, lerp(riggedFace.mouth.shape.A, Blendshape.getValue(PresetName.A), 0.5));\n      Blendshape.setValue(PresetName.E, lerp(riggedFace.mouth.shape.E, Blendshape.getValue(PresetName.E), 0.5));\n      Blendshape.setValue(PresetName.O, lerp(riggedFace.mouth.shape.O, Blendshape.getValue(PresetName.O), 0.5));\n      Blendshape.setValue(PresetName.U, lerp(riggedFace.mouth.shape.U, Blendshape.getValue(PresetName.U), 0.5));\n\n      let lookTarget = new THREE.Euler(\n        lerp(oldLookTarget.x, riggedFace.pupil.y, 0.4),\n        lerp(oldLookTarget.y, riggedFace.pupil.x, 0.4),\n        0,\n        'XYZ'\n      );\n      oldLookTarget.copy(lookTarget);\n      this.currentVrmRef.current.lookAt.applyer.lookAt(lookTarget);\n    };\n\n    const animateVRM = (vrm, results) => {\n      if (!vrm) {\n        return;\n      }\n      let riggedFace;\n\n      const faceLandmarks = results.faceLandmarks;\n\n      if (faceLandmarks) {\n        riggedFace = Face.solve(faceLandmarks, {\n          runtime: 'mediapipe',\n          video: videoElement,\n        });\n        rigFace(riggedFace);\n      }\n    };\n\n    let oldLookTarget = new THREE.Euler();\n    const onResults = (results) => {\n      drawResults(results);\n      animateVRM(this.currentVrmRef.current, results);\n    };\n\n    const drawResults = (results) => {\n      guideCanvas.width = videoElement.videoWidth;\n      guideCanvas.height = videoElement.videoHeight;\n      const canvasCtx = guideCanvas.getContext('2d');\n      canvasCtx.save();\n      canvasCtx.clearRect(0, 0, guideCanvas.width, guideCanvas.height);\n      drawConnectors(canvasCtx, results.faceLandmarks, FACEMESH_TESSELATION, {\n        color: '#C0C0C070',\n        lineWidth: 1,\n      });\n      if (results.faceLandmarks && results.faceLandmarks.length === 478) {\n        drawLandmarks(canvasCtx, [results.faceLandmarks[468], results.faceLandmarks[468 + 5]], {\n          color: '#ffe603',\n          lineWidth: 2,\n        });\n      }\n    };\n\n    const holistic = new Holistic({\n      locateFile: (file) => {\n        return `https://cdn.jsdelivr.net/npm/@mediapipe/holistic@0.5.1635989137/${file}`;\n      },\n    },);\n\n    holistic.setOptions({\n      modelComplexity: 1,\n      smoothLandmarks: true,\n      minDetectionConfidence: 0.7,\n      minTrackingConfidence: 0.7,\n      refineFaceLandmarks: true,\n    });\n  \n    holistic.onResults(onResults);\n\n    \n    const camera = new CameraUtils.Camera(videoElement, {\n      onFrame: async () => {\n        await holistic.send({ image: videoElement });\n      },\n      width: 640,\n      height: 480\n    });\n    if(!this.camOn) {\n      this.camOn = true;\n      camera.start();\n    }\n    \n    if (this.isCameraOn) {\n      //camera.start();\n    } else {\n      //camera.stop();\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <button onClick={this.toggleCamera} style={{ position: 'absolute', top: '10px', right: '10px' }}>\n          {this.state.isCameraOn ? 'Turn camera off' : 'Turn camera on'}\n        </button>\n        <video className=\"input_video\" ref={this.canvasRef} />\n        <canvas className=\"guides\" />\n      </div>\n    );\n  }\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}