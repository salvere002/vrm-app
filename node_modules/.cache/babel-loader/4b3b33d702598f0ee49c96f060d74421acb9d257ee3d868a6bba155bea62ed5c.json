{"ast":null,"code":"/*! (c) 2019-2021 pixiv Inc. - https://github.com/pixiv/three-vrm/blob/release/LICENSE */\nimport * as e from \"three\";\n/*! *****************************************************************************\nCopyright (c) Microsoft Corporation.\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\nPERFORMANCE OF THIS SOFTWARE.\n***************************************************************************** */\nfunction t(e, t, n, i) {\n  return new (n || (n = Promise))(function (r, o) {\n    function s(e) {\n      try {\n        l(i.next(e));\n      } catch (e) {\n        o(e);\n      }\n    }\n    function a(e) {\n      try {\n        l(i.throw(e));\n      } catch (e) {\n        o(e);\n      }\n    }\n    function l(e) {\n      var t;\n      e.done ? r(e.value) : (t = e.value, t instanceof n ? t : new n(function (e) {\n        e(t);\n      })).then(s, a);\n    }\n    l((i = i.apply(e, t || [])).next());\n  });\n}\nfunction n(e) {\n  Object.keys(e).forEach(t => {\n    const n = e[t];\n    if (null == n ? void 0 : n.isTexture) {\n      n.dispose();\n    }\n  }), e.dispose();\n}\nfunction i(e) {\n  const t = e.geometry;\n  t && t.dispose();\n  const i = e.material;\n  i && (Array.isArray(i) ? i.forEach(e => n(e)) : i && n(i));\n}\nvar r;\n!function (e) {\n  e[e.NUMBER = 0] = \"NUMBER\", e[e.VECTOR2 = 1] = \"VECTOR2\", e[e.VECTOR3 = 2] = \"VECTOR3\", e[e.VECTOR4 = 3] = \"VECTOR4\", e[e.COLOR = 4] = \"COLOR\";\n}(r || (r = {}));\nconst o = new e.Vector2(),\n  s = new e.Vector3(),\n  a = new e.Vector4(),\n  l = new e.Color();\nclass d extends e.Object3D {\n  constructor(e) {\n    super(), this.weight = 0, this.isBinary = !1, this._binds = [], this._materialValues = [], this.name = `BlendShapeController_${e}`, this.type = \"BlendShapeController\", this.visible = !1;\n  }\n  addBind(e) {\n    const t = e.weight / 100;\n    this._binds.push({\n      meshes: e.meshes,\n      morphTargetIndex: e.morphTargetIndex,\n      weight: t\n    });\n  }\n  addMaterialValue(t) {\n    const n = t.material,\n      i = t.propertyName;\n    let o,\n      s,\n      a,\n      l,\n      d = n[i];\n    d && (d = t.defaultValue || d, d.isVector2 ? (o = r.VECTOR2, s = d.clone(), a = new e.Vector2().fromArray(t.targetValue), l = a.clone().sub(s)) : d.isVector3 ? (o = r.VECTOR3, s = d.clone(), a = new e.Vector3().fromArray(t.targetValue), l = a.clone().sub(s)) : d.isVector4 ? (o = r.VECTOR4, s = d.clone(), a = new e.Vector4().fromArray([t.targetValue[2], t.targetValue[3], t.targetValue[0], t.targetValue[1]]), l = a.clone().sub(s)) : d.isColor ? (o = r.COLOR, s = d.clone(), a = new e.Color().fromArray(t.targetValue), l = a.clone().sub(s)) : (o = r.NUMBER, s = d, a = t.targetValue[0], l = a - s), this._materialValues.push({\n      material: n,\n      propertyName: i,\n      defaultValue: s,\n      targetValue: a,\n      deltaValue: l,\n      type: o\n    }));\n  }\n  applyWeight() {\n    const e = this.isBinary ? this.weight < .5 ? 0 : 1 : this.weight;\n    this._binds.forEach(t => {\n      t.meshes.forEach(n => {\n        n.morphTargetInfluences && (n.morphTargetInfluences[t.morphTargetIndex] += e * t.weight);\n      });\n    }), this._materialValues.forEach(t => {\n      if (void 0 !== t.material[t.propertyName]) {\n        if (t.type === r.NUMBER) {\n          const n = t.deltaValue;\n          t.material[t.propertyName] += n * e;\n        } else if (t.type === r.VECTOR2) {\n          const n = t.deltaValue;\n          t.material[t.propertyName].add(o.copy(n).multiplyScalar(e));\n        } else if (t.type === r.VECTOR3) {\n          const n = t.deltaValue;\n          t.material[t.propertyName].add(s.copy(n).multiplyScalar(e));\n        } else if (t.type === r.VECTOR4) {\n          const n = t.deltaValue;\n          t.material[t.propertyName].add(a.copy(n).multiplyScalar(e));\n        } else if (t.type === r.COLOR) {\n          const n = t.deltaValue;\n          t.material[t.propertyName].add(l.copy(n).multiplyScalar(e));\n        }\n        \"boolean\" == typeof t.material.shouldApplyUniforms && (t.material.shouldApplyUniforms = !0);\n      }\n    });\n  }\n  clearAppliedWeight() {\n    this._binds.forEach(e => {\n      e.meshes.forEach(t => {\n        t.morphTargetInfluences && (t.morphTargetInfluences[e.morphTargetIndex] = 0);\n      });\n    }), this._materialValues.forEach(e => {\n      if (void 0 !== e.material[e.propertyName]) {\n        if (e.type === r.NUMBER) {\n          const t = e.defaultValue;\n          e.material[e.propertyName] = t;\n        } else if (e.type === r.VECTOR2) {\n          const t = e.defaultValue;\n          e.material[e.propertyName].copy(t);\n        } else if (e.type === r.VECTOR3) {\n          const t = e.defaultValue;\n          e.material[e.propertyName].copy(t);\n        } else if (e.type === r.VECTOR4) {\n          const t = e.defaultValue;\n          e.material[e.propertyName].copy(t);\n        } else if (e.type === r.COLOR) {\n          const t = e.defaultValue;\n          e.material[e.propertyName].copy(t);\n        }\n        \"boolean\" == typeof e.material.shouldApplyUniforms && (e.material.shouldApplyUniforms = !0);\n      }\n    });\n  }\n}\nvar h;\nfunction u(e, t, n) {\n  const i = e.parser.json.nodes[t].mesh;\n  if (null == i) return null;\n  const r = e.parser.json.meshes[i].primitives.length,\n    o = [];\n  return n.traverse(e => {\n    o.length < r && e.isMesh && o.push(e);\n  }), o;\n}\nfunction c(e) {\n  return t(this, void 0, void 0, function* () {\n    const t = yield e.parser.getDependencies(\"node\"),\n      n = new Map();\n    return t.forEach((t, i) => {\n      const r = u(e, i, t);\n      null != r && n.set(i, r);\n    }), n;\n  });\n}\nfunction p(e) {\n  return \"_\" !== e[0] ? (console.warn(`renameMaterialProperty: Given property name \"${e}\" might be invalid`), e) : (e = e.substring(1), /[A-Z]/.test(e[0]) ? e[0].toLowerCase() + e.substring(1) : (console.warn(`renameMaterialProperty: Given property name \"${e}\" might be invalid`), e));\n}\n!function (e) {\n  var t, n, i, r, o, s;\n  (t = e.BlendShapePresetName || (e.BlendShapePresetName = {})).A = \"a\", t.Angry = \"angry\", t.Blink = \"blink\", t.BlinkL = \"blink_l\", t.BlinkR = \"blink_r\", t.E = \"e\", t.Fun = \"fun\", t.I = \"i\", t.Joy = \"joy\", t.Lookdown = \"lookdown\", t.Lookleft = \"lookleft\", t.Lookright = \"lookright\", t.Lookup = \"lookup\", t.Neutral = \"neutral\", t.O = \"o\", t.Sorrow = \"sorrow\", t.U = \"u\", t.Unknown = \"unknown\", (n = e.FirstPersonLookAtTypeName || (e.FirstPersonLookAtTypeName = {})).BlendShape = \"BlendShape\", n.Bone = \"Bone\", (i = e.HumanoidBoneName || (e.HumanoidBoneName = {})).Chest = \"chest\", i.Head = \"head\", i.Hips = \"hips\", i.Jaw = \"jaw\", i.LeftEye = \"leftEye\", i.LeftFoot = \"leftFoot\", i.LeftHand = \"leftHand\", i.LeftIndexDistal = \"leftIndexDistal\", i.LeftIndexIntermediate = \"leftIndexIntermediate\", i.LeftIndexProximal = \"leftIndexProximal\", i.LeftLittleDistal = \"leftLittleDistal\", i.LeftLittleIntermediate = \"leftLittleIntermediate\", i.LeftLittleProximal = \"leftLittleProximal\", i.LeftLowerArm = \"leftLowerArm\", i.LeftLowerLeg = \"leftLowerLeg\", i.LeftMiddleDistal = \"leftMiddleDistal\", i.LeftMiddleIntermediate = \"leftMiddleIntermediate\", i.LeftMiddleProximal = \"leftMiddleProximal\", i.LeftRingDistal = \"leftRingDistal\", i.LeftRingIntermediate = \"leftRingIntermediate\", i.LeftRingProximal = \"leftRingProximal\", i.LeftShoulder = \"leftShoulder\", i.LeftThumbDistal = \"leftThumbDistal\", i.LeftThumbIntermediate = \"leftThumbIntermediate\", i.LeftThumbProximal = \"leftThumbProximal\", i.LeftToes = \"leftToes\", i.LeftUpperArm = \"leftUpperArm\", i.LeftUpperLeg = \"leftUpperLeg\", i.Neck = \"neck\", i.RightEye = \"rightEye\", i.RightFoot = \"rightFoot\", i.RightHand = \"rightHand\", i.RightIndexDistal = \"rightIndexDistal\", i.RightIndexIntermediate = \"rightIndexIntermediate\", i.RightIndexProximal = \"rightIndexProximal\", i.RightLittleDistal = \"rightLittleDistal\", i.RightLittleIntermediate = \"rightLittleIntermediate\", i.RightLittleProximal = \"rightLittleProximal\", i.RightLowerArm = \"rightLowerArm\", i.RightLowerLeg = \"rightLowerLeg\", i.RightMiddleDistal = \"rightMiddleDistal\", i.RightMiddleIntermediate = \"rightMiddleIntermediate\", i.RightMiddleProximal = \"rightMiddleProximal\", i.RightRingDistal = \"rightRingDistal\", i.RightRingIntermediate = \"rightRingIntermediate\", i.RightRingProximal = \"rightRingProximal\", i.RightShoulder = \"rightShoulder\", i.RightThumbDistal = \"rightThumbDistal\", i.RightThumbIntermediate = \"rightThumbIntermediate\", i.RightThumbProximal = \"rightThumbProximal\", i.RightToes = \"rightToes\", i.RightUpperArm = \"rightUpperArm\", i.RightUpperLeg = \"rightUpperLeg\", i.Spine = \"spine\", i.UpperChest = \"upperChest\", (r = e.MetaAllowedUserName || (e.MetaAllowedUserName = {})).Everyone = \"Everyone\", r.ExplicitlyLicensedPerson = \"ExplicitlyLicensedPerson\", r.OnlyAuthor = \"OnlyAuthor\", (o = e.MetaUssageName || (e.MetaUssageName = {})).Allow = \"Allow\", o.Disallow = \"Disallow\", (s = e.MetaLicenseName || (e.MetaLicenseName = {})).Cc0 = \"CC0\", s.CcBy = \"CC_BY\", s.CcByNc = \"CC_BY_NC\", s.CcByNcNd = \"CC_BY_NC_ND\", s.CcByNcSa = \"CC_BY_NC_SA\", s.CcByNd = \"CC_BY_ND\", s.CcBySa = \"CC_BY_SA\", s.Other = \"Other\", s.RedistributionProhibited = \"Redistribution_Prohibited\";\n}(h || (h = {}));\nconst m = new e.Vector3(),\n  f = new e.Vector3();\nfunction g(e, t) {\n  return e.matrixWorld.decompose(m, t, f), t;\n}\nnew e.Quaternion();\nclass _ {\n  constructor() {\n    this._blendShapeGroups = {}, this._blendShapePresetMap = {}, this._unknownGroupNames = [];\n  }\n  get expressions() {\n    return Object.keys(this._blendShapeGroups);\n  }\n  get blendShapePresetMap() {\n    return this._blendShapePresetMap;\n  }\n  get unknownGroupNames() {\n    return this._unknownGroupNames;\n  }\n  getBlendShapeGroup(e) {\n    const t = this._blendShapePresetMap[e],\n      n = t ? this._blendShapeGroups[t] : this._blendShapeGroups[e];\n    if (n) return n;\n    console.warn(`no blend shape found by ${e}`);\n  }\n  registerBlendShapeGroup(e, t, n) {\n    this._blendShapeGroups[e] = n, t ? this._blendShapePresetMap[t] = e : this._unknownGroupNames.push(e);\n  }\n  getValue(e) {\n    var t;\n    const n = this.getBlendShapeGroup(e);\n    return null !== (t = null == n ? void 0 : n.weight) && void 0 !== t ? t : null;\n  }\n  setValue(e, t) {\n    const n = this.getBlendShapeGroup(e);\n    var i;\n    n && (n.weight = (i = t, Math.max(Math.min(i, 1), 0)));\n  }\n  getBlendShapeTrackName(e) {\n    const t = this.getBlendShapeGroup(e);\n    return t ? `${t.name}.weight` : null;\n  }\n  update() {\n    Object.keys(this._blendShapeGroups).forEach(e => {\n      this._blendShapeGroups[e].clearAppliedWeight();\n    }), Object.keys(this._blendShapeGroups).forEach(e => {\n      this._blendShapeGroups[e].applyWeight();\n    });\n  }\n}\nclass v {\n  import(e) {\n    var n;\n    return t(this, void 0, void 0, function* () {\n      const i = null === (n = e.parser.json.extensions) || void 0 === n ? void 0 : n.VRM;\n      if (!i) return null;\n      const r = i.blendShapeMaster;\n      if (!r) return null;\n      const o = new _(),\n        s = r.blendShapeGroups;\n      if (!s) return o;\n      const a = {};\n      return yield Promise.all(s.map(n => t(this, void 0, void 0, function* () {\n        const i = n.name;\n        if (void 0 === i) return void console.warn(\"VRMBlendShapeImporter: One of blendShapeGroups has no name\");\n        let r;\n        n.presetName && n.presetName !== h.BlendShapePresetName.Unknown && !a[n.presetName] && (r = n.presetName, a[n.presetName] = i);\n        const s = new d(i);\n        e.scene.add(s), s.isBinary = n.isBinary || !1, n.binds && n.binds.forEach(i => t(this, void 0, void 0, function* () {\n          if (void 0 === i.mesh || void 0 === i.index) return;\n          const r = [];\n          e.parser.json.nodes.forEach((e, t) => {\n            e.mesh === i.mesh && r.push(t);\n          });\n          const o = i.index;\n          yield Promise.all(r.map(r => t(this, void 0, void 0, function* () {\n            var a;\n            const l = yield function (e, n) {\n              return t(this, void 0, void 0, function* () {\n                const t = yield e.parser.getDependency(\"node\", n);\n                return u(e, n, t);\n              });\n            }(e, r);\n            l.every(e => Array.isArray(e.morphTargetInfluences) && o < e.morphTargetInfluences.length) ? s.addBind({\n              meshes: l,\n              morphTargetIndex: o,\n              weight: null !== (a = i.weight) && void 0 !== a ? a : 100\n            }) : console.warn(`VRMBlendShapeImporter: ${n.name} attempts to index ${o}th morph but not found.`);\n          })));\n        }));\n        const l = n.materialValues;\n        l && l.forEach(t => {\n          if (void 0 === t.materialName || void 0 === t.propertyName || void 0 === t.targetValue) return;\n          const n = [];\n          e.scene.traverse(e => {\n            if (e.material) {\n              const i = e.material;\n              Array.isArray(i) ? n.push(...i.filter(e => e.name === t.materialName && -1 === n.indexOf(e))) : i.name === t.materialName && -1 === n.indexOf(i) && n.push(i);\n            }\n          }), n.forEach(e => {\n            s.addMaterialValue({\n              material: e,\n              propertyName: p(t.propertyName),\n              targetValue: t.targetValue\n            });\n          });\n        }), o.registerBlendShapeGroup(i, r, s);\n      }))), o;\n    });\n  }\n}\nconst y = Object.freeze(new e.Vector3(0, 0, -1)),\n  T = new e.Quaternion();\nvar x;\n!function (e) {\n  e[e.Auto = 0] = \"Auto\", e[e.Both = 1] = \"Both\", e[e.ThirdPersonOnly = 2] = \"ThirdPersonOnly\", e[e.FirstPersonOnly = 3] = \"FirstPersonOnly\";\n}(x || (x = {}));\nclass S {\n  constructor(e, t) {\n    this.firstPersonFlag = S._parseFirstPersonFlag(e), this.primitives = t;\n  }\n  static _parseFirstPersonFlag(e) {\n    switch (e) {\n      case \"Both\":\n        return x.Both;\n      case \"ThirdPersonOnly\":\n        return x.ThirdPersonOnly;\n      case \"FirstPersonOnly\":\n        return x.FirstPersonOnly;\n      default:\n        return x.Auto;\n    }\n  }\n}\nclass M {\n  constructor(e, t, n) {\n    this._meshAnnotations = [], this._firstPersonOnlyLayer = M._DEFAULT_FIRSTPERSON_ONLY_LAYER, this._thirdPersonOnlyLayer = M._DEFAULT_THIRDPERSON_ONLY_LAYER, this._initialized = !1, this._firstPersonBone = e, this._firstPersonBoneOffset = t, this._meshAnnotations = n;\n  }\n  get firstPersonBone() {\n    return this._firstPersonBone;\n  }\n  get meshAnnotations() {\n    return this._meshAnnotations;\n  }\n  getFirstPersonWorldDirection(e) {\n    return e.copy(y).applyQuaternion(g(this._firstPersonBone, T));\n  }\n  get firstPersonOnlyLayer() {\n    return this._firstPersonOnlyLayer;\n  }\n  get thirdPersonOnlyLayer() {\n    return this._thirdPersonOnlyLayer;\n  }\n  getFirstPersonBoneOffset(e) {\n    return e.copy(this._firstPersonBoneOffset);\n  }\n  getFirstPersonWorldPosition(t) {\n    const n = this._firstPersonBoneOffset,\n      i = new e.Vector4(n.x, n.y, n.z, 1);\n    return i.applyMatrix4(this._firstPersonBone.matrixWorld), t.set(i.x, i.y, i.z);\n  }\n  setup() {\n    let {\n      firstPersonOnlyLayer: e = M._DEFAULT_FIRSTPERSON_ONLY_LAYER,\n      thirdPersonOnlyLayer: t = M._DEFAULT_THIRDPERSON_ONLY_LAYER\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    this._initialized || (this._initialized = !0, this._firstPersonOnlyLayer = e, this._thirdPersonOnlyLayer = t, this._meshAnnotations.forEach(e => {\n      e.firstPersonFlag === x.FirstPersonOnly ? e.primitives.forEach(e => {\n        e.layers.set(this._firstPersonOnlyLayer);\n      }) : e.firstPersonFlag === x.ThirdPersonOnly ? e.primitives.forEach(e => {\n        e.layers.set(this._thirdPersonOnlyLayer);\n      }) : e.firstPersonFlag === x.Auto && this._createHeadlessModel(e.primitives);\n    }));\n  }\n  _excludeTriangles(e, t, n, i) {\n    let r = 0;\n    if (null != t && t.length > 0) for (let o = 0; o < e.length; o += 3) {\n      const s = e[o],\n        a = e[o + 1],\n        l = e[o + 2],\n        d = t[s],\n        h = n[s];\n      if (d[0] > 0 && i.includes(h[0])) continue;\n      if (d[1] > 0 && i.includes(h[1])) continue;\n      if (d[2] > 0 && i.includes(h[2])) continue;\n      if (d[3] > 0 && i.includes(h[3])) continue;\n      const u = t[a],\n        c = n[a];\n      if (u[0] > 0 && i.includes(c[0])) continue;\n      if (u[1] > 0 && i.includes(c[1])) continue;\n      if (u[2] > 0 && i.includes(c[2])) continue;\n      if (u[3] > 0 && i.includes(c[3])) continue;\n      const p = t[l],\n        m = n[l];\n      p[0] > 0 && i.includes(m[0]) || p[1] > 0 && i.includes(m[1]) || p[2] > 0 && i.includes(m[2]) || p[3] > 0 && i.includes(m[3]) || (e[r++] = s, e[r++] = a, e[r++] = l);\n    }\n    return r;\n  }\n  _createErasedMesh(t, n) {\n    const i = new e.SkinnedMesh(t.geometry.clone(), t.material);\n    i.name = `${t.name}(erase)`, i.frustumCulled = t.frustumCulled, i.layers.set(this._firstPersonOnlyLayer);\n    const r = i.geometry,\n      o = r.getAttribute(\"skinIndex\").array,\n      s = [];\n    for (let e = 0; e < o.length; e += 4) s.push([o[e], o[e + 1], o[e + 2], o[e + 3]]);\n    const a = r.getAttribute(\"skinWeight\").array,\n      l = [];\n    for (let e = 0; e < a.length; e += 4) l.push([a[e], a[e + 1], a[e + 2], a[e + 3]]);\n    const d = r.getIndex();\n    if (!d) throw new Error(\"The geometry doesn't have an index buffer\");\n    const h = Array.from(d.array),\n      u = this._excludeTriangles(h, l, s, n),\n      c = [];\n    for (let e = 0; e < u; e++) c[e] = h[e];\n    return r.setIndex(c), t.onBeforeRender && (i.onBeforeRender = t.onBeforeRender), i.bind(new e.Skeleton(t.skeleton.bones, t.skeleton.boneInverses), new e.Matrix4()), i;\n  }\n  _createHeadlessModelForSkinnedMesh(e, t) {\n    const n = [];\n    if (t.skeleton.bones.forEach((e, t) => {\n      this._isEraseTarget(e) && n.push(t);\n    }), !n.length) return t.layers.enable(this._thirdPersonOnlyLayer), void t.layers.enable(this._firstPersonOnlyLayer);\n    t.layers.set(this._thirdPersonOnlyLayer);\n    const i = this._createErasedMesh(t, n);\n    e.add(i);\n  }\n  _createHeadlessModel(e) {\n    e.forEach(e => {\n      if (\"SkinnedMesh\" === e.type) {\n        const t = e;\n        this._createHeadlessModelForSkinnedMesh(t.parent, t);\n      } else this._isEraseTarget(e) && e.layers.set(this._thirdPersonOnlyLayer);\n    });\n  }\n  _isEraseTarget(e) {\n    return e === this._firstPersonBone || !!e.parent && this._isEraseTarget(e.parent);\n  }\n}\nM._DEFAULT_FIRSTPERSON_ONLY_LAYER = 9, M._DEFAULT_THIRDPERSON_ONLY_LAYER = 10;\nclass E {\n  import(n, i) {\n    var r;\n    return t(this, void 0, void 0, function* () {\n      const t = null === (r = n.parser.json.extensions) || void 0 === r ? void 0 : r.VRM;\n      if (!t) return null;\n      const o = t.firstPerson;\n      if (!o) return null;\n      const s = o.firstPersonBone;\n      let a;\n      if (a = void 0 === s || -1 === s ? i.getBoneNode(h.HumanoidBoneName.Head) : yield n.parser.getDependency(\"node\", s), !a) return console.warn(\"VRMFirstPersonImporter: Could not find firstPersonBone of the VRM\"), null;\n      const l = o.firstPersonBoneOffset ? new e.Vector3(o.firstPersonBoneOffset.x, o.firstPersonBoneOffset.y, -o.firstPersonBoneOffset.z) : new e.Vector3(0, .06, 0),\n        d = [],\n        u = yield c(n);\n      return Array.from(u.entries()).forEach(_ref => {\n        let [e, t] = _ref;\n        const i = n.parser.json.nodes[e],\n          r = o.meshAnnotations ? o.meshAnnotations.find(e => e.mesh === i.mesh) : void 0;\n        d.push(new S(null == r ? void 0 : r.firstPersonFlag, t));\n      }), new M(a, l, d);\n    });\n  }\n}\nclass L {\n  constructor(e, t) {\n    this.node = e, this.humanLimit = t;\n  }\n}\nfunction w(e) {\n  return e.invert ? e.invert() : e.inverse(), e;\n}\nconst R = new e.Vector3(),\n  P = new e.Quaternion();\nclass A {\n  constructor(e, t) {\n    this.restPose = {}, this.humanBones = this._createHumanBones(e), this.humanDescription = t, this.restPose = this.getPose();\n  }\n  getPose() {\n    const e = {};\n    return Object.keys(this.humanBones).forEach(t => {\n      const n = this.getBoneNode(t);\n      if (!n) return;\n      if (e[t]) return;\n      R.set(0, 0, 0), P.identity();\n      const i = this.restPose[t];\n      (null == i ? void 0 : i.position) && R.fromArray(i.position).negate(), (null == i ? void 0 : i.rotation) && w(P.fromArray(i.rotation)), R.add(n.position), P.premultiply(n.quaternion), e[t] = {\n        position: R.toArray(),\n        rotation: P.toArray()\n      };\n    }, {}), e;\n  }\n  setPose(e) {\n    Object.keys(e).forEach(t => {\n      const n = e[t],\n        i = this.getBoneNode(t);\n      if (!i) return;\n      const r = this.restPose[t];\n      r && (n.position && (i.position.fromArray(n.position), r.position && i.position.add(R.fromArray(r.position))), n.rotation && (i.quaternion.fromArray(n.rotation), r.rotation && i.quaternion.multiply(P.fromArray(r.rotation))));\n    });\n  }\n  resetPose() {\n    Object.entries(this.restPose).forEach(_ref2 => {\n      let [e, t] = _ref2;\n      const n = this.getBoneNode(e);\n      n && ((null == t ? void 0 : t.position) && n.position.fromArray(t.position), (null == t ? void 0 : t.rotation) && n.quaternion.fromArray(t.rotation));\n    });\n  }\n  getBone(e) {\n    var t;\n    return null !== (t = this.humanBones[e][0]) && void 0 !== t ? t : void 0;\n  }\n  getBones(e) {\n    var t;\n    return null !== (t = this.humanBones[e]) && void 0 !== t ? t : [];\n  }\n  getBoneNode(e) {\n    var t, n;\n    return null !== (n = null === (t = this.humanBones[e][0]) || void 0 === t ? void 0 : t.node) && void 0 !== n ? n : null;\n  }\n  getBoneNodes(e) {\n    var t, n;\n    return null !== (n = null === (t = this.humanBones[e]) || void 0 === t ? void 0 : t.map(e => e.node)) && void 0 !== n ? n : [];\n  }\n  _createHumanBones(e) {\n    const t = Object.values(h.HumanoidBoneName).reduce((e, t) => (e[t] = [], e), {});\n    return e.forEach(e => {\n      t[e.name].push(e.bone);\n    }), t;\n  }\n}\nclass C {\n  import(n) {\n    var i;\n    return t(this, void 0, void 0, function* () {\n      const r = null === (i = n.parser.json.extensions) || void 0 === i ? void 0 : i.VRM;\n      if (!r) return null;\n      const o = r.humanoid;\n      if (!o) return null;\n      const s = [];\n      o.humanBones && (yield Promise.all(o.humanBones.map(i => t(this, void 0, void 0, function* () {\n        if (!i.bone || null == i.node) return;\n        const t = yield n.parser.getDependency(\"node\", i.node);\n        s.push({\n          name: i.bone,\n          bone: new L(t, {\n            axisLength: i.axisLength,\n            center: i.center && new e.Vector3(i.center.x, i.center.y, i.center.z),\n            max: i.max && new e.Vector3(i.max.x, i.max.y, i.max.z),\n            min: i.min && new e.Vector3(i.min.x, i.min.y, i.min.z),\n            useDefaultValues: i.useDefaultValues\n          })\n        });\n      }))));\n      const a = {\n        armStretch: o.armStretch,\n        legStretch: o.legStretch,\n        upperArmTwist: o.upperArmTwist,\n        lowerArmTwist: o.lowerArmTwist,\n        upperLegTwist: o.upperLegTwist,\n        lowerLegTwist: o.lowerLegTwist,\n        feetSpacing: o.feetSpacing,\n        hasTranslationDoF: o.hasTranslationDoF\n      };\n      return new A(s, a);\n    });\n  }\n}\nclass O {\n  constructor(e, t, n) {\n    this.curve = [0, 0, 0, 1, 1, 1, 1, 0], this.curveXRangeDegree = 90, this.curveYRangeDegree = 10, void 0 !== e && (this.curveXRangeDegree = e), void 0 !== t && (this.curveYRangeDegree = t), void 0 !== n && (this.curve = n);\n  }\n  map(e) {\n    const t = Math.min(Math.max(e, 0), this.curveXRangeDegree) / this.curveXRangeDegree;\n    return this.curveYRangeDegree * ((e, t) => {\n      if (e.length < 8) throw new Error(\"evaluateCurve: Invalid curve detected! (Array length must be 8 at least)\");\n      if (e.length % 4 != 0) throw new Error(\"evaluateCurve: Invalid curve detected! (Array length must be multiples of 4\");\n      let n;\n      for (n = 0;; n++) {\n        if (e.length <= 4 * n) return e[4 * n - 3];\n        if (t <= e[4 * n]) break;\n      }\n      const i = n - 1;\n      if (i < 0) return e[4 * i + 5];\n      const r = e[4 * i],\n        o = (t - r) / (e[4 * n] - r);\n      return ((e, t, n, i, r) => {\n        const o = r * r * r,\n          s = r * r;\n        return e + (t - e) * (-2 * o + 3 * s) + n * (o - 2 * s + r) + i * (o - s);\n      })(e[4 * i + 1], e[4 * n + 1], e[4 * i + 3], e[4 * n + 2], o);\n    })(this.curve, t);\n  }\n}\nclass b {}\nclass I extends b {\n  constructor(e, t, n, i) {\n    super(), this.type = h.FirstPersonLookAtTypeName.BlendShape, this._curveHorizontal = t, this._curveVerticalDown = n, this._curveVerticalUp = i, this._blendShapeProxy = e;\n  }\n  name() {\n    return h.FirstPersonLookAtTypeName.BlendShape;\n  }\n  lookAt(e) {\n    const t = e.x,\n      n = e.y;\n    t < 0 ? (this._blendShapeProxy.setValue(h.BlendShapePresetName.Lookup, 0), this._blendShapeProxy.setValue(h.BlendShapePresetName.Lookdown, this._curveVerticalDown.map(-t))) : (this._blendShapeProxy.setValue(h.BlendShapePresetName.Lookdown, 0), this._blendShapeProxy.setValue(h.BlendShapePresetName.Lookup, this._curveVerticalUp.map(t))), n < 0 ? (this._blendShapeProxy.setValue(h.BlendShapePresetName.Lookleft, 0), this._blendShapeProxy.setValue(h.BlendShapePresetName.Lookright, this._curveHorizontal.map(-n))) : (this._blendShapeProxy.setValue(h.BlendShapePresetName.Lookright, 0), this._blendShapeProxy.setValue(h.BlendShapePresetName.Lookleft, this._curveHorizontal.map(n)));\n  }\n}\nconst N = Object.freeze(new e.Vector3(0, 0, -1)),\n  D = new e.Vector3(),\n  U = new e.Vector3(),\n  B = new e.Vector3(),\n  V = new e.Quaternion();\nclass G {\n  constructor(t, n) {\n    this.autoUpdate = !0, this._euler = new e.Euler(0, 0, 0, G.EULER_ORDER), this.firstPerson = t, this.applyer = n;\n  }\n  getLookAtWorldDirection(e) {\n    const t = g(this.firstPerson.firstPersonBone, V);\n    return e.copy(N).applyEuler(this._euler).applyQuaternion(t);\n  }\n  lookAt(e) {\n    this._calcEuler(this._euler, e), this.applyer && this.applyer.lookAt(this._euler);\n  }\n  update(e) {\n    this.target && this.autoUpdate && (this.lookAt(this.target.getWorldPosition(D)), this.applyer && this.applyer.lookAt(this._euler));\n  }\n  _calcEuler(e, t) {\n    const n = this.firstPerson.getFirstPersonWorldPosition(U),\n      i = B.copy(t).sub(n).normalize();\n    return i.applyQuaternion(w(g(this.firstPerson.firstPersonBone, V))), e.x = Math.atan2(i.y, Math.sqrt(i.x * i.x + i.z * i.z)), e.y = Math.atan2(-i.x, -i.z), e;\n  }\n}\nG.EULER_ORDER = \"YXZ\";\nconst F = new e.Euler(0, 0, 0, G.EULER_ORDER);\nclass k extends b {\n  constructor(e, t, n, i, r) {\n    super(), this.type = h.FirstPersonLookAtTypeName.Bone, this._curveHorizontalInner = t, this._curveHorizontalOuter = n, this._curveVerticalDown = i, this._curveVerticalUp = r, this._leftEye = e.getBoneNode(h.HumanoidBoneName.LeftEye), this._rightEye = e.getBoneNode(h.HumanoidBoneName.RightEye);\n  }\n  lookAt(e) {\n    const t = e.x,\n      n = e.y;\n    this._leftEye && (F.x = t < 0 ? -this._curveVerticalDown.map(-t) : this._curveVerticalUp.map(t), F.y = n < 0 ? -this._curveHorizontalInner.map(-n) : this._curveHorizontalOuter.map(n), this._leftEye.quaternion.setFromEuler(F)), this._rightEye && (F.x = t < 0 ? -this._curveVerticalDown.map(-t) : this._curveVerticalUp.map(t), F.y = n < 0 ? -this._curveHorizontalOuter.map(-n) : this._curveHorizontalInner.map(n), this._rightEye.quaternion.setFromEuler(F));\n  }\n}\nconst H = Math.PI / 180;\nclass W {\n  import(e, t, n, i) {\n    var r;\n    const o = null === (r = e.parser.json.extensions) || void 0 === r ? void 0 : r.VRM;\n    if (!o) return null;\n    const s = o.firstPerson;\n    if (!s) return null;\n    const a = this._importApplyer(s, n, i);\n    return new G(t, a || void 0);\n  }\n  _importApplyer(e, t, n) {\n    const i = e.lookAtHorizontalInner,\n      r = e.lookAtHorizontalOuter,\n      o = e.lookAtVerticalDown,\n      s = e.lookAtVerticalUp;\n    switch (e.lookAtTypeName) {\n      case h.FirstPersonLookAtTypeName.Bone:\n        return void 0 === i || void 0 === r || void 0 === o || void 0 === s ? null : new k(n, this._importCurveMapperBone(i), this._importCurveMapperBone(r), this._importCurveMapperBone(o), this._importCurveMapperBone(s));\n      case h.FirstPersonLookAtTypeName.BlendShape:\n        return void 0 === r || void 0 === o || void 0 === s ? null : new I(t, this._importCurveMapperBlendShape(r), this._importCurveMapperBlendShape(o), this._importCurveMapperBlendShape(s));\n      default:\n        return null;\n    }\n  }\n  _importCurveMapperBone(e) {\n    return new O(\"number\" == typeof e.xRange ? H * e.xRange : void 0, \"number\" == typeof e.yRange ? H * e.yRange : void 0, e.curve);\n  }\n  _importCurveMapperBlendShape(e) {\n    return new O(\"number\" == typeof e.xRange ? H * e.xRange : void 0, e.yRange, e.curve);\n  }\n}\nconst z = (t, n) => {\n  const i = (t => {\n    switch (t) {\n      case e.LinearEncoding:\n        return [\"Linear\", \"( value )\"];\n      case e.sRGBEncoding:\n        return [\"sRGB\", \"( value )\"];\n      case e.RGBEEncoding:\n        return [\"RGBE\", \"( value )\"];\n      case e.RGBM7Encoding:\n        return [\"RGBM\", \"( value, 7.0 )\"];\n      case e.RGBM16Encoding:\n        return [\"RGBM\", \"( value, 16.0 )\"];\n      case e.RGBDEncoding:\n        return [\"RGBD\", \"( value, 256.0 )\"];\n      case e.GammaEncoding:\n        return [\"Gamma\", \"( value, float( GAMMA_FACTOR ) )\"];\n      default:\n        throw new Error(\"unsupported encoding: \" + t);\n    }\n  })(n);\n  return \"vec4 \" + t + \"( vec4 value ) { return \" + i[0] + \"ToLinear\" + i[1] + \"; }\";\n};\nconst j = 2 * Math.PI;\nvar Y, X, q, Q, Z;\n!function (e) {\n  e[e.Off = 0] = \"Off\", e[e.Front = 1] = \"Front\", e[e.Back = 2] = \"Back\";\n}(Y || (Y = {})), function (e) {\n  e[e.None = 0] = \"None\", e[e.Normal = 1] = \"Normal\", e[e.LitShadeRate = 2] = \"LitShadeRate\", e[e.UV = 3] = \"UV\";\n}(X || (X = {})), function (e) {\n  e[e.FixedColor = 0] = \"FixedColor\", e[e.MixedLighting = 1] = \"MixedLighting\";\n}(q || (q = {})), function (e) {\n  e[e.None = 0] = \"None\", e[e.WorldCoordinates = 1] = \"WorldCoordinates\", e[e.ScreenCoordinates = 2] = \"ScreenCoordinates\";\n}(Q || (Q = {})), function (e) {\n  e[e.Opaque = 0] = \"Opaque\", e[e.Cutout = 1] = \"Cutout\", e[e.Transparent = 2] = \"Transparent\", e[e.TransparentWithZWrite = 3] = \"TransparentWithZWrite\";\n}(Z || (Z = {}));\nclass $ extends e.ShaderMaterial {\n  constructor() {\n    let t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    super(), this.isMToonMaterial = !0, this.cutoff = .5, this.color = new e.Vector4(1, 1, 1, 1), this.shadeColor = new e.Vector4(.97, .81, .86, 1), this.map = null, this.mainTex_ST = new e.Vector4(0, 0, 1, 1), this.shadeTexture = null, this.normalMap = null, this.normalMapType = e.TangentSpaceNormalMap, this.normalScale = new e.Vector2(1, 1), this.receiveShadowRate = 1, this.receiveShadowTexture = null, this.shadingGradeRate = 1, this.shadingGradeTexture = null, this.shadeShift = 0, this.shadeToony = .9, this.lightColorAttenuation = 0, this.indirectLightIntensity = .1, this.rimTexture = null, this.rimColor = new e.Vector4(0, 0, 0, 1), this.rimLightingMix = 0, this.rimFresnelPower = 1, this.rimLift = 0, this.sphereAdd = null, this.emissionColor = new e.Vector4(0, 0, 0, 1), this.emissiveMap = null, this.outlineWidthTexture = null, this.outlineWidth = .5, this.outlineScaledMaxDistance = 1, this.outlineColor = new e.Vector4(0, 0, 0, 1), this.outlineLightingMix = 1, this.uvAnimMaskTexture = null, this.uvAnimScrollX = 0, this.uvAnimScrollY = 0, this.uvAnimRotation = 0, this.shouldApplyUniforms = !0, this._debugMode = X.None, this._blendMode = Z.Opaque, this._outlineWidthMode = Q.None, this._outlineColorMode = q.FixedColor, this._cullMode = Y.Back, this._outlineCullMode = Y.Front, this._isOutline = !1, this._uvAnimOffsetX = 0, this._uvAnimOffsetY = 0, this._uvAnimPhase = 0, this.encoding = t.encoding || e.LinearEncoding, this.encoding !== e.LinearEncoding && this.encoding !== e.sRGBEncoding && console.warn(\"The specified color encoding does not work properly with MToonMaterial. You might want to use THREE.sRGBEncoding instead.\"), [\"mToonVersion\", \"shadeTexture_ST\", \"bumpMap_ST\", \"receiveShadowTexture_ST\", \"shadingGradeTexture_ST\", \"rimTexture_ST\", \"sphereAdd_ST\", \"emissionMap_ST\", \"outlineWidthTexture_ST\", \"uvAnimMaskTexture_ST\", \"srcBlend\", \"dstBlend\"].forEach(e => {\n      void 0 !== t[e] && delete t[e];\n    }), t.fog = !0, t.lights = !0, t.clipping = !0, parseInt(e.REVISION, 10) < 129 && (t.skinning = t.skinning || !1), parseInt(e.REVISION, 10) < 131 && (t.morphTargets = t.morphTargets || !1, t.morphNormals = t.morphNormals || !1), t.uniforms = e.UniformsUtils.merge([e.UniformsLib.common, e.UniformsLib.normalmap, e.UniformsLib.emissivemap, e.UniformsLib.fog, e.UniformsLib.lights, {\n      cutoff: {\n        value: .5\n      },\n      color: {\n        value: new e.Color(1, 1, 1)\n      },\n      colorAlpha: {\n        value: 1\n      },\n      shadeColor: {\n        value: new e.Color(.97, .81, .86)\n      },\n      mainTex_ST: {\n        value: new e.Vector4(0, 0, 1, 1)\n      },\n      shadeTexture: {\n        value: null\n      },\n      receiveShadowRate: {\n        value: 1\n      },\n      receiveShadowTexture: {\n        value: null\n      },\n      shadingGradeRate: {\n        value: 1\n      },\n      shadingGradeTexture: {\n        value: null\n      },\n      shadeShift: {\n        value: 0\n      },\n      shadeToony: {\n        value: .9\n      },\n      lightColorAttenuation: {\n        value: 0\n      },\n      indirectLightIntensity: {\n        value: .1\n      },\n      rimTexture: {\n        value: null\n      },\n      rimColor: {\n        value: new e.Color(0, 0, 0)\n      },\n      rimLightingMix: {\n        value: 0\n      },\n      rimFresnelPower: {\n        value: 1\n      },\n      rimLift: {\n        value: 0\n      },\n      sphereAdd: {\n        value: null\n      },\n      emissionColor: {\n        value: new e.Color(0, 0, 0)\n      },\n      outlineWidthTexture: {\n        value: null\n      },\n      outlineWidth: {\n        value: .5\n      },\n      outlineScaledMaxDistance: {\n        value: 1\n      },\n      outlineColor: {\n        value: new e.Color(0, 0, 0)\n      },\n      outlineLightingMix: {\n        value: 1\n      },\n      uvAnimMaskTexture: {\n        value: null\n      },\n      uvAnimOffsetX: {\n        value: 0\n      },\n      uvAnimOffsetY: {\n        value: 0\n      },\n      uvAnimTheta: {\n        value: 0\n      }\n    }]), this.setValues(t), this._updateShaderCode(), this._applyUniforms();\n  }\n  get mainTex() {\n    return this.map;\n  }\n  set mainTex(e) {\n    this.map = e;\n  }\n  get bumpMap() {\n    return this.normalMap;\n  }\n  set bumpMap(e) {\n    this.normalMap = e;\n  }\n  get bumpScale() {\n    return this.normalScale.x;\n  }\n  set bumpScale(e) {\n    this.normalScale.set(e, e);\n  }\n  get emissionMap() {\n    return this.emissiveMap;\n  }\n  set emissionMap(e) {\n    this.emissiveMap = e;\n  }\n  get blendMode() {\n    return this._blendMode;\n  }\n  set blendMode(e) {\n    this._blendMode = e, this.depthWrite = this._blendMode !== Z.Transparent, this.transparent = this._blendMode === Z.Transparent || this._blendMode === Z.TransparentWithZWrite, this._updateShaderCode();\n  }\n  get debugMode() {\n    return this._debugMode;\n  }\n  set debugMode(e) {\n    this._debugMode = e, this._updateShaderCode();\n  }\n  get outlineWidthMode() {\n    return this._outlineWidthMode;\n  }\n  set outlineWidthMode(e) {\n    this._outlineWidthMode = e, this._updateShaderCode();\n  }\n  get outlineColorMode() {\n    return this._outlineColorMode;\n  }\n  set outlineColorMode(e) {\n    this._outlineColorMode = e, this._updateShaderCode();\n  }\n  get cullMode() {\n    return this._cullMode;\n  }\n  set cullMode(e) {\n    this._cullMode = e, this._updateCullFace();\n  }\n  get outlineCullMode() {\n    return this._outlineCullMode;\n  }\n  set outlineCullMode(e) {\n    this._outlineCullMode = e, this._updateCullFace();\n  }\n  get zWrite() {\n    return this.depthWrite ? 1 : 0;\n  }\n  set zWrite(e) {\n    this.depthWrite = .5 <= e;\n  }\n  get isOutline() {\n    return this._isOutline;\n  }\n  set isOutline(e) {\n    this._isOutline = e, this._updateShaderCode(), this._updateCullFace();\n  }\n  updateVRMMaterials(e) {\n    this._uvAnimOffsetX = this._uvAnimOffsetX + e * this.uvAnimScrollX, this._uvAnimOffsetY = this._uvAnimOffsetY - e * this.uvAnimScrollY, this._uvAnimPhase = this._uvAnimPhase + e * this.uvAnimRotation, this._applyUniforms();\n  }\n  copy(e) {\n    return super.copy(e), this.cutoff = e.cutoff, this.color.copy(e.color), this.shadeColor.copy(e.shadeColor), this.map = e.map, this.mainTex_ST.copy(e.mainTex_ST), this.shadeTexture = e.shadeTexture, this.normalMap = e.normalMap, this.normalMapType = e.normalMapType, this.normalScale.copy(this.normalScale), this.receiveShadowRate = e.receiveShadowRate, this.receiveShadowTexture = e.receiveShadowTexture, this.shadingGradeRate = e.shadingGradeRate, this.shadingGradeTexture = e.shadingGradeTexture, this.shadeShift = e.shadeShift, this.shadeToony = e.shadeToony, this.lightColorAttenuation = e.lightColorAttenuation, this.indirectLightIntensity = e.indirectLightIntensity, this.rimTexture = e.rimTexture, this.rimColor.copy(e.rimColor), this.rimLightingMix = e.rimLightingMix, this.rimFresnelPower = e.rimFresnelPower, this.rimLift = e.rimLift, this.sphereAdd = e.sphereAdd, this.emissionColor.copy(e.emissionColor), this.emissiveMap = e.emissiveMap, this.outlineWidthTexture = e.outlineWidthTexture, this.outlineWidth = e.outlineWidth, this.outlineScaledMaxDistance = e.outlineScaledMaxDistance, this.outlineColor.copy(e.outlineColor), this.outlineLightingMix = e.outlineLightingMix, this.uvAnimMaskTexture = e.uvAnimMaskTexture, this.uvAnimScrollX = e.uvAnimScrollX, this.uvAnimScrollY = e.uvAnimScrollY, this.uvAnimRotation = e.uvAnimRotation, this.debugMode = e.debugMode, this.blendMode = e.blendMode, this.outlineWidthMode = e.outlineWidthMode, this.outlineColorMode = e.outlineColorMode, this.cullMode = e.cullMode, this.outlineCullMode = e.outlineCullMode, this.isOutline = e.isOutline, this;\n  }\n  _applyUniforms() {\n    this.uniforms.uvAnimOffsetX.value = this._uvAnimOffsetX, this.uniforms.uvAnimOffsetY.value = this._uvAnimOffsetY, this.uniforms.uvAnimTheta.value = j * this._uvAnimPhase, this.shouldApplyUniforms && (this.shouldApplyUniforms = !1, this.uniforms.cutoff.value = this.cutoff, this.uniforms.color.value.setRGB(this.color.x, this.color.y, this.color.z), this.uniforms.colorAlpha.value = this.color.w, this.uniforms.shadeColor.value.setRGB(this.shadeColor.x, this.shadeColor.y, this.shadeColor.z), this.uniforms.map.value = this.map, this.uniforms.mainTex_ST.value.copy(this.mainTex_ST), this.uniforms.shadeTexture.value = this.shadeTexture, this.uniforms.normalMap.value = this.normalMap, this.uniforms.normalScale.value.copy(this.normalScale), this.uniforms.receiveShadowRate.value = this.receiveShadowRate, this.uniforms.receiveShadowTexture.value = this.receiveShadowTexture, this.uniforms.shadingGradeRate.value = this.shadingGradeRate, this.uniforms.shadingGradeTexture.value = this.shadingGradeTexture, this.uniforms.shadeShift.value = this.shadeShift, this.uniforms.shadeToony.value = this.shadeToony, this.uniforms.lightColorAttenuation.value = this.lightColorAttenuation, this.uniforms.indirectLightIntensity.value = this.indirectLightIntensity, this.uniforms.rimTexture.value = this.rimTexture, this.uniforms.rimColor.value.setRGB(this.rimColor.x, this.rimColor.y, this.rimColor.z), this.uniforms.rimLightingMix.value = this.rimLightingMix, this.uniforms.rimFresnelPower.value = this.rimFresnelPower, this.uniforms.rimLift.value = this.rimLift, this.uniforms.sphereAdd.value = this.sphereAdd, this.uniforms.emissionColor.value.setRGB(this.emissionColor.x, this.emissionColor.y, this.emissionColor.z), this.uniforms.emissiveMap.value = this.emissiveMap, this.uniforms.outlineWidthTexture.value = this.outlineWidthTexture, this.uniforms.outlineWidth.value = this.outlineWidth, this.uniforms.outlineScaledMaxDistance.value = this.outlineScaledMaxDistance, this.uniforms.outlineColor.value.setRGB(this.outlineColor.x, this.outlineColor.y, this.outlineColor.z), this.uniforms.outlineLightingMix.value = this.outlineLightingMix, this.uniforms.uvAnimMaskTexture.value = this.uvAnimMaskTexture, this.encoding === e.sRGBEncoding && (this.uniforms.color.value.convertSRGBToLinear(), this.uniforms.shadeColor.value.convertSRGBToLinear(), this.uniforms.rimColor.value.convertSRGBToLinear(), this.uniforms.emissionColor.value.convertSRGBToLinear(), this.uniforms.outlineColor.value.convertSRGBToLinear()), this._updateCullFace());\n  }\n  _updateShaderCode() {\n    const t = null !== this.outlineWidthTexture,\n      n = null !== this.map || null !== this.shadeTexture || null !== this.receiveShadowTexture || null !== this.shadingGradeTexture || null !== this.rimTexture || null !== this.uvAnimMaskTexture;\n    this.defines = {\n      THREE_VRM_THREE_REVISION: parseInt(e.REVISION, 10),\n      OUTLINE: this._isOutline,\n      BLENDMODE_OPAQUE: this._blendMode === Z.Opaque,\n      BLENDMODE_CUTOUT: this._blendMode === Z.Cutout,\n      BLENDMODE_TRANSPARENT: this._blendMode === Z.Transparent || this._blendMode === Z.TransparentWithZWrite,\n      MTOON_USE_UV: t || n,\n      MTOON_UVS_VERTEX_ONLY: t && !n,\n      USE_SHADETEXTURE: null !== this.shadeTexture,\n      USE_RECEIVESHADOWTEXTURE: null !== this.receiveShadowTexture,\n      USE_SHADINGGRADETEXTURE: null !== this.shadingGradeTexture,\n      USE_RIMTEXTURE: null !== this.rimTexture,\n      USE_SPHEREADD: null !== this.sphereAdd,\n      USE_OUTLINEWIDTHTEXTURE: null !== this.outlineWidthTexture,\n      USE_UVANIMMASKTEXTURE: null !== this.uvAnimMaskTexture,\n      DEBUG_NORMAL: this._debugMode === X.Normal,\n      DEBUG_LITSHADERATE: this._debugMode === X.LitShadeRate,\n      DEBUG_UV: this._debugMode === X.UV,\n      OUTLINE_WIDTH_WORLD: this._outlineWidthMode === Q.WorldCoordinates,\n      OUTLINE_WIDTH_SCREEN: this._outlineWidthMode === Q.ScreenCoordinates,\n      OUTLINE_COLOR_FIXED: this._outlineColorMode === q.FixedColor,\n      OUTLINE_COLOR_MIXED: this._outlineColorMode === q.MixedLighting\n    };\n    const i = (null !== this.shadeTexture ? z(\"shadeTextureTexelToLinear\", this.shadeTexture.encoding) + \"\\n\" : \"\") + (null !== this.sphereAdd ? z(\"sphereAddTexelToLinear\", this.sphereAdd.encoding) + \"\\n\" : \"\") + (null !== this.rimTexture ? z(\"rimTextureTexelToLinear\", this.rimTexture.encoding) + \"\\n\" : \"\");\n    this.vertexShader = \"// #define PHONG\\n\\nvarying vec3 vViewPosition;\\n\\n#ifndef FLAT_SHADED\\n  varying vec3 vNormal;\\n#endif\\n\\n#include <common>\\n\\n// #include <uv_pars_vertex>\\n#ifdef MTOON_USE_UV\\n  #ifdef MTOON_UVS_VERTEX_ONLY\\n    vec2 vUv;\\n  #else\\n    varying vec2 vUv;\\n  #endif\\n\\n  uniform vec4 mainTex_ST;\\n#endif\\n\\n#include <uv2_pars_vertex>\\n// #include <displacementmap_pars_vertex>\\n// #include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\n\\n#ifdef USE_OUTLINEWIDTHTEXTURE\\n  uniform sampler2D outlineWidthTexture;\\n#endif\\n\\nuniform float outlineWidth;\\nuniform float outlineScaledMaxDistance;\\n\\nvoid main() {\\n\\n  // #include <uv_vertex>\\n  #ifdef MTOON_USE_UV\\n    vUv = uv;\\n    vUv.y = 1.0 - vUv.y; // uv.y is opposite from UniVRM's\\n    vUv = mainTex_ST.st + mainTex_ST.pq * vUv;\\n    vUv.y = 1.0 - vUv.y; // reverting the previous flip\\n  #endif\\n\\n  #include <uv2_vertex>\\n  #include <color_vertex>\\n\\n  #include <beginnormal_vertex>\\n  #include <morphnormal_vertex>\\n  #include <skinbase_vertex>\\n  #include <skinnormal_vertex>\\n\\n  // we need this to compute the outline properly\\n  objectNormal = normalize( objectNormal );\\n\\n  #include <defaultnormal_vertex>\\n\\n  #ifndef FLAT_SHADED // Normal computed with derivatives when FLAT_SHADED\\n    vNormal = normalize( transformedNormal );\\n  #endif\\n\\n  #include <begin_vertex>\\n\\n  #include <morphtarget_vertex>\\n  #include <skinning_vertex>\\n  // #include <displacementmap_vertex>\\n  #include <project_vertex>\\n  #include <logdepthbuf_vertex>\\n  #include <clipping_planes_vertex>\\n\\n  vViewPosition = - mvPosition.xyz;\\n\\n  float outlineTex = 1.0;\\n\\n  #ifdef OUTLINE\\n    #ifdef USE_OUTLINEWIDTHTEXTURE\\n      outlineTex = texture2D( outlineWidthTexture, vUv ).r;\\n    #endif\\n\\n    #ifdef OUTLINE_WIDTH_WORLD\\n      float worldNormalLength = length( transformedNormal );\\n      vec3 outlineOffset = 0.01 * outlineWidth * outlineTex * worldNormalLength * objectNormal;\\n      gl_Position = projectionMatrix * modelViewMatrix * vec4( outlineOffset + transformed, 1.0 );\\n    #endif\\n\\n    #ifdef OUTLINE_WIDTH_SCREEN\\n      vec3 clipNormal = ( projectionMatrix * modelViewMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\n      vec2 projectedNormal = normalize( clipNormal.xy );\\n      projectedNormal *= min( gl_Position.w, outlineScaledMaxDistance );\\n      projectedNormal.x *= projectionMatrix[ 0 ].x / projectionMatrix[ 1 ].y;\\n      gl_Position.xy += 0.01 * outlineWidth * outlineTex * projectedNormal.xy;\\n    #endif\\n\\n    gl_Position.z += 1E-6 * gl_Position.w; // anti-artifact magic\\n  #endif\\n\\n  #include <worldpos_vertex>\\n  // #include <envmap_vertex>\\n  #include <shadowmap_vertex>\\n  #include <fog_vertex>\\n\\n}\", this.fragmentShader = i + '// #define PHONG\\n\\n#ifdef BLENDMODE_CUTOUT\\n  uniform float cutoff;\\n#endif\\n\\nuniform vec3 color;\\nuniform float colorAlpha;\\nuniform vec3 shadeColor;\\n#ifdef USE_SHADETEXTURE\\n  uniform sampler2D shadeTexture;\\n#endif\\n\\nuniform float receiveShadowRate;\\n#ifdef USE_RECEIVESHADOWTEXTURE\\n  uniform sampler2D receiveShadowTexture;\\n#endif\\n\\nuniform float shadingGradeRate;\\n#ifdef USE_SHADINGGRADETEXTURE\\n  uniform sampler2D shadingGradeTexture;\\n#endif\\n\\nuniform float shadeShift;\\nuniform float shadeToony;\\nuniform float lightColorAttenuation;\\nuniform float indirectLightIntensity;\\n\\n#ifdef USE_RIMTEXTURE\\n  uniform sampler2D rimTexture;\\n#endif\\nuniform vec3 rimColor;\\nuniform float rimLightingMix;\\nuniform float rimFresnelPower;\\nuniform float rimLift;\\n\\n#ifdef USE_SPHEREADD\\n  uniform sampler2D sphereAdd;\\n#endif\\n\\nuniform vec3 emissionColor;\\n\\nuniform vec3 outlineColor;\\nuniform float outlineLightingMix;\\n\\n#ifdef USE_UVANIMMASKTEXTURE\\n  uniform sampler2D uvAnimMaskTexture;\\n#endif\\n\\nuniform float uvAnimOffsetX;\\nuniform float uvAnimOffsetY;\\nuniform float uvAnimTheta;\\n\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n\\n// #include <uv_pars_fragment>\\n#if ( defined( MTOON_USE_UV ) && !defined( MTOON_UVS_VERTEX_ONLY ) )\\n  varying vec2 vUv;\\n#endif\\n\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n// #include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n// #include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n// #include <envmap_common_pars_fragment>\\n// #include <envmap_pars_fragment>\\n// #include <cube_uv_reflection_fragment>\\n#include <fog_pars_fragment>\\n\\n// #include <bsdfs>\\nvec3 BRDF_Lambert( const in vec3 diffuseColor ) {\\n    return RECIPROCAL_PI * diffuseColor;\\n}\\n\\n#include <lights_pars_begin>\\n\\n// #include <lights_phong_pars_fragment>\\nvarying vec3 vViewPosition;\\n\\n#ifndef FLAT_SHADED\\n  varying vec3 vNormal;\\n#endif\\n\\nstruct MToonMaterial {\\n  vec3 diffuseColor;\\n  vec3 shadeColor;\\n  float shadingGrade;\\n  float receiveShadow;\\n};\\n\\n#define Material_LightProbeLOD( material ) (0)\\n\\n#include <shadowmap_pars_fragment>\\n// #include <bumpmap_pars_fragment>\\n\\n// #include <normalmap_pars_fragment>\\n#ifdef USE_NORMALMAP\\n\\n  uniform sampler2D normalMap;\\n  uniform vec2 normalScale;\\n\\n#endif\\n\\n#ifdef OBJECTSPACE_NORMALMAP\\n\\n  uniform mat3 normalMatrix;\\n\\n#endif\\n\\n#if ! defined ( USE_TANGENT ) && defined ( TANGENTSPACE_NORMALMAP )\\n\\n  // Per-Pixel Tangent Space Normal Mapping\\n  // http://hacksoflife.blogspot.ch/2009/11/per-pixel-tangent-space-normal-mapping.html\\n\\n  // three-vrm specific change: it requires `uv` as an input in order to support uv scrolls\\n\\n  // Temporary compat against shader change @ Three.js r126\\n  // See: #21205, #21307, #21299\\n  #if THREE_VRM_THREE_REVISION >= 126\\n\\n    vec3 perturbNormal2Arb( vec2 uv, vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {\\n\\n      vec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\\n      vec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\\n      vec2 st0 = dFdx( uv.st );\\n      vec2 st1 = dFdy( uv.st );\\n\\n      vec3 N = normalize( surf_norm );\\n\\n      vec3 q1perp = cross( q1, N );\\n      vec3 q0perp = cross( N, q0 );\\n\\n      vec3 T = q1perp * st0.x + q0perp * st1.x;\\n      vec3 B = q1perp * st0.y + q0perp * st1.y;\\n\\n      // three-vrm specific change: Workaround for the issue that happens when delta of uv = 0.0\\n      // TODO: Is this still required? Or shall I make a PR about it?\\n      if ( length( T ) == 0.0 || length( B ) == 0.0 ) {\\n        return surf_norm;\\n      }\\n\\n      float det = max( dot( T, T ), dot( B, B ) );\\n      float scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );\\n\\n      return normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );\\n\\n    }\\n\\n  #else\\n\\n    vec3 perturbNormal2Arb( vec2 uv, vec3 eye_pos, vec3 surf_norm, vec3 mapN ) {\\n\\n      // Workaround for Adreno 3XX dFd*( vec3 ) bug. See #9988\\n\\n      vec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\\n      vec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\\n      vec2 st0 = dFdx( uv.st );\\n      vec2 st1 = dFdy( uv.st );\\n\\n      float scale = sign( st1.t * st0.s - st0.t * st1.s ); // we do not care about the magnitude\\n\\n      vec3 S = ( q0 * st1.t - q1 * st0.t ) * scale;\\n      vec3 T = ( - q0 * st1.s + q1 * st0.s ) * scale;\\n\\n      // three-vrm specific change: Workaround for the issue that happens when delta of uv = 0.0\\n      // TODO: Is this still required? Or shall I make a PR about it?\\n\\n      if ( length( S ) == 0.0 || length( T ) == 0.0 ) {\\n        return surf_norm;\\n      }\\n\\n      S = normalize( S );\\n      T = normalize( T );\\n      vec3 N = normalize( surf_norm );\\n\\n      #ifdef DOUBLE_SIDED\\n\\n        // Workaround for Adreno GPUs gl_FrontFacing bug. See #15850 and #10331\\n\\n        bool frontFacing = dot( cross( S, T ), N ) > 0.0;\\n\\n        mapN.xy *= ( float( frontFacing ) * 2.0 - 1.0 );\\n\\n      #else\\n\\n        mapN.xy *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\n      #endif\\n\\n      mat3 tsn = mat3( S, T, N );\\n      return normalize( tsn * mapN );\\n\\n    }\\n\\n  #endif\\n\\n#endif\\n\\n// #include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\n\\n// == lighting stuff ===========================================================\\nfloat getLightIntensity(\\n  const in IncidentLight directLight,\\n  const in GeometricContext geometry,\\n  const in float shadow,\\n  const in float shadingGrade\\n) {\\n  float lightIntensity = dot( geometry.normal, directLight.direction );\\n  lightIntensity = 0.5 + 0.5 * lightIntensity;\\n  lightIntensity = lightIntensity * shadow;\\n  lightIntensity = lightIntensity * shadingGrade;\\n  lightIntensity = lightIntensity * 2.0 - 1.0;\\n  return shadeToony == 1.0\\n    ? step( shadeShift, lightIntensity )\\n    : smoothstep( shadeShift, shadeShift + ( 1.0 - shadeToony ), lightIntensity );\\n}\\n\\nvec3 getLighting( const in vec3 lightColor ) {\\n  vec3 lighting = lightColor;\\n  lighting = mix(\\n    lighting,\\n    vec3( max( 0.001, max( lighting.x, max( lighting.y, lighting.z ) ) ) ),\\n    lightColorAttenuation\\n  );\\n\\n  #ifndef PHYSICALLY_CORRECT_LIGHTS\\n    lighting *= PI;\\n  #endif\\n\\n  return lighting;\\n}\\n\\nvec3 getDiffuse(\\n  const in MToonMaterial material,\\n  const in float lightIntensity,\\n  const in vec3 lighting\\n) {\\n  #ifdef DEBUG_LITSHADERATE\\n    return vec3( BRDF_Lambert( lightIntensity * lighting ) );\\n  #endif\\n\\n  return lighting * BRDF_Lambert( mix( material.shadeColor, material.diffuseColor, lightIntensity ) );\\n}\\n\\n// == post correction ==========================================================\\nvoid postCorrection() {\\n  #include <tonemapping_fragment>\\n  #include <encodings_fragment>\\n  #include <fog_fragment>\\n  #include <premultiplied_alpha_fragment>\\n  #include <dithering_fragment>\\n}\\n\\n// == main procedure ===========================================================\\nvoid main() {\\n  #include <clipping_planes_fragment>\\n\\n  vec2 uv = vec2(0.5, 0.5);\\n\\n  #if ( defined( MTOON_USE_UV ) && !defined( MTOON_UVS_VERTEX_ONLY ) )\\n    uv = vUv;\\n\\n    float uvAnimMask = 1.0;\\n    #ifdef USE_UVANIMMASKTEXTURE\\n      uvAnimMask = texture2D( uvAnimMaskTexture, uv ).x;\\n    #endif\\n\\n    uv = uv + vec2( uvAnimOffsetX, uvAnimOffsetY ) * uvAnimMask;\\n    float uvRotCos = cos( uvAnimTheta * uvAnimMask );\\n    float uvRotSin = sin( uvAnimTheta * uvAnimMask );\\n    uv = mat2( uvRotCos, uvRotSin, -uvRotSin, uvRotCos ) * ( uv - 0.5 ) + 0.5;\\n  #endif\\n\\n  #ifdef DEBUG_UV\\n    gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\\n    #if ( defined( MTOON_USE_UV ) && !defined( MTOON_UVS_VERTEX_ONLY ) )\\n      gl_FragColor = vec4( uv, 0.0, 1.0 );\\n    #endif\\n    return;\\n  #endif\\n\\n  vec4 diffuseColor = vec4( color, colorAlpha );\\n  ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n  vec3 totalEmissiveRadiance = emissionColor;\\n\\n  #include <logdepthbuf_fragment>\\n\\n  // #include <map_fragment>\\n  #ifdef USE_MAP\\n    diffuseColor *= mapTexelToLinear( texture2D( map, uv ) );\\n  #endif\\n\\n  #include <color_fragment>\\n  // #include <alphamap_fragment>\\n\\n  // -- MToon: alpha -----------------------------------------------------------\\n  // #include <alphatest_fragment>\\n  #ifdef BLENDMODE_CUTOUT\\n    if ( diffuseColor.a <= cutoff ) { discard; }\\n    diffuseColor.a = 1.0;\\n  #endif\\n\\n  #ifdef BLENDMODE_OPAQUE\\n    diffuseColor.a = 1.0;\\n  #endif\\n\\n  #if defined( OUTLINE ) && defined( OUTLINE_COLOR_FIXED ) // omitting DebugMode\\n    gl_FragColor = vec4( outlineColor, diffuseColor.a );\\n    postCorrection();\\n    return;\\n  #endif\\n\\n  // #include <specularmap_fragment>\\n  #include <normal_fragment_begin>\\n\\n  #ifdef OUTLINE\\n    normal *= -1.0;\\n  #endif\\n\\n  // #include <normal_fragment_maps>\\n\\n  #ifdef OBJECTSPACE_NORMALMAP\\n\\n    normal = texture2D( normalMap, uv ).xyz * 2.0 - 1.0; // overrides both flatShading and attribute normals\\n\\n    #ifdef FLIP_SIDED\\n\\n      normal = - normal;\\n\\n    #endif\\n\\n    #ifdef DOUBLE_SIDED\\n\\n      // Temporary compat against shader change @ Three.js r126\\n      // See: #21205, #21307, #21299\\n      #if THREE_VRM_THREE_REVISION >= 126\\n\\n        normal = normal * faceDirection;\\n\\n      #else\\n\\n        normal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\n      #endif\\n\\n    #endif\\n\\n    normal = normalize( normalMatrix * normal );\\n\\n  #elif defined( TANGENTSPACE_NORMALMAP )\\n\\n    vec3 mapN = texture2D( normalMap, uv ).xyz * 2.0 - 1.0;\\n    mapN.xy *= normalScale;\\n\\n    #ifdef USE_TANGENT\\n\\n      normal = normalize( vTBN * mapN );\\n\\n    #else\\n\\n      // Temporary compat against shader change @ Three.js r126\\n      // See: #21205, #21307, #21299\\n      #if THREE_VRM_THREE_REVISION >= 126\\n\\n        normal = perturbNormal2Arb( uv, -vViewPosition, normal, mapN, faceDirection );\\n\\n      #else\\n\\n        normal = perturbNormal2Arb( uv, -vViewPosition, normal, mapN );\\n\\n      #endif\\n\\n    #endif\\n\\n  #endif\\n\\n  // #include <emissivemap_fragment>\\n  #ifdef USE_EMISSIVEMAP\\n    totalEmissiveRadiance *= emissiveMapTexelToLinear( texture2D( emissiveMap, uv ) ).rgb;\\n  #endif\\n\\n  #ifdef DEBUG_NORMAL\\n    gl_FragColor = vec4( 0.5 + 0.5 * normal, 1.0 );\\n    return;\\n  #endif\\n\\n  // -- MToon: lighting --------------------------------------------------------\\n  // accumulation\\n  // #include <lights_phong_fragment>\\n  MToonMaterial material;\\n\\n  material.diffuseColor = diffuseColor.rgb;\\n\\n  material.shadeColor = shadeColor;\\n  #ifdef USE_SHADETEXTURE\\n    material.shadeColor *= shadeTextureTexelToLinear( texture2D( shadeTexture, uv ) ).rgb;\\n  #endif\\n\\n  material.shadingGrade = 1.0;\\n  #ifdef USE_SHADINGGRADETEXTURE\\n    material.shadingGrade = 1.0 - shadingGradeRate * ( 1.0 - texture2D( shadingGradeTexture, uv ).r );\\n  #endif\\n\\n  material.receiveShadow = receiveShadowRate;\\n  #ifdef USE_RECEIVESHADOWTEXTURE\\n    material.receiveShadow *= texture2D( receiveShadowTexture, uv ).a;\\n  #endif\\n\\n  // #include <lights_fragment_begin>\\n  GeometricContext geometry;\\n\\n  geometry.position = - vViewPosition;\\n  geometry.normal = normal;\\n  geometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\\n\\n  IncidentLight directLight;\\n  vec3 lightingSum = vec3( 0.0 );\\n\\n  // since these variables will be used in unrolled loop, we have to define in prior\\n  float atten, shadow, lightIntensity;\\n  vec3 lighting;\\n\\n  #if ( NUM_POINT_LIGHTS > 0 )\\n    PointLight pointLight;\\n\\n    #if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\\n    PointLightShadow pointLightShadow;\\n    #endif\\n\\n    #pragma unroll_loop_start\\n    for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n      pointLight = pointLights[ i ];\\n\\n      #if THREE_VRM_THREE_REVISION >= 132\\n        getPointLightInfo( pointLight, geometry, directLight );\\n      #else\\n        getPointDirectLightIrradiance( pointLight, geometry, directLight );\\n      #endif\\n\\n      atten = 1.0;\\n      #if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\\n      pointLightShadow = pointLightShadows[ i ];\\n      atten = all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\\n      #endif\\n\\n      shadow = 1.0 - material.receiveShadow * ( 1.0 - ( 0.5 + 0.5 * atten ) );\\n      lightIntensity = getLightIntensity( directLight, geometry, shadow, material.shadingGrade );\\n      lighting = getLighting( directLight.color );\\n      reflectedLight.directDiffuse += getDiffuse( material, lightIntensity, lighting );\\n      lightingSum += lighting;\\n    }\\n    #pragma unroll_loop_end\\n  #endif\\n\\n  #if ( NUM_SPOT_LIGHTS > 0 )\\n    SpotLight spotLight;\\n\\n    #if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\\n    SpotLightShadow spotLightShadow;\\n    #endif\\n\\n    #pragma unroll_loop_start\\n    for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n      spotLight = spotLights[ i ];\\n\\n      #if THREE_VRM_THREE_REVISION >= 132\\n        getSpotLightInfo( spotLight, geometry, directLight );\\n      #else\\n        getSpotDirectLightIrradiance( spotLight, geometry, directLight );\\n      #endif\\n\\n      atten = 1.0;\\n      #if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\\n      spotLightShadow = spotLightShadows[ i ];\\n      atten = all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n      #endif\\n\\n      shadow = 1.0 - material.receiveShadow * ( 1.0 - ( 0.5 + 0.5 * atten ) );\\n      lightIntensity = getLightIntensity( directLight, geometry, shadow, material.shadingGrade );\\n      lighting = getLighting( directLight.color );\\n      reflectedLight.directDiffuse += getDiffuse( material, lightIntensity, lighting );\\n      lightingSum += lighting;\\n    }\\n    #pragma unroll_loop_end\\n  #endif\\n\\n  #if ( NUM_DIR_LIGHTS > 0 )\\n    DirectionalLight directionalLight;\\n\\n    #if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\\n    DirectionalLightShadow directionalLightShadow;\\n    #endif\\n\\n    #pragma unroll_loop_start\\n    for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n      directionalLight = directionalLights[ i ];\\n\\n      #if THREE_VRM_THREE_REVISION >= 132\\n        getDirectionalLightInfo( directionalLight, geometry, directLight );\\n      #else\\n        getDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\\n      #endif\\n\\n      atten = 1.0;\\n      #if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\\n      directionalLightShadow = directionalLightShadows[ i ];\\n      atten = all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n      #endif\\n\\n      shadow = 1.0 - material.receiveShadow * ( 1.0 - ( 0.5 + 0.5 * atten ) );\\n      lightIntensity = getLightIntensity( directLight, geometry, shadow, material.shadingGrade );\\n      lighting = getLighting( directLight.color );\\n      reflectedLight.directDiffuse += getDiffuse( material, lightIntensity, lighting );\\n      lightingSum += lighting;\\n    }\\n    #pragma unroll_loop_end\\n  #endif\\n\\n  // #if defined( RE_IndirectDiffuse )\\n  vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\\n  #if THREE_VRM_THREE_REVISION >= 133\\n    irradiance += getLightProbeIrradiance( lightProbe, geometry.normal );\\n  #else\\n    irradiance += getLightProbeIrradiance( lightProbe, geometry );\\n  #endif\\n  #if ( NUM_HEMI_LIGHTS > 0 )\\n    #pragma unroll_loop_start\\n    for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n      irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n    }\\n    #pragma unroll_loop_end\\n  #endif\\n  // #endif\\n\\n  // #include <lights_fragment_maps>\\n  #ifdef USE_LIGHTMAP\\n    vec4 lightMapTexel = texture2D( lightMap, vUv2 );\\n    vec3 lightMapIrradiance = lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\\n    #ifndef PHYSICALLY_CORRECT_LIGHTS\\n      lightMapIrradiance *= PI;\\n    #endif\\n    irradiance += lightMapIrradiance;\\n  #endif\\n\\n  // #include <lights_fragment_end>\\n  // RE_IndirectDiffuse here\\n  reflectedLight.indirectDiffuse += indirectLightIntensity * irradiance * BRDF_Lambert( material.diffuseColor );\\n\\n  // modulation\\n  #include <aomap_fragment>\\n\\n  vec3 col = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;\\n\\n  // The \"comment out if you want to PBR absolutely\" line\\n  #ifndef DEBUG_LITSHADERATE\\n    col = min(col, material.diffuseColor);\\n  #endif\\n\\n  #if defined( OUTLINE ) && defined( OUTLINE_COLOR_MIXED )\\n    gl_FragColor = vec4(\\n      outlineColor.rgb * mix( vec3( 1.0 ), col, outlineLightingMix ),\\n      diffuseColor.a\\n    );\\n    postCorrection();\\n    return;\\n  #endif\\n\\n  #ifdef DEBUG_LITSHADERATE\\n    gl_FragColor = vec4( col, diffuseColor.a );\\n    postCorrection();\\n    return;\\n  #endif\\n\\n  // -- MToon: parametric rim lighting -----------------------------------------\\n  vec3 viewDir = normalize( vViewPosition );\\n  vec3 rimMix = mix( vec3( 1.0 ), lightingSum + indirectLightIntensity * irradiance, rimLightingMix );\\n  vec3 rim = rimColor * pow( saturate( 1.0 - dot( viewDir, normal ) + rimLift ), rimFresnelPower );\\n  #ifdef USE_RIMTEXTURE\\n    rim *= rimTextureTexelToLinear( texture2D( rimTexture, uv ) ).rgb;\\n  #endif\\n  col += rim;\\n\\n  // -- MToon: additive matcap -------------------------------------------------\\n  #ifdef USE_SPHEREADD\\n    {\\n      vec3 x = normalize( vec3( viewDir.z, 0.0, -viewDir.x ) );\\n      vec3 y = cross( viewDir, x ); // guaranteed to be normalized\\n      vec2 sphereUv = 0.5 + 0.5 * vec2( dot( x, normal ), -dot( y, normal ) );\\n      vec3 matcap = sphereAddTexelToLinear( texture2D( sphereAdd, sphereUv ) ).xyz;\\n      col += matcap;\\n    }\\n  #endif\\n\\n  // -- MToon: Emission --------------------------------------------------------\\n  col += totalEmissiveRadiance;\\n\\n  // #include <envmap_fragment>\\n\\n  // -- Almost done! -----------------------------------------------------------\\n  gl_FragColor = vec4( col, diffuseColor.a );\\n  postCorrection();\\n}', this.needsUpdate = !0;\n  }\n  _updateCullFace() {\n    this.isOutline ? this.outlineCullMode === Y.Off ? this.side = e.DoubleSide : this.outlineCullMode === Y.Front ? this.side = e.BackSide : this.outlineCullMode === Y.Back && (this.side = e.FrontSide) : this.cullMode === Y.Off ? this.side = e.DoubleSide : this.cullMode === Y.Front ? this.side = e.BackSide : this.cullMode === Y.Back && (this.side = e.FrontSide);\n  }\n}\nvar J;\n!function (e) {\n  e[e.Opaque = 0] = \"Opaque\", e[e.Cutout = 1] = \"Cutout\", e[e.Transparent = 2] = \"Transparent\", e[e.TransparentWithZWrite = 3] = \"TransparentWithZWrite\";\n}(J || (J = {}));\nclass K extends e.ShaderMaterial {\n  constructor(t) {\n    super(), this.isVRMUnlitMaterial = !0, this.cutoff = .5, this.map = null, this.mainTex_ST = new e.Vector4(0, 0, 1, 1), this._renderType = J.Opaque, this.shouldApplyUniforms = !0, void 0 === t && (t = {}), t.fog = !0, t.clipping = !0, parseInt(e.REVISION, 10) < 129 && (t.skinning = t.skinning || !1), parseInt(e.REVISION, 10) < 131 && (t.morphTargets = t.morphTargets || !1, t.morphNormals = t.morphNormals || !1), t.uniforms = e.UniformsUtils.merge([e.UniformsLib.common, e.UniformsLib.fog, {\n      cutoff: {\n        value: .5\n      },\n      mainTex_ST: {\n        value: new e.Vector4(0, 0, 1, 1)\n      }\n    }]), this.setValues(t), this._updateShaderCode(), this._applyUniforms();\n  }\n  get mainTex() {\n    return this.map;\n  }\n  set mainTex(e) {\n    this.map = e;\n  }\n  get renderType() {\n    return this._renderType;\n  }\n  set renderType(e) {\n    this._renderType = e, this.depthWrite = this._renderType !== J.Transparent, this.transparent = this._renderType === J.Transparent || this._renderType === J.TransparentWithZWrite, this._updateShaderCode();\n  }\n  updateVRMMaterials(e) {\n    this._applyUniforms();\n  }\n  copy(e) {\n    return super.copy(e), this.cutoff = e.cutoff, this.map = e.map, this.mainTex_ST.copy(e.mainTex_ST), this.renderType = e.renderType, this;\n  }\n  _applyUniforms() {\n    this.shouldApplyUniforms && (this.shouldApplyUniforms = !1, this.uniforms.cutoff.value = this.cutoff, this.uniforms.map.value = this.map, this.uniforms.mainTex_ST.value.copy(this.mainTex_ST));\n  }\n  _updateShaderCode() {\n    this.defines = {\n      RENDERTYPE_OPAQUE: this._renderType === J.Opaque,\n      RENDERTYPE_CUTOUT: this._renderType === J.Cutout,\n      RENDERTYPE_TRANSPARENT: this._renderType === J.Transparent || this._renderType === J.TransparentWithZWrite\n    }, this.vertexShader = \"#include <common>\\n\\n// #include <uv_pars_vertex>\\n#ifdef USE_MAP\\n  varying vec2 vUv;\\n  uniform vec4 mainTex_ST;\\n#endif\\n\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\n\\nvoid main() {\\n\\n  // #include <uv_vertex>\\n  #ifdef USE_MAP\\n    vUv = vec2( mainTex_ST.p * uv.x + mainTex_ST.s, mainTex_ST.q * uv.y + mainTex_ST.t );\\n  #endif\\n\\n  #include <uv2_vertex>\\n  #include <color_vertex>\\n  #include <skinbase_vertex>\\n\\n  #ifdef USE_ENVMAP\\n\\n  #include <beginnormal_vertex>\\n  #include <morphnormal_vertex>\\n  #include <skinnormal_vertex>\\n  #include <defaultnormal_vertex>\\n\\n  #endif\\n\\n  #include <begin_vertex>\\n  #include <morphtarget_vertex>\\n  #include <skinning_vertex>\\n  #include <project_vertex>\\n  #include <logdepthbuf_vertex>\\n\\n  #include <worldpos_vertex>\\n  #include <clipping_planes_vertex>\\n  #include <envmap_vertex>\\n  #include <fog_vertex>\\n\\n}\", this.fragmentShader = \"#ifdef RENDERTYPE_CUTOUT\\n  uniform float cutoff;\\n#endif\\n\\n#include <common>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n// #include <alphamap_pars_fragment>\\n// #include <aomap_pars_fragment>\\n// #include <lightmap_pars_fragment>\\n// #include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n// #include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\n\\n// == main procedure ===========================================================\\nvoid main() {\\n  #include <clipping_planes_fragment>\\n\\n  vec4 diffuseColor = vec4( 1.0 );\\n\\n  #include <logdepthbuf_fragment>\\n\\n  // #include <map_fragment>\\n  #ifdef USE_MAP\\n    diffuseColor *= mapTexelToLinear( texture2D( map, vUv ) );\\n  #endif\\n\\n  #include <color_fragment>\\n  // #include <alphamap_fragment>\\n\\n  // MToon: alpha\\n  // #include <alphatest_fragment>\\n  #ifdef RENDERTYPE_CUTOUT\\n    if ( diffuseColor.a <= cutoff ) { discard; }\\n    diffuseColor.a = 1.0;\\n  #endif\\n\\n  #ifdef RENDERTYPE_OPAQUE\\n    diffuseColor.a = 1.0;\\n  #endif\\n\\n  // #include <specularmap_fragment>\\n\\n  ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\n  // accumulation (baked indirect lighting only)\\n  #ifdef USE_LIGHTMAP\\n    reflectedLight.indirectDiffuse += texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n  #else\\n    reflectedLight.indirectDiffuse += vec3( 1.0 );\\n  #endif\\n\\n  // modulation\\n  // #include <aomap_fragment>\\n\\n  reflectedLight.indirectDiffuse *= diffuseColor.rgb;\\n  vec3 outgoingLight = reflectedLight.indirectDiffuse;\\n\\n  // #include <envmap_fragment>\\n\\n  gl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\n  #include <premultiplied_alpha_fragment>\\n  #include <tonemapping_fragment>\\n  #include <encodings_fragment>\\n  #include <fog_fragment>\\n}\", this.needsUpdate = !0;\n  }\n}\nclass ee {\n  constructor() {\n    let t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    this._encoding = t.encoding || e.LinearEncoding, this._encoding !== e.LinearEncoding && this._encoding !== e.sRGBEncoding && console.warn(\"The specified color encoding might not work properly with VRMMaterialImporter. You might want to use THREE.sRGBEncoding instead.\"), this._requestEnvMap = t.requestEnvMap;\n  }\n  convertGLTFMaterials(e) {\n    var n;\n    return t(this, void 0, void 0, function* () {\n      const i = null === (n = e.parser.json.extensions) || void 0 === n ? void 0 : n.VRM;\n      if (!i) return null;\n      const r = i.materialProperties;\n      if (!r) return null;\n      const o = yield c(e),\n        s = {},\n        a = [];\n      return yield Promise.all(Array.from(o.entries()).map(_ref3 => {\n        let [n, i] = _ref3;\n        return t(this, void 0, void 0, function* () {\n          const o = e.parser.json.nodes[n],\n            l = e.parser.json.meshes[o.mesh];\n          yield Promise.all(i.map((n, i) => t(this, void 0, void 0, function* () {\n            const t = l.primitives[i];\n            if (!t) return;\n            const o = n.geometry,\n              d = o.index ? o.index.count : o.attributes.position.count / 3;\n            Array.isArray(n.material) || (n.material = [n.material], o.addGroup(0, d, 0));\n            const h = t.material;\n            let u,\n              c = r[h];\n            c || (console.warn(`VRMMaterialImporter: There are no material definition for material #${h} on VRM extension.`), c = {\n              shader: \"VRM_USE_GLTFSHADER\"\n            }), s[h] ? u = s[h] : (u = yield this.createVRMMaterials(n.material[0], c, e), s[h] = u, a.push(u.surface), u.outline && a.push(u.outline)), n.material[0] = u.surface, this._requestEnvMap && u.surface.isMeshStandardMaterial && this._requestEnvMap().then(e => {\n              u.surface.envMap = e, u.surface.needsUpdate = !0;\n            }), n.renderOrder = c.renderQueue || 2e3, u.outline && (n.material[1] = u.outline, o.addGroup(0, d, 1));\n          })));\n        });\n      })), a;\n    });\n  }\n  createVRMMaterials(e, n, i) {\n    return t(this, void 0, void 0, function* () {\n      let t, r;\n      if (\"VRM/MToon\" === n.shader) {\n        const o = yield this._extractMaterialProperties(e, n, i);\n        [\"srcBlend\", \"dstBlend\", \"isFirstSetup\"].forEach(e => {\n          void 0 !== o[e] && delete o[e];\n        }), [\"mainTex\", \"shadeTexture\", \"emissionMap\", \"sphereAdd\", \"rimTexture\"].forEach(e => {\n          void 0 !== o[e] && (o[e].encoding = this._encoding);\n        }), o.encoding = this._encoding, t = new $(o), o.outlineWidthMode !== Q.None && (o.isOutline = !0, r = new $(o));\n      } else if (\"VRM/UnlitTexture\" === n.shader) {\n        const r = yield this._extractMaterialProperties(e, n, i);\n        r.renderType = J.Opaque, t = new K(r);\n      } else if (\"VRM/UnlitCutout\" === n.shader) {\n        const r = yield this._extractMaterialProperties(e, n, i);\n        r.renderType = J.Cutout, t = new K(r);\n      } else if (\"VRM/UnlitTransparent\" === n.shader) {\n        const r = yield this._extractMaterialProperties(e, n, i);\n        r.renderType = J.Transparent, t = new K(r);\n      } else if (\"VRM/UnlitTransparentZWrite\" === n.shader) {\n        const r = yield this._extractMaterialProperties(e, n, i);\n        r.renderType = J.TransparentWithZWrite, t = new K(r);\n      } else \"VRM_USE_GLTFSHADER\" !== n.shader && console.warn(`Unknown shader detected: \"${n.shader}\"`), t = this._convertGLTFMaterial(e.clone());\n      return t.name = e.name, t.userData = JSON.parse(JSON.stringify(e.userData)), t.userData.vrmMaterialProperties = n, r && (r.name = e.name + \" (Outline)\", r.userData = JSON.parse(JSON.stringify(e.userData)), r.userData.vrmMaterialProperties = n), {\n        surface: t,\n        outline: r\n      };\n    });\n  }\n  _renameMaterialProperty(e) {\n    return \"_\" !== e[0] ? (console.warn(`VRMMaterials: Given property name \"${e}\" might be invalid`), e) : (e = e.substring(1), /[A-Z]/.test(e[0]) ? e[0].toLowerCase() + e.substring(1) : (console.warn(`VRMMaterials: Given property name \"${e}\" might be invalid`), e));\n  }\n  _convertGLTFMaterial(t) {\n    if (t.isMeshStandardMaterial) {\n      const n = t;\n      n.map && (n.map.encoding = this._encoding), n.emissiveMap && (n.emissiveMap.encoding = this._encoding), this._encoding === e.LinearEncoding && (n.color.convertLinearToSRGB(), n.emissive.convertLinearToSRGB());\n    }\n    if (t.isMeshBasicMaterial) {\n      const n = t;\n      n.map && (n.map.encoding = this._encoding), this._encoding === e.LinearEncoding && n.color.convertLinearToSRGB();\n    }\n    return t;\n  }\n  _extractMaterialProperties(t, n, i) {\n    const r = [],\n      o = {};\n    if (n.textureProperties) for (const e of Object.keys(n.textureProperties)) {\n      const t = this._renameMaterialProperty(e),\n        s = n.textureProperties[e];\n      r.push(i.parser.getDependency(\"texture\", s).then(e => {\n        o[t] = e;\n      }));\n    }\n    if (n.floatProperties) for (const e of Object.keys(n.floatProperties)) {\n      const t = this._renameMaterialProperty(e);\n      o[t] = n.floatProperties[e];\n    }\n    if (n.vectorProperties) for (const t of Object.keys(n.vectorProperties)) {\n      let i = this._renameMaterialProperty(t);\n      [\"_MainTex\", \"_ShadeTexture\", \"_BumpMap\", \"_ReceiveShadowTexture\", \"_ShadingGradeTexture\", \"_RimTexture\", \"_SphereAdd\", \"_EmissionMap\", \"_OutlineWidthTexture\", \"_UvAnimMaskTexture\"].some(e => t === e) && (i += \"_ST\"), o[i] = new e.Vector4(...n.vectorProperties[t]);\n    }\n    return parseInt(e.REVISION, 10) < 129 && (o.skinning = t.skinning || !1), parseInt(e.REVISION, 10) < 131 && (o.morphTargets = t.morphTargets || !1, o.morphNormals = t.morphNormals || !1), Promise.all(r).then(() => o);\n  }\n}\nclass te {\n  constructor(e) {\n    var t;\n    this.ignoreTexture = null !== (t = null == e ? void 0 : e.ignoreTexture) && void 0 !== t && t;\n  }\n  import(e) {\n    var n;\n    return t(this, void 0, void 0, function* () {\n      const t = null === (n = e.parser.json.extensions) || void 0 === n ? void 0 : n.VRM;\n      if (!t) return null;\n      const i = t.meta;\n      if (!i) return null;\n      let r;\n      return this.ignoreTexture || null == i.texture || -1 === i.texture || (r = yield e.parser.getDependency(\"texture\", i.texture)), {\n        allowedUserName: i.allowedUserName,\n        author: i.author,\n        commercialUssageName: i.commercialUssageName,\n        contactInformation: i.contactInformation,\n        licenseName: i.licenseName,\n        otherLicenseUrl: i.otherLicenseUrl,\n        otherPermissionUrl: i.otherPermissionUrl,\n        reference: i.reference,\n        sexualUssageName: i.sexualUssageName,\n        texture: null != r ? r : void 0,\n        title: i.title,\n        version: i.version,\n        violentUssageName: i.violentUssageName\n      };\n    });\n  }\n}\nconst ne = new e.Matrix4();\nfunction ie(e) {\n  return e.invert ? e.invert() : e.getInverse(ne.copy(e)), e;\n}\nclass re {\n  constructor(t) {\n    this._inverseCache = new e.Matrix4(), this._shouldUpdateInverse = !0, this.matrix = t;\n    const n = {\n      set: (e, t, n) => (this._shouldUpdateInverse = !0, e[t] = n, !0)\n    };\n    this._originalElements = t.elements, t.elements = new Proxy(t.elements, n);\n  }\n  get inverse() {\n    return this._shouldUpdateInverse && (ie(this._inverseCache.copy(this.matrix)), this._shouldUpdateInverse = !1), this._inverseCache;\n  }\n  revert() {\n    this.matrix.elements = this._originalElements;\n  }\n}\nconst oe = Object.freeze(new e.Matrix4()),\n  se = Object.freeze(new e.Quaternion()),\n  ae = new e.Vector3(),\n  le = new e.Vector3(),\n  de = new e.Vector3(),\n  he = new e.Quaternion(),\n  ue = new e.Matrix4(),\n  ce = new e.Matrix4();\nclass pe {\n  constructor(t) {\n    let n = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var i, r, o, s, a, l;\n    if (this._currentTail = new e.Vector3(), this._prevTail = new e.Vector3(), this._nextTail = new e.Vector3(), this._boneAxis = new e.Vector3(), this._centerSpacePosition = new e.Vector3(), this._center = null, this._parentWorldRotation = new e.Quaternion(), this._initialLocalMatrix = new e.Matrix4(), this._initialLocalRotation = new e.Quaternion(), this._initialLocalChildPosition = new e.Vector3(), this.bone = t, this.bone.matrixAutoUpdate = !1, this.radius = null !== (i = n.radius) && void 0 !== i ? i : .02, this.stiffnessForce = null !== (r = n.stiffnessForce) && void 0 !== r ? r : 1, this.gravityDir = n.gravityDir ? new e.Vector3().copy(n.gravityDir) : new e.Vector3().set(0, -1, 0), this.gravityPower = null !== (o = n.gravityPower) && void 0 !== o ? o : 0, this.dragForce = null !== (s = n.dragForce) && void 0 !== s ? s : .4, this.colliders = null !== (a = n.colliders) && void 0 !== a ? a : [], this._centerSpacePosition.setFromMatrixPosition(this.bone.matrixWorld), this._initialLocalMatrix.copy(this.bone.matrix), this._initialLocalRotation.copy(this.bone.quaternion), 0 === this.bone.children.length) this._initialLocalChildPosition.copy(this.bone.position).normalize().multiplyScalar(.07);else {\n      const e = this.bone.children[0];\n      this._initialLocalChildPosition.copy(e.position);\n    }\n    this.bone.localToWorld(this._currentTail.copy(this._initialLocalChildPosition)), this._prevTail.copy(this._currentTail), this._nextTail.copy(this._currentTail), this._boneAxis.copy(this._initialLocalChildPosition).normalize(), this._centerSpaceBoneLength = ae.copy(this._initialLocalChildPosition).applyMatrix4(this.bone.matrixWorld).sub(this._centerSpacePosition).length(), this.center = null !== (l = n.center) && void 0 !== l ? l : null;\n  }\n  get center() {\n    return this._center;\n  }\n  set center(e) {\n    var t;\n    this._getMatrixCenterToWorld(ue), this._currentTail.applyMatrix4(ue), this._prevTail.applyMatrix4(ue), this._nextTail.applyMatrix4(ue), (null === (t = this._center) || void 0 === t ? void 0 : t.userData.inverseCacheProxy) && (this._center.userData.inverseCacheProxy.revert(), delete this._center.userData.inverseCacheProxy), this._center = e, this._center && (this._center.userData.inverseCacheProxy || (this._center.userData.inverseCacheProxy = new re(this._center.matrixWorld))), this._getMatrixWorldToCenter(ue), this._currentTail.applyMatrix4(ue), this._prevTail.applyMatrix4(ue), this._nextTail.applyMatrix4(ue), ue.multiply(this.bone.matrixWorld), this._centerSpacePosition.setFromMatrixPosition(ue), this._centerSpaceBoneLength = ae.copy(this._initialLocalChildPosition).applyMatrix4(ue).sub(this._centerSpacePosition).length();\n  }\n  reset() {\n    this.bone.quaternion.copy(this._initialLocalRotation), this.bone.updateMatrix(), this.bone.matrixWorld.multiplyMatrices(this._getParentMatrixWorld(), this.bone.matrix), this._centerSpacePosition.setFromMatrixPosition(this.bone.matrixWorld), this.bone.localToWorld(this._currentTail.copy(this._initialLocalChildPosition)), this._prevTail.copy(this._currentTail), this._nextTail.copy(this._currentTail);\n  }\n  update(e) {\n    if (e <= 0) return;\n    this.bone.matrixWorld.multiplyMatrices(this._getParentMatrixWorld(), this.bone.matrix), this.bone.parent ? g(this.bone.parent, this._parentWorldRotation) : this._parentWorldRotation.copy(se), this._getMatrixWorldToCenter(ue), ue.multiply(this.bone.matrixWorld), this._centerSpacePosition.setFromMatrixPosition(ue), this._getMatrixWorldToCenter(ce), ce.multiply(this._getParentMatrixWorld());\n    const t = this.stiffnessForce * e,\n      n = le.copy(this.gravityDir).multiplyScalar(this.gravityPower * e);\n    this._nextTail.copy(this._currentTail).add(ae.copy(this._currentTail).sub(this._prevTail).multiplyScalar(1 - this.dragForce)).add(ae.copy(this._boneAxis).applyMatrix4(this._initialLocalMatrix).applyMatrix4(ce).sub(this._centerSpacePosition).normalize().multiplyScalar(t)).add(n), this._nextTail.sub(this._centerSpacePosition).normalize().multiplyScalar(this._centerSpaceBoneLength).add(this._centerSpacePosition), this._collision(this._nextTail), this._prevTail.copy(this._currentTail), this._currentTail.copy(this._nextTail);\n    const i = ie(ue.copy(ce.multiply(this._initialLocalMatrix))),\n      r = he.setFromUnitVectors(this._boneAxis, ae.copy(this._nextTail).applyMatrix4(i).normalize());\n    this.bone.quaternion.copy(this._initialLocalRotation).multiply(r), this.bone.updateMatrix(), this.bone.matrixWorld.multiplyMatrices(this._getParentMatrixWorld(), this.bone.matrix);\n  }\n  _collision(e) {\n    this.colliders.forEach(t => {\n      this._getMatrixWorldToCenter(ue), ue.multiply(t.matrixWorld);\n      const n = ae.setFromMatrixPosition(ue),\n        i = t.geometry.boundingSphere.radius,\n        r = this.radius + i;\n      if (e.distanceToSquared(n) <= r * r) {\n        const t = le.subVectors(e, n).normalize(),\n          i = de.addVectors(n, t.multiplyScalar(r));\n        e.copy(i.sub(this._centerSpacePosition).normalize().multiplyScalar(this._centerSpaceBoneLength).add(this._centerSpacePosition));\n      }\n    });\n  }\n  _getMatrixCenterToWorld(e) {\n    return this._center ? e.copy(this._center.matrixWorld) : e.identity(), e;\n  }\n  _getMatrixWorldToCenter(e) {\n    return this._center ? e.copy(this._center.userData.inverseCacheProxy.inverse) : e.identity(), e;\n  }\n  _getParentMatrixWorld() {\n    return this.bone.parent ? this.bone.parent.matrixWorld : oe;\n  }\n}\nclass me {\n  constructor(e, t) {\n    this.colliderGroups = [], this.springBoneGroupList = [], this.colliderGroups = e, this.springBoneGroupList = t;\n  }\n  setCenter(e) {\n    this.springBoneGroupList.forEach(t => {\n      t.forEach(t => {\n        t.center = e;\n      });\n    });\n  }\n  lateUpdate(e) {\n    this.springBoneGroupList.forEach(t => {\n      t.forEach(t => {\n        t.update(e);\n      });\n    });\n  }\n  reset() {\n    this.springBoneGroupList.forEach(e => {\n      e.forEach(e => {\n        e.reset();\n      });\n    });\n  }\n}\nconst fe = new e.Vector3(),\n  ge = new e.MeshBasicMaterial({\n    visible: !1\n  });\nclass _e {\n  import(e) {\n    var n;\n    return t(this, void 0, void 0, function* () {\n      const t = null === (n = e.parser.json.extensions) || void 0 === n ? void 0 : n.VRM;\n      if (!t) return null;\n      const i = t.secondaryAnimation;\n      if (!i) return null;\n      const r = yield this._importColliderMeshGroups(e, i),\n        o = yield this._importSpringBoneGroupList(e, i, r);\n      return new me(r, o);\n    });\n  }\n  _createSpringBone(e) {\n    let t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    return new pe(e, t);\n  }\n  _importSpringBoneGroupList(n, i, r) {\n    return t(this, void 0, void 0, function* () {\n      const o = i.boneGroups || [],\n        s = [];\n      return yield Promise.all(o.map(i => t(this, void 0, void 0, function* () {\n        if (void 0 === i.stiffiness || void 0 === i.gravityDir || void 0 === i.gravityDir.x || void 0 === i.gravityDir.y || void 0 === i.gravityDir.z || void 0 === i.gravityPower || void 0 === i.dragForce || void 0 === i.hitRadius || void 0 === i.colliderGroups || void 0 === i.bones || void 0 === i.center) return;\n        const o = i.stiffiness,\n          a = new e.Vector3(i.gravityDir.x, i.gravityDir.y, -i.gravityDir.z),\n          l = i.gravityPower,\n          d = i.dragForce,\n          h = i.hitRadius,\n          u = [];\n        i.colliderGroups.forEach(e => {\n          u.push(...r[e].colliders);\n        });\n        const c = [];\n        yield Promise.all(i.bones.map(e => t(this, void 0, void 0, function* () {\n          const t = yield n.parser.getDependency(\"node\", e),\n            r = -1 !== i.center ? yield n.parser.getDependency(\"node\", i.center) : null;\n          t && t.traverse(e => {\n            const t = this._createSpringBone(e, {\n              radius: h,\n              stiffnessForce: o,\n              gravityDir: a,\n              gravityPower: l,\n              dragForce: d,\n              colliders: u,\n              center: r\n            });\n            c.push(t);\n          });\n        }))), s.push(c);\n      }))), s;\n    });\n  }\n  _importColliderMeshGroups(e, n) {\n    return t(this, void 0, void 0, function* () {\n      const i = n.colliderGroups;\n      if (void 0 === i) return [];\n      const r = [];\n      return i.forEach(n => t(this, void 0, void 0, function* () {\n        if (void 0 === n.node || void 0 === n.colliders) return;\n        const t = yield e.parser.getDependency(\"node\", n.node),\n          i = [];\n        n.colliders.forEach(e => {\n          if (void 0 === e.offset || void 0 === e.offset.x || void 0 === e.offset.y || void 0 === e.offset.z || void 0 === e.radius) return;\n          const n = fe.set(e.offset.x, e.offset.y, -e.offset.z),\n            r = this._createColliderMesh(e.radius, n);\n          t.add(r), i.push(r);\n        });\n        const o = {\n          node: n.node,\n          colliders: i\n        };\n        r.push(o);\n      })), r;\n    });\n  }\n  _createColliderMesh(t, n) {\n    const i = new e.Mesh(new e.SphereBufferGeometry(t, 8, 4), ge);\n    return i.position.copy(n), i.name = \"vrmColliderSphere\", i.geometry.computeBoundingSphere(), i;\n  }\n}\nclass ve {\n  constructor() {\n    let e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    this._metaImporter = e.metaImporter || new te(), this._blendShapeImporter = e.blendShapeImporter || new v(), this._lookAtImporter = e.lookAtImporter || new W(), this._humanoidImporter = e.humanoidImporter || new C(), this._firstPersonImporter = e.firstPersonImporter || new E(), this._materialImporter = e.materialImporter || new ee(), this._springBoneImporter = e.springBoneImporter || new _e();\n  }\n  import(e) {\n    return t(this, void 0, void 0, function* () {\n      if (void 0 === e.parser.json.extensions || void 0 === e.parser.json.extensions.VRM) throw new Error(\"Could not find VRM extension on the GLTF\");\n      const t = e.scene;\n      t.updateMatrixWorld(!1), t.traverse(e => {\n        e.isMesh && (e.frustumCulled = !1);\n      });\n      const n = (yield this._metaImporter.import(e)) || void 0,\n        i = (yield this._materialImporter.convertGLTFMaterials(e)) || void 0,\n        r = (yield this._humanoidImporter.import(e)) || void 0,\n        o = r && (yield this._firstPersonImporter.import(e, r)) || void 0,\n        s = (yield this._blendShapeImporter.import(e)) || void 0,\n        a = o && s && r && (yield this._lookAtImporter.import(e, o, s, r)) || void 0,\n        l = (yield this._springBoneImporter.import(e)) || void 0;\n      return new ye({\n        scene: e.scene,\n        meta: n,\n        materials: i,\n        humanoid: r,\n        firstPerson: o,\n        blendShapeProxy: s,\n        lookAt: a,\n        springBoneManager: l\n      });\n    });\n  }\n}\nclass ye {\n  constructor(e) {\n    this.scene = e.scene, this.humanoid = e.humanoid, this.blendShapeProxy = e.blendShapeProxy, this.firstPerson = e.firstPerson, this.lookAt = e.lookAt, this.materials = e.materials, this.springBoneManager = e.springBoneManager, this.meta = e.meta;\n  }\n  static from(e) {\n    let n = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    return t(this, void 0, void 0, function* () {\n      const t = new ve(n);\n      return yield t.import(e);\n    });\n  }\n  update(e) {\n    this.lookAt && this.lookAt.update(e), this.blendShapeProxy && this.blendShapeProxy.update(), this.springBoneManager && this.springBoneManager.lateUpdate(e), this.materials && this.materials.forEach(t => {\n      t.updateVRMMaterials && t.updateVRMMaterials(e);\n    });\n  }\n  dispose() {\n    var e, t;\n    const n = this.scene;\n    n && n.traverse(i), null === (t = null === (e = this.meta) || void 0 === e ? void 0 : e.texture) || void 0 === t || t.dispose();\n  }\n}\nconst Te = new e.Vector2(),\n  xe = new e.OrthographicCamera(-1, 1, -1, 1, -1, 1),\n  Se = new e.MeshBasicMaterial({\n    color: 16777215,\n    side: e.DoubleSide\n  }),\n  Me = new e.Mesh(new e.PlaneBufferGeometry(2, 2), Se),\n  Ee = new e.Scene();\nEe.add(Me);\nclass Le {\n  constructor() {}\n}\nLe.extractThumbnailBlob = function (e, t) {\n  let n = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 512;\n  var i;\n  const r = null === (i = t.meta) || void 0 === i ? void 0 : i.texture;\n  if (!r) throw new Error(\"extractThumbnailBlob: This VRM does not have a thumbnail\");\n  const o = e.getContext().canvas;\n  e.getSize(Te);\n  const s = Te.x,\n    a = Te.y;\n  return e.setSize(n, n, !1), Se.map = r, e.render(Ee, xe), Se.map = null, o instanceof OffscreenCanvas ? o.convertToBlob().finally(() => {\n    e.setSize(s, a, !1);\n  }) : new Promise((t, n) => {\n    o.toBlob(i => {\n      e.setSize(s, a, !1), null == i ? n(\"extractThumbnailBlob: Failed to create a blob\") : t(i);\n    });\n  });\n}, Le.removeUnnecessaryJoints = function (t) {\n  const n = new Map();\n  t.traverse(t => {\n    if (\"SkinnedMesh\" !== t.type) return;\n    const i = t,\n      r = i.geometry.getAttribute(\"skinIndex\");\n    let o = n.get(r);\n    if (!o) {\n      const t = [],\n        s = [],\n        a = {},\n        l = r.array;\n      for (let e = 0; e < l.length; e++) {\n        const n = l[e];\n        void 0 === a[n] && (a[n] = t.length, t.push(i.skeleton.bones[n]), s.push(i.skeleton.boneInverses[n])), l[e] = a[n];\n      }\n      r.copyArray(l), r.needsUpdate = !0, o = new e.Skeleton(t, s), n.set(r, o);\n    }\n    i.bind(o, new e.Matrix4());\n  });\n};\nconst we = new e.Vector3();\nclass Re extends G {\n  setupHelper(t, n) {\n    n.disableFaceDirectionHelper || (this._faceDirectionHelper = new e.ArrowHelper(new e.Vector3(0, 0, -1), new e.Vector3(0, 0, 0), .5, 16711935), t.add(this._faceDirectionHelper));\n  }\n  update(e) {\n    super.update(e), this._faceDirectionHelper && (this.firstPerson.getFirstPersonWorldPosition(this._faceDirectionHelper.position), this._faceDirectionHelper.setDirection(this.getLookAtWorldDirection(we)));\n  }\n}\nclass Pe extends W {\n  import(e, t, n, i) {\n    var r;\n    const o = null === (r = e.parser.json.extensions) || void 0 === r ? void 0 : r.VRM;\n    if (!o) return null;\n    const s = o.firstPerson;\n    if (!s) return null;\n    const a = this._importApplyer(s, n, i);\n    return new Re(t, a || void 0);\n  }\n}\nconst Ae = new e.MeshBasicMaterial({\n  color: 16711935,\n  wireframe: !0,\n  transparent: !0,\n  depthTest: !1\n});\nclass Ce extends me {\n  setupHelper(e, t) {\n    t.disableSpringBoneHelper || (this.springBoneGroupList.forEach(t => {\n      t.forEach(t => {\n        if (t.getGizmo) {\n          const n = t.getGizmo();\n          e.add(n);\n        }\n      });\n    }), this.colliderGroups.forEach(e => {\n      e.colliders.forEach(e => {\n        e.material = Ae, e.renderOrder = De;\n      });\n    }));\n  }\n}\nconst Oe = new e.Vector3();\nclass be extends pe {\n  constructor(e, t) {\n    super(e, t);\n  }\n  getGizmo() {\n    if (this._gizmo) return this._gizmo;\n    const t = Oe.copy(this._nextTail).sub(this._centerSpacePosition),\n      n = t.length();\n    return this._gizmo = new e.ArrowHelper(t.normalize(), this._centerSpacePosition, n, 16776960, this.radius, this.radius), this._gizmo.line.renderOrder = De, this._gizmo.cone.renderOrder = De, this._gizmo.line.material.depthTest = !1, this._gizmo.line.material.transparent = !0, this._gizmo.cone.material.depthTest = !1, this._gizmo.cone.material.transparent = !0, this._gizmo;\n  }\n  update(e) {\n    super.update(e), this._updateGizmo();\n  }\n  _updateGizmo() {\n    if (!this._gizmo) return;\n    const e = Oe.copy(this._currentTail).sub(this._centerSpacePosition),\n      t = e.length();\n    this._gizmo.setDirection(e.normalize()), this._gizmo.setLength(t, this.radius, this.radius), this._gizmo.position.copy(this._centerSpacePosition);\n  }\n}\nclass Ie extends _e {\n  import(e) {\n    var n;\n    return t(this, void 0, void 0, function* () {\n      const t = null === (n = e.parser.json.extensions) || void 0 === n ? void 0 : n.VRM;\n      if (!t) return null;\n      const i = t.secondaryAnimation;\n      if (!i) return null;\n      const r = yield this._importColliderMeshGroups(e, i),\n        o = yield this._importSpringBoneGroupList(e, i, r);\n      return new Ce(r, o);\n    });\n  }\n  _createSpringBone(e, t) {\n    return new be(e, t);\n  }\n}\nclass Ne extends ve {\n  constructor() {\n    let e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    e.lookAtImporter = e.lookAtImporter || new Pe(), e.springBoneImporter = e.springBoneImporter || new Ie(), super(e);\n  }\n  import(e) {\n    let n = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    return t(this, void 0, void 0, function* () {\n      if (void 0 === e.parser.json.extensions || void 0 === e.parser.json.extensions.VRM) throw new Error(\"Could not find VRM extension on the GLTF\");\n      const t = e.scene;\n      t.updateMatrixWorld(!1), t.traverse(e => {\n        e.isMesh && (e.frustumCulled = !1);\n      });\n      const i = (yield this._metaImporter.import(e)) || void 0,\n        r = (yield this._materialImporter.convertGLTFMaterials(e)) || void 0,\n        o = (yield this._humanoidImporter.import(e)) || void 0,\n        s = o && (yield this._firstPersonImporter.import(e, o)) || void 0,\n        a = (yield this._blendShapeImporter.import(e)) || void 0,\n        l = s && a && o && (yield this._lookAtImporter.import(e, s, a, o)) || void 0;\n      l.setupHelper && l.setupHelper(t, n);\n      const d = (yield this._springBoneImporter.import(e)) || void 0;\n      return d.setupHelper && d.setupHelper(t, n), new Ue({\n        scene: e.scene,\n        meta: i,\n        materials: r,\n        humanoid: o,\n        firstPerson: s,\n        blendShapeProxy: a,\n        lookAt: l,\n        springBoneManager: d\n      }, n);\n    });\n  }\n}\nconst De = 1e4;\nclass Ue extends ye {\n  static from(e) {\n    let n = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    let i = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    return t(this, void 0, void 0, function* () {\n      const t = new Ne(n);\n      return yield t.import(e, i);\n    });\n  }\n  constructor(t) {\n    let n = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    super(t), n.disableBoxHelper || this.scene.add(new e.BoxHelper(this.scene)), n.disableSkeletonHelper || this.scene.add(new e.SkeletonHelper(this.scene));\n  }\n  update(e) {\n    super.update(e);\n  }\n}\nexport { $ as MToonMaterial, Y as MToonMaterialCullMode, X as MToonMaterialDebugMode, q as MToonMaterialOutlineColorMode, Q as MToonMaterialOutlineWidthMode, Z as MToonMaterialRenderMode, ye as VRM, d as VRMBlendShapeGroup, v as VRMBlendShapeImporter, _ as VRMBlendShapeProxy, O as VRMCurveMapper, Ue as VRMDebug, M as VRMFirstPerson, E as VRMFirstPersonImporter, L as VRMHumanBone, A as VRMHumanoid, C as VRMHumanoidImporter, ve as VRMImporter, b as VRMLookAtApplyer, I as VRMLookAtBlendShapeApplyer, k as VRMLookAtBoneApplyer, G as VRMLookAtHead, W as VRMLookAtImporter, ee as VRMMaterialImporter, te as VRMMetaImporter, S as VRMRendererFirstPersonFlags, h as VRMSchema, pe as VRMSpringBone, be as VRMSpringBoneDebug, _e as VRMSpringBoneImporter, Ie as VRMSpringBoneImporterDebug, me as VRMSpringBoneManager, K as VRMUnlitMaterial, J as VRMUnlitMaterialRenderType, Le as VRMUtils, De as VRM_GIZMO_RENDER_ORDER };","map":{"version":3,"names":["e","t","n","i","Promise","r","o","s","l","next","a","throw","done","value","then","apply","Object","keys","forEach","isTexture","dispose","geometry","material","Array","isArray","NUMBER","VECTOR2","VECTOR3","VECTOR4","COLOR","Vector2","Vector3","Vector4","Color","d","Object3D","constructor","weight","isBinary","_binds","_materialValues","name","type","visible","addBind","push","meshes","morphTargetIndex","addMaterialValue","propertyName","defaultValue","isVector2","clone","fromArray","targetValue","sub","isVector3","isVector4","isColor","deltaValue","applyWeight","morphTargetInfluences","add","copy","multiplyScalar","shouldApplyUniforms","clearAppliedWeight","h","u","parser","json","nodes","mesh","primitives","length","traverse","isMesh","c","getDependencies","Map","set","p","console","warn","substring","test","toLowerCase","BlendShapePresetName","A","Angry","Blink","BlinkL","BlinkR","E","Fun","I","Joy","Lookdown","Lookleft","Lookright","Lookup","Neutral","O","Sorrow","U","Unknown","FirstPersonLookAtTypeName","BlendShape","Bone","HumanoidBoneName","Chest","Head","Hips","Jaw","LeftEye","LeftFoot","LeftHand","LeftIndexDistal","LeftIndexIntermediate","LeftIndexProximal","LeftLittleDistal","LeftLittleIntermediate","LeftLittleProximal","LeftLowerArm","LeftLowerLeg","LeftMiddleDistal","LeftMiddleIntermediate","LeftMiddleProximal","LeftRingDistal","LeftRingIntermediate","LeftRingProximal","LeftShoulder","LeftThumbDistal","LeftThumbIntermediate","LeftThumbProximal","LeftToes","LeftUpperArm","LeftUpperLeg","Neck","RightEye","RightFoot","RightHand","RightIndexDistal","RightIndexIntermediate","RightIndexProximal","RightLittleDistal","RightLittleIntermediate","RightLittleProximal","RightLowerArm","RightLowerLeg","RightMiddleDistal","RightMiddleIntermediate","RightMiddleProximal","RightRingDistal","RightRingIntermediate","RightRingProximal","RightShoulder","RightThumbDistal","RightThumbIntermediate","RightThumbProximal","RightToes","RightUpperArm","RightUpperLeg","Spine","UpperChest","MetaAllowedUserName","Everyone","ExplicitlyLicensedPerson","OnlyAuthor","MetaUssageName","Allow","Disallow","MetaLicenseName","Cc0","CcBy","CcByNc","CcByNcNd","CcByNcSa","CcByNd","CcBySa","Other","RedistributionProhibited","m","f","g","matrixWorld","decompose","Quaternion","_","_blendShapeGroups","_blendShapePresetMap","_unknownGroupNames","expressions","blendShapePresetMap","unknownGroupNames","getBlendShapeGroup","registerBlendShapeGroup","getValue","setValue","Math","max","min","getBlendShapeTrackName","update","v","import","extensions","VRM","blendShapeMaster","blendShapeGroups","all","map","presetName","scene","binds","index","getDependency","every","materialValues","materialName","filter","indexOf","y","freeze","T","x","Auto","Both","ThirdPersonOnly","FirstPersonOnly","S","firstPersonFlag","_parseFirstPersonFlag","M","_meshAnnotations","_firstPersonOnlyLayer","_DEFAULT_FIRSTPERSON_ONLY_LAYER","_thirdPersonOnlyLayer","_DEFAULT_THIRDPERSON_ONLY_LAYER","_initialized","_firstPersonBone","_firstPersonBoneOffset","firstPersonBone","meshAnnotations","getFirstPersonWorldDirection","applyQuaternion","firstPersonOnlyLayer","thirdPersonOnlyLayer","getFirstPersonBoneOffset","getFirstPersonWorldPosition","z","applyMatrix4","setup","arguments","undefined","layers","_createHeadlessModel","_excludeTriangles","includes","_createErasedMesh","SkinnedMesh","frustumCulled","getAttribute","array","getIndex","Error","from","setIndex","onBeforeRender","bind","Skeleton","skeleton","bones","boneInverses","Matrix4","_createHeadlessModelForSkinnedMesh","_isEraseTarget","enable","parent","firstPerson","getBoneNode","firstPersonBoneOffset","entries","_ref","find","L","node","humanLimit","w","invert","inverse","R","P","restPose","humanBones","_createHumanBones","humanDescription","getPose","identity","position","negate","rotation","premultiply","quaternion","toArray","setPose","multiply","resetPose","_ref2","getBone","getBones","getBoneNodes","values","reduce","bone","C","humanoid","axisLength","center","useDefaultValues","armStretch","legStretch","upperArmTwist","lowerArmTwist","upperLegTwist","lowerLegTwist","feetSpacing","hasTranslationDoF","curve","curveXRangeDegree","curveYRangeDegree","b","_curveHorizontal","_curveVerticalDown","_curveVerticalUp","_blendShapeProxy","lookAt","N","D","B","V","G","autoUpdate","_euler","Euler","EULER_ORDER","applyer","getLookAtWorldDirection","applyEuler","_calcEuler","target","getWorldPosition","normalize","atan2","sqrt","F","k","_curveHorizontalInner","_curveHorizontalOuter","_leftEye","_rightEye","setFromEuler","H","PI","W","_importApplyer","lookAtHorizontalInner","lookAtHorizontalOuter","lookAtVerticalDown","lookAtVerticalUp","lookAtTypeName","_importCurveMapperBone","_importCurveMapperBlendShape","xRange","yRange","LinearEncoding","sRGBEncoding","RGBEEncoding","RGBM7Encoding","RGBM16Encoding","RGBDEncoding","GammaEncoding","j","Y","X","q","Q","Z","Off","Front","Back","None","Normal","LitShadeRate","UV","FixedColor","MixedLighting","WorldCoordinates","ScreenCoordinates","Opaque","Cutout","Transparent","TransparentWithZWrite","$","ShaderMaterial","isMToonMaterial","cutoff","color","shadeColor","mainTex_ST","shadeTexture","normalMap","normalMapType","TangentSpaceNormalMap","normalScale","receiveShadowRate","receiveShadowTexture","shadingGradeRate","shadingGradeTexture","shadeShift","shadeToony","lightColorAttenuation","indirectLightIntensity","rimTexture","rimColor","rimLightingMix","rimFresnelPower","rimLift","sphereAdd","emissionColor","emissiveMap","outlineWidthTexture","outlineWidth","outlineScaledMaxDistance","outlineColor","outlineLightingMix","uvAnimMaskTexture","uvAnimScrollX","uvAnimScrollY","uvAnimRotation","_debugMode","_blendMode","_outlineWidthMode","_outlineColorMode","_cullMode","_outlineCullMode","_isOutline","_uvAnimOffsetX","_uvAnimOffsetY","_uvAnimPhase","encoding","fog","lights","clipping","parseInt","REVISION","skinning","morphTargets","morphNormals","uniforms","UniformsUtils","merge","UniformsLib","common","normalmap","emissivemap","colorAlpha","uvAnimOffsetX","uvAnimOffsetY","uvAnimTheta","setValues","_updateShaderCode","_applyUniforms","mainTex","bumpMap","bumpScale","emissionMap","blendMode","depthWrite","transparent","debugMode","outlineWidthMode","outlineColorMode","cullMode","_updateCullFace","outlineCullMode","zWrite","isOutline","updateVRMMaterials","setRGB","convertSRGBToLinear","defines","THREE_VRM_THREE_REVISION","OUTLINE","BLENDMODE_OPAQUE","BLENDMODE_CUTOUT","BLENDMODE_TRANSPARENT","MTOON_USE_UV","MTOON_UVS_VERTEX_ONLY","USE_SHADETEXTURE","USE_RECEIVESHADOWTEXTURE","USE_SHADINGGRADETEXTURE","USE_RIMTEXTURE","USE_SPHEREADD","USE_OUTLINEWIDTHTEXTURE","USE_UVANIMMASKTEXTURE","DEBUG_NORMAL","DEBUG_LITSHADERATE","DEBUG_UV","OUTLINE_WIDTH_WORLD","OUTLINE_WIDTH_SCREEN","OUTLINE_COLOR_FIXED","OUTLINE_COLOR_MIXED","vertexShader","fragmentShader","needsUpdate","side","DoubleSide","BackSide","FrontSide","J","K","isVRMUnlitMaterial","_renderType","renderType","RENDERTYPE_OPAQUE","RENDERTYPE_CUTOUT","RENDERTYPE_TRANSPARENT","ee","_encoding","_requestEnvMap","requestEnvMap","convertGLTFMaterials","materialProperties","_ref3","count","attributes","addGroup","shader","createVRMMaterials","surface","outline","isMeshStandardMaterial","envMap","renderOrder","renderQueue","_extractMaterialProperties","_convertGLTFMaterial","userData","JSON","parse","stringify","vrmMaterialProperties","_renameMaterialProperty","convertLinearToSRGB","emissive","isMeshBasicMaterial","textureProperties","floatProperties","vectorProperties","some","te","ignoreTexture","meta","texture","allowedUserName","author","commercialUssageName","contactInformation","licenseName","otherLicenseUrl","otherPermissionUrl","reference","sexualUssageName","title","version","violentUssageName","ne","ie","getInverse","re","_inverseCache","_shouldUpdateInverse","matrix","_originalElements","elements","Proxy","revert","oe","se","ae","le","de","he","ue","ce","pe","_currentTail","_prevTail","_nextTail","_boneAxis","_centerSpacePosition","_center","_parentWorldRotation","_initialLocalMatrix","_initialLocalRotation","_initialLocalChildPosition","matrixAutoUpdate","radius","stiffnessForce","gravityDir","gravityPower","dragForce","colliders","setFromMatrixPosition","children","localToWorld","_centerSpaceBoneLength","_getMatrixCenterToWorld","inverseCacheProxy","_getMatrixWorldToCenter","reset","updateMatrix","multiplyMatrices","_getParentMatrixWorld","_collision","setFromUnitVectors","boundingSphere","distanceToSquared","subVectors","addVectors","me","colliderGroups","springBoneGroupList","setCenter","lateUpdate","fe","ge","MeshBasicMaterial","_e","secondaryAnimation","_importColliderMeshGroups","_importSpringBoneGroupList","_createSpringBone","boneGroups","stiffiness","hitRadius","offset","_createColliderMesh","Mesh","SphereBufferGeometry","computeBoundingSphere","ve","_metaImporter","metaImporter","_blendShapeImporter","blendShapeImporter","_lookAtImporter","lookAtImporter","_humanoidImporter","humanoidImporter","_firstPersonImporter","firstPersonImporter","_materialImporter","materialImporter","_springBoneImporter","springBoneImporter","updateMatrixWorld","ye","materials","blendShapeProxy","springBoneManager","Te","xe","OrthographicCamera","Se","Me","PlaneBufferGeometry","Ee","Scene","Le","extractThumbnailBlob","getContext","canvas","getSize","setSize","render","OffscreenCanvas","convertToBlob","finally","toBlob","removeUnnecessaryJoints","get","copyArray","we","Re","setupHelper","disableFaceDirectionHelper","_faceDirectionHelper","ArrowHelper","setDirection","Pe","Ae","wireframe","depthTest","Ce","disableSpringBoneHelper","getGizmo","De","Oe","be","_gizmo","line","cone","_updateGizmo","setLength","Ie","Ne","Ue","disableBoxHelper","BoxHelper","disableSkeletonHelper","SkeletonHelper","MToonMaterial","MToonMaterialCullMode","MToonMaterialDebugMode","MToonMaterialOutlineColorMode","MToonMaterialOutlineWidthMode","MToonMaterialRenderMode","VRMBlendShapeGroup","VRMBlendShapeImporter","VRMBlendShapeProxy","VRMCurveMapper","VRMDebug","VRMFirstPerson","VRMFirstPersonImporter","VRMHumanBone","VRMHumanoid","VRMHumanoidImporter","VRMImporter","VRMLookAtApplyer","VRMLookAtBlendShapeApplyer","VRMLookAtBoneApplyer","VRMLookAtHead","VRMLookAtImporter","VRMMaterialImporter","VRMMetaImporter","VRMRendererFirstPersonFlags","VRMSchema","VRMSpringBone","VRMSpringBoneDebug","VRMSpringBoneImporter","VRMSpringBoneImporterDebug","VRMSpringBoneManager","VRMUnlitMaterial","VRMUnlitMaterialRenderType","VRMUtils","VRM_GIZMO_RENDER_ORDER"],"sources":["/Users/hzh-mac/Downloads/VRM/vrm-app/node_modules/@pixiv/three-vrm/lib/three-vrm.module.min.js"],"sourcesContent":["/*! (c) 2019-2021 pixiv Inc. - https://github.com/pixiv/three-vrm/blob/release/LICENSE */\nimport*as e from\"three\";\n/*! *****************************************************************************\nCopyright (c) Microsoft Corporation.\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\nPERFORMANCE OF THIS SOFTWARE.\n***************************************************************************** */function t(e,t,n,i){return new(n||(n=Promise))((function(r,o){function s(e){try{l(i.next(e))}catch(e){o(e)}}function a(e){try{l(i.throw(e))}catch(e){o(e)}}function l(e){var t;e.done?r(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(s,a)}l((i=i.apply(e,t||[])).next())}))}function n(e){Object.keys(e).forEach((t=>{const n=e[t];if(null==n?void 0:n.isTexture){n.dispose()}})),e.dispose()}function i(e){const t=e.geometry;t&&t.dispose();const i=e.material;i&&(Array.isArray(i)?i.forEach((e=>n(e))):i&&n(i))}var r;!function(e){e[e.NUMBER=0]=\"NUMBER\",e[e.VECTOR2=1]=\"VECTOR2\",e[e.VECTOR3=2]=\"VECTOR3\",e[e.VECTOR4=3]=\"VECTOR4\",e[e.COLOR=4]=\"COLOR\"}(r||(r={}));const o=new e.Vector2,s=new e.Vector3,a=new e.Vector4,l=new e.Color;class d extends e.Object3D{constructor(e){super(),this.weight=0,this.isBinary=!1,this._binds=[],this._materialValues=[],this.name=`BlendShapeController_${e}`,this.type=\"BlendShapeController\",this.visible=!1}addBind(e){const t=e.weight/100;this._binds.push({meshes:e.meshes,morphTargetIndex:e.morphTargetIndex,weight:t})}addMaterialValue(t){const n=t.material,i=t.propertyName;let o,s,a,l,d=n[i];d&&(d=t.defaultValue||d,d.isVector2?(o=r.VECTOR2,s=d.clone(),a=(new e.Vector2).fromArray(t.targetValue),l=a.clone().sub(s)):d.isVector3?(o=r.VECTOR3,s=d.clone(),a=(new e.Vector3).fromArray(t.targetValue),l=a.clone().sub(s)):d.isVector4?(o=r.VECTOR4,s=d.clone(),a=(new e.Vector4).fromArray([t.targetValue[2],t.targetValue[3],t.targetValue[0],t.targetValue[1]]),l=a.clone().sub(s)):d.isColor?(o=r.COLOR,s=d.clone(),a=(new e.Color).fromArray(t.targetValue),l=a.clone().sub(s)):(o=r.NUMBER,s=d,a=t.targetValue[0],l=a-s),this._materialValues.push({material:n,propertyName:i,defaultValue:s,targetValue:a,deltaValue:l,type:o}))}applyWeight(){const e=this.isBinary?this.weight<.5?0:1:this.weight;this._binds.forEach((t=>{t.meshes.forEach((n=>{n.morphTargetInfluences&&(n.morphTargetInfluences[t.morphTargetIndex]+=e*t.weight)}))})),this._materialValues.forEach((t=>{if(void 0!==t.material[t.propertyName]){if(t.type===r.NUMBER){const n=t.deltaValue;t.material[t.propertyName]+=n*e}else if(t.type===r.VECTOR2){const n=t.deltaValue;t.material[t.propertyName].add(o.copy(n).multiplyScalar(e))}else if(t.type===r.VECTOR3){const n=t.deltaValue;t.material[t.propertyName].add(s.copy(n).multiplyScalar(e))}else if(t.type===r.VECTOR4){const n=t.deltaValue;t.material[t.propertyName].add(a.copy(n).multiplyScalar(e))}else if(t.type===r.COLOR){const n=t.deltaValue;t.material[t.propertyName].add(l.copy(n).multiplyScalar(e))}\"boolean\"==typeof t.material.shouldApplyUniforms&&(t.material.shouldApplyUniforms=!0)}}))}clearAppliedWeight(){this._binds.forEach((e=>{e.meshes.forEach((t=>{t.morphTargetInfluences&&(t.morphTargetInfluences[e.morphTargetIndex]=0)}))})),this._materialValues.forEach((e=>{if(void 0!==e.material[e.propertyName]){if(e.type===r.NUMBER){const t=e.defaultValue;e.material[e.propertyName]=t}else if(e.type===r.VECTOR2){const t=e.defaultValue;e.material[e.propertyName].copy(t)}else if(e.type===r.VECTOR3){const t=e.defaultValue;e.material[e.propertyName].copy(t)}else if(e.type===r.VECTOR4){const t=e.defaultValue;e.material[e.propertyName].copy(t)}else if(e.type===r.COLOR){const t=e.defaultValue;e.material[e.propertyName].copy(t)}\"boolean\"==typeof e.material.shouldApplyUniforms&&(e.material.shouldApplyUniforms=!0)}}))}}var h;function u(e,t,n){const i=e.parser.json.nodes[t].mesh;if(null==i)return null;const r=e.parser.json.meshes[i].primitives.length,o=[];return n.traverse((e=>{o.length<r&&e.isMesh&&o.push(e)})),o}function c(e){return t(this,void 0,void 0,(function*(){const t=yield e.parser.getDependencies(\"node\"),n=new Map;return t.forEach(((t,i)=>{const r=u(e,i,t);null!=r&&n.set(i,r)})),n}))}function p(e){return\"_\"!==e[0]?(console.warn(`renameMaterialProperty: Given property name \"${e}\" might be invalid`),e):(e=e.substring(1),/[A-Z]/.test(e[0])?e[0].toLowerCase()+e.substring(1):(console.warn(`renameMaterialProperty: Given property name \"${e}\" might be invalid`),e))}!function(e){var t,n,i,r,o,s;(t=e.BlendShapePresetName||(e.BlendShapePresetName={})).A=\"a\",t.Angry=\"angry\",t.Blink=\"blink\",t.BlinkL=\"blink_l\",t.BlinkR=\"blink_r\",t.E=\"e\",t.Fun=\"fun\",t.I=\"i\",t.Joy=\"joy\",t.Lookdown=\"lookdown\",t.Lookleft=\"lookleft\",t.Lookright=\"lookright\",t.Lookup=\"lookup\",t.Neutral=\"neutral\",t.O=\"o\",t.Sorrow=\"sorrow\",t.U=\"u\",t.Unknown=\"unknown\",(n=e.FirstPersonLookAtTypeName||(e.FirstPersonLookAtTypeName={})).BlendShape=\"BlendShape\",n.Bone=\"Bone\",(i=e.HumanoidBoneName||(e.HumanoidBoneName={})).Chest=\"chest\",i.Head=\"head\",i.Hips=\"hips\",i.Jaw=\"jaw\",i.LeftEye=\"leftEye\",i.LeftFoot=\"leftFoot\",i.LeftHand=\"leftHand\",i.LeftIndexDistal=\"leftIndexDistal\",i.LeftIndexIntermediate=\"leftIndexIntermediate\",i.LeftIndexProximal=\"leftIndexProximal\",i.LeftLittleDistal=\"leftLittleDistal\",i.LeftLittleIntermediate=\"leftLittleIntermediate\",i.LeftLittleProximal=\"leftLittleProximal\",i.LeftLowerArm=\"leftLowerArm\",i.LeftLowerLeg=\"leftLowerLeg\",i.LeftMiddleDistal=\"leftMiddleDistal\",i.LeftMiddleIntermediate=\"leftMiddleIntermediate\",i.LeftMiddleProximal=\"leftMiddleProximal\",i.LeftRingDistal=\"leftRingDistal\",i.LeftRingIntermediate=\"leftRingIntermediate\",i.LeftRingProximal=\"leftRingProximal\",i.LeftShoulder=\"leftShoulder\",i.LeftThumbDistal=\"leftThumbDistal\",i.LeftThumbIntermediate=\"leftThumbIntermediate\",i.LeftThumbProximal=\"leftThumbProximal\",i.LeftToes=\"leftToes\",i.LeftUpperArm=\"leftUpperArm\",i.LeftUpperLeg=\"leftUpperLeg\",i.Neck=\"neck\",i.RightEye=\"rightEye\",i.RightFoot=\"rightFoot\",i.RightHand=\"rightHand\",i.RightIndexDistal=\"rightIndexDistal\",i.RightIndexIntermediate=\"rightIndexIntermediate\",i.RightIndexProximal=\"rightIndexProximal\",i.RightLittleDistal=\"rightLittleDistal\",i.RightLittleIntermediate=\"rightLittleIntermediate\",i.RightLittleProximal=\"rightLittleProximal\",i.RightLowerArm=\"rightLowerArm\",i.RightLowerLeg=\"rightLowerLeg\",i.RightMiddleDistal=\"rightMiddleDistal\",i.RightMiddleIntermediate=\"rightMiddleIntermediate\",i.RightMiddleProximal=\"rightMiddleProximal\",i.RightRingDistal=\"rightRingDistal\",i.RightRingIntermediate=\"rightRingIntermediate\",i.RightRingProximal=\"rightRingProximal\",i.RightShoulder=\"rightShoulder\",i.RightThumbDistal=\"rightThumbDistal\",i.RightThumbIntermediate=\"rightThumbIntermediate\",i.RightThumbProximal=\"rightThumbProximal\",i.RightToes=\"rightToes\",i.RightUpperArm=\"rightUpperArm\",i.RightUpperLeg=\"rightUpperLeg\",i.Spine=\"spine\",i.UpperChest=\"upperChest\",(r=e.MetaAllowedUserName||(e.MetaAllowedUserName={})).Everyone=\"Everyone\",r.ExplicitlyLicensedPerson=\"ExplicitlyLicensedPerson\",r.OnlyAuthor=\"OnlyAuthor\",(o=e.MetaUssageName||(e.MetaUssageName={})).Allow=\"Allow\",o.Disallow=\"Disallow\",(s=e.MetaLicenseName||(e.MetaLicenseName={})).Cc0=\"CC0\",s.CcBy=\"CC_BY\",s.CcByNc=\"CC_BY_NC\",s.CcByNcNd=\"CC_BY_NC_ND\",s.CcByNcSa=\"CC_BY_NC_SA\",s.CcByNd=\"CC_BY_ND\",s.CcBySa=\"CC_BY_SA\",s.Other=\"Other\",s.RedistributionProhibited=\"Redistribution_Prohibited\"}(h||(h={}));const m=new e.Vector3,f=new e.Vector3;function g(e,t){return e.matrixWorld.decompose(m,t,f),t}new e.Quaternion;class _{constructor(){this._blendShapeGroups={},this._blendShapePresetMap={},this._unknownGroupNames=[]}get expressions(){return Object.keys(this._blendShapeGroups)}get blendShapePresetMap(){return this._blendShapePresetMap}get unknownGroupNames(){return this._unknownGroupNames}getBlendShapeGroup(e){const t=this._blendShapePresetMap[e],n=t?this._blendShapeGroups[t]:this._blendShapeGroups[e];if(n)return n;console.warn(`no blend shape found by ${e}`)}registerBlendShapeGroup(e,t,n){this._blendShapeGroups[e]=n,t?this._blendShapePresetMap[t]=e:this._unknownGroupNames.push(e)}getValue(e){var t;const n=this.getBlendShapeGroup(e);return null!==(t=null==n?void 0:n.weight)&&void 0!==t?t:null}setValue(e,t){const n=this.getBlendShapeGroup(e);var i;n&&(n.weight=(i=t,Math.max(Math.min(i,1),0)))}getBlendShapeTrackName(e){const t=this.getBlendShapeGroup(e);return t?`${t.name}.weight`:null}update(){Object.keys(this._blendShapeGroups).forEach((e=>{this._blendShapeGroups[e].clearAppliedWeight()})),Object.keys(this._blendShapeGroups).forEach((e=>{this._blendShapeGroups[e].applyWeight()}))}}class v{import(e){var n;return t(this,void 0,void 0,(function*(){const i=null===(n=e.parser.json.extensions)||void 0===n?void 0:n.VRM;if(!i)return null;const r=i.blendShapeMaster;if(!r)return null;const o=new _,s=r.blendShapeGroups;if(!s)return o;const a={};return yield Promise.all(s.map((n=>t(this,void 0,void 0,(function*(){const i=n.name;if(void 0===i)return void console.warn(\"VRMBlendShapeImporter: One of blendShapeGroups has no name\");let r;n.presetName&&n.presetName!==h.BlendShapePresetName.Unknown&&!a[n.presetName]&&(r=n.presetName,a[n.presetName]=i);const s=new d(i);e.scene.add(s),s.isBinary=n.isBinary||!1,n.binds&&n.binds.forEach((i=>t(this,void 0,void 0,(function*(){if(void 0===i.mesh||void 0===i.index)return;const r=[];e.parser.json.nodes.forEach(((e,t)=>{e.mesh===i.mesh&&r.push(t)}));const o=i.index;yield Promise.all(r.map((r=>t(this,void 0,void 0,(function*(){var a;const l=yield function(e,n){return t(this,void 0,void 0,(function*(){const t=yield e.parser.getDependency(\"node\",n);return u(e,n,t)}))}(e,r);l.every((e=>Array.isArray(e.morphTargetInfluences)&&o<e.morphTargetInfluences.length))?s.addBind({meshes:l,morphTargetIndex:o,weight:null!==(a=i.weight)&&void 0!==a?a:100}):console.warn(`VRMBlendShapeImporter: ${n.name} attempts to index ${o}th morph but not found.`)})))))}))));const l=n.materialValues;l&&l.forEach((t=>{if(void 0===t.materialName||void 0===t.propertyName||void 0===t.targetValue)return;const n=[];e.scene.traverse((e=>{if(e.material){const i=e.material;Array.isArray(i)?n.push(...i.filter((e=>e.name===t.materialName&&-1===n.indexOf(e)))):i.name===t.materialName&&-1===n.indexOf(i)&&n.push(i)}})),n.forEach((e=>{s.addMaterialValue({material:e,propertyName:p(t.propertyName),targetValue:t.targetValue})}))})),o.registerBlendShapeGroup(i,r,s)}))))),o}))}}const y=Object.freeze(new e.Vector3(0,0,-1)),T=new e.Quaternion;var x;!function(e){e[e.Auto=0]=\"Auto\",e[e.Both=1]=\"Both\",e[e.ThirdPersonOnly=2]=\"ThirdPersonOnly\",e[e.FirstPersonOnly=3]=\"FirstPersonOnly\"}(x||(x={}));class S{constructor(e,t){this.firstPersonFlag=S._parseFirstPersonFlag(e),this.primitives=t}static _parseFirstPersonFlag(e){switch(e){case\"Both\":return x.Both;case\"ThirdPersonOnly\":return x.ThirdPersonOnly;case\"FirstPersonOnly\":return x.FirstPersonOnly;default:return x.Auto}}}class M{constructor(e,t,n){this._meshAnnotations=[],this._firstPersonOnlyLayer=M._DEFAULT_FIRSTPERSON_ONLY_LAYER,this._thirdPersonOnlyLayer=M._DEFAULT_THIRDPERSON_ONLY_LAYER,this._initialized=!1,this._firstPersonBone=e,this._firstPersonBoneOffset=t,this._meshAnnotations=n}get firstPersonBone(){return this._firstPersonBone}get meshAnnotations(){return this._meshAnnotations}getFirstPersonWorldDirection(e){return e.copy(y).applyQuaternion(g(this._firstPersonBone,T))}get firstPersonOnlyLayer(){return this._firstPersonOnlyLayer}get thirdPersonOnlyLayer(){return this._thirdPersonOnlyLayer}getFirstPersonBoneOffset(e){return e.copy(this._firstPersonBoneOffset)}getFirstPersonWorldPosition(t){const n=this._firstPersonBoneOffset,i=new e.Vector4(n.x,n.y,n.z,1);return i.applyMatrix4(this._firstPersonBone.matrixWorld),t.set(i.x,i.y,i.z)}setup({firstPersonOnlyLayer:e=M._DEFAULT_FIRSTPERSON_ONLY_LAYER,thirdPersonOnlyLayer:t=M._DEFAULT_THIRDPERSON_ONLY_LAYER}={}){this._initialized||(this._initialized=!0,this._firstPersonOnlyLayer=e,this._thirdPersonOnlyLayer=t,this._meshAnnotations.forEach((e=>{e.firstPersonFlag===x.FirstPersonOnly?e.primitives.forEach((e=>{e.layers.set(this._firstPersonOnlyLayer)})):e.firstPersonFlag===x.ThirdPersonOnly?e.primitives.forEach((e=>{e.layers.set(this._thirdPersonOnlyLayer)})):e.firstPersonFlag===x.Auto&&this._createHeadlessModel(e.primitives)})))}_excludeTriangles(e,t,n,i){let r=0;if(null!=t&&t.length>0)for(let o=0;o<e.length;o+=3){const s=e[o],a=e[o+1],l=e[o+2],d=t[s],h=n[s];if(d[0]>0&&i.includes(h[0]))continue;if(d[1]>0&&i.includes(h[1]))continue;if(d[2]>0&&i.includes(h[2]))continue;if(d[3]>0&&i.includes(h[3]))continue;const u=t[a],c=n[a];if(u[0]>0&&i.includes(c[0]))continue;if(u[1]>0&&i.includes(c[1]))continue;if(u[2]>0&&i.includes(c[2]))continue;if(u[3]>0&&i.includes(c[3]))continue;const p=t[l],m=n[l];p[0]>0&&i.includes(m[0])||(p[1]>0&&i.includes(m[1])||p[2]>0&&i.includes(m[2])||p[3]>0&&i.includes(m[3])||(e[r++]=s,e[r++]=a,e[r++]=l))}return r}_createErasedMesh(t,n){const i=new e.SkinnedMesh(t.geometry.clone(),t.material);i.name=`${t.name}(erase)`,i.frustumCulled=t.frustumCulled,i.layers.set(this._firstPersonOnlyLayer);const r=i.geometry,o=r.getAttribute(\"skinIndex\").array,s=[];for(let e=0;e<o.length;e+=4)s.push([o[e],o[e+1],o[e+2],o[e+3]]);const a=r.getAttribute(\"skinWeight\").array,l=[];for(let e=0;e<a.length;e+=4)l.push([a[e],a[e+1],a[e+2],a[e+3]]);const d=r.getIndex();if(!d)throw new Error(\"The geometry doesn't have an index buffer\");const h=Array.from(d.array),u=this._excludeTriangles(h,l,s,n),c=[];for(let e=0;e<u;e++)c[e]=h[e];return r.setIndex(c),t.onBeforeRender&&(i.onBeforeRender=t.onBeforeRender),i.bind(new e.Skeleton(t.skeleton.bones,t.skeleton.boneInverses),new e.Matrix4),i}_createHeadlessModelForSkinnedMesh(e,t){const n=[];if(t.skeleton.bones.forEach(((e,t)=>{this._isEraseTarget(e)&&n.push(t)})),!n.length)return t.layers.enable(this._thirdPersonOnlyLayer),void t.layers.enable(this._firstPersonOnlyLayer);t.layers.set(this._thirdPersonOnlyLayer);const i=this._createErasedMesh(t,n);e.add(i)}_createHeadlessModel(e){e.forEach((e=>{if(\"SkinnedMesh\"===e.type){const t=e;this._createHeadlessModelForSkinnedMesh(t.parent,t)}else this._isEraseTarget(e)&&e.layers.set(this._thirdPersonOnlyLayer)}))}_isEraseTarget(e){return e===this._firstPersonBone||!!e.parent&&this._isEraseTarget(e.parent)}}M._DEFAULT_FIRSTPERSON_ONLY_LAYER=9,M._DEFAULT_THIRDPERSON_ONLY_LAYER=10;class E{import(n,i){var r;return t(this,void 0,void 0,(function*(){const t=null===(r=n.parser.json.extensions)||void 0===r?void 0:r.VRM;if(!t)return null;const o=t.firstPerson;if(!o)return null;const s=o.firstPersonBone;let a;if(a=void 0===s||-1===s?i.getBoneNode(h.HumanoidBoneName.Head):yield n.parser.getDependency(\"node\",s),!a)return console.warn(\"VRMFirstPersonImporter: Could not find firstPersonBone of the VRM\"),null;const l=o.firstPersonBoneOffset?new e.Vector3(o.firstPersonBoneOffset.x,o.firstPersonBoneOffset.y,-o.firstPersonBoneOffset.z):new e.Vector3(0,.06,0),d=[],u=yield c(n);return Array.from(u.entries()).forEach((([e,t])=>{const i=n.parser.json.nodes[e],r=o.meshAnnotations?o.meshAnnotations.find((e=>e.mesh===i.mesh)):void 0;d.push(new S(null==r?void 0:r.firstPersonFlag,t))})),new M(a,l,d)}))}}class L{constructor(e,t){this.node=e,this.humanLimit=t}}function w(e){return e.invert?e.invert():e.inverse(),e}const R=new e.Vector3,P=new e.Quaternion;class A{constructor(e,t){this.restPose={},this.humanBones=this._createHumanBones(e),this.humanDescription=t,this.restPose=this.getPose()}getPose(){const e={};return Object.keys(this.humanBones).forEach((t=>{const n=this.getBoneNode(t);if(!n)return;if(e[t])return;R.set(0,0,0),P.identity();const i=this.restPose[t];(null==i?void 0:i.position)&&R.fromArray(i.position).negate(),(null==i?void 0:i.rotation)&&w(P.fromArray(i.rotation)),R.add(n.position),P.premultiply(n.quaternion),e[t]={position:R.toArray(),rotation:P.toArray()}}),{}),e}setPose(e){Object.keys(e).forEach((t=>{const n=e[t],i=this.getBoneNode(t);if(!i)return;const r=this.restPose[t];r&&(n.position&&(i.position.fromArray(n.position),r.position&&i.position.add(R.fromArray(r.position))),n.rotation&&(i.quaternion.fromArray(n.rotation),r.rotation&&i.quaternion.multiply(P.fromArray(r.rotation))))}))}resetPose(){Object.entries(this.restPose).forEach((([e,t])=>{const n=this.getBoneNode(e);n&&((null==t?void 0:t.position)&&n.position.fromArray(t.position),(null==t?void 0:t.rotation)&&n.quaternion.fromArray(t.rotation))}))}getBone(e){var t;return null!==(t=this.humanBones[e][0])&&void 0!==t?t:void 0}getBones(e){var t;return null!==(t=this.humanBones[e])&&void 0!==t?t:[]}getBoneNode(e){var t,n;return null!==(n=null===(t=this.humanBones[e][0])||void 0===t?void 0:t.node)&&void 0!==n?n:null}getBoneNodes(e){var t,n;return null!==(n=null===(t=this.humanBones[e])||void 0===t?void 0:t.map((e=>e.node)))&&void 0!==n?n:[]}_createHumanBones(e){const t=Object.values(h.HumanoidBoneName).reduce(((e,t)=>(e[t]=[],e)),{});return e.forEach((e=>{t[e.name].push(e.bone)})),t}}class C{import(n){var i;return t(this,void 0,void 0,(function*(){const r=null===(i=n.parser.json.extensions)||void 0===i?void 0:i.VRM;if(!r)return null;const o=r.humanoid;if(!o)return null;const s=[];o.humanBones&&(yield Promise.all(o.humanBones.map((i=>t(this,void 0,void 0,(function*(){if(!i.bone||null==i.node)return;const t=yield n.parser.getDependency(\"node\",i.node);s.push({name:i.bone,bone:new L(t,{axisLength:i.axisLength,center:i.center&&new e.Vector3(i.center.x,i.center.y,i.center.z),max:i.max&&new e.Vector3(i.max.x,i.max.y,i.max.z),min:i.min&&new e.Vector3(i.min.x,i.min.y,i.min.z),useDefaultValues:i.useDefaultValues})})}))))));const a={armStretch:o.armStretch,legStretch:o.legStretch,upperArmTwist:o.upperArmTwist,lowerArmTwist:o.lowerArmTwist,upperLegTwist:o.upperLegTwist,lowerLegTwist:o.lowerLegTwist,feetSpacing:o.feetSpacing,hasTranslationDoF:o.hasTranslationDoF};return new A(s,a)}))}}class O{constructor(e,t,n){this.curve=[0,0,0,1,1,1,1,0],this.curveXRangeDegree=90,this.curveYRangeDegree=10,void 0!==e&&(this.curveXRangeDegree=e),void 0!==t&&(this.curveYRangeDegree=t),void 0!==n&&(this.curve=n)}map(e){const t=Math.min(Math.max(e,0),this.curveXRangeDegree)/this.curveXRangeDegree;return this.curveYRangeDegree*((e,t)=>{if(e.length<8)throw new Error(\"evaluateCurve: Invalid curve detected! (Array length must be 8 at least)\");if(e.length%4!=0)throw new Error(\"evaluateCurve: Invalid curve detected! (Array length must be multiples of 4\");let n;for(n=0;;n++){if(e.length<=4*n)return e[4*n-3];if(t<=e[4*n])break}const i=n-1;if(i<0)return e[4*i+5];const r=e[4*i],o=(t-r)/(e[4*n]-r);return((e,t,n,i,r)=>{const o=r*r*r,s=r*r;return e+(t-e)*(-2*o+3*s)+n*(o-2*s+r)+i*(o-s)})(e[4*i+1],e[4*n+1],e[4*i+3],e[4*n+2],o)})(this.curve,t)}}class b{}class I extends b{constructor(e,t,n,i){super(),this.type=h.FirstPersonLookAtTypeName.BlendShape,this._curveHorizontal=t,this._curveVerticalDown=n,this._curveVerticalUp=i,this._blendShapeProxy=e}name(){return h.FirstPersonLookAtTypeName.BlendShape}lookAt(e){const t=e.x,n=e.y;t<0?(this._blendShapeProxy.setValue(h.BlendShapePresetName.Lookup,0),this._blendShapeProxy.setValue(h.BlendShapePresetName.Lookdown,this._curveVerticalDown.map(-t))):(this._blendShapeProxy.setValue(h.BlendShapePresetName.Lookdown,0),this._blendShapeProxy.setValue(h.BlendShapePresetName.Lookup,this._curveVerticalUp.map(t))),n<0?(this._blendShapeProxy.setValue(h.BlendShapePresetName.Lookleft,0),this._blendShapeProxy.setValue(h.BlendShapePresetName.Lookright,this._curveHorizontal.map(-n))):(this._blendShapeProxy.setValue(h.BlendShapePresetName.Lookright,0),this._blendShapeProxy.setValue(h.BlendShapePresetName.Lookleft,this._curveHorizontal.map(n)))}}const N=Object.freeze(new e.Vector3(0,0,-1)),D=new e.Vector3,U=new e.Vector3,B=new e.Vector3,V=new e.Quaternion;class G{constructor(t,n){this.autoUpdate=!0,this._euler=new e.Euler(0,0,0,G.EULER_ORDER),this.firstPerson=t,this.applyer=n}getLookAtWorldDirection(e){const t=g(this.firstPerson.firstPersonBone,V);return e.copy(N).applyEuler(this._euler).applyQuaternion(t)}lookAt(e){this._calcEuler(this._euler,e),this.applyer&&this.applyer.lookAt(this._euler)}update(e){this.target&&this.autoUpdate&&(this.lookAt(this.target.getWorldPosition(D)),this.applyer&&this.applyer.lookAt(this._euler))}_calcEuler(e,t){const n=this.firstPerson.getFirstPersonWorldPosition(U),i=B.copy(t).sub(n).normalize();return i.applyQuaternion(w(g(this.firstPerson.firstPersonBone,V))),e.x=Math.atan2(i.y,Math.sqrt(i.x*i.x+i.z*i.z)),e.y=Math.atan2(-i.x,-i.z),e}}G.EULER_ORDER=\"YXZ\";const F=new e.Euler(0,0,0,G.EULER_ORDER);class k extends b{constructor(e,t,n,i,r){super(),this.type=h.FirstPersonLookAtTypeName.Bone,this._curveHorizontalInner=t,this._curveHorizontalOuter=n,this._curveVerticalDown=i,this._curveVerticalUp=r,this._leftEye=e.getBoneNode(h.HumanoidBoneName.LeftEye),this._rightEye=e.getBoneNode(h.HumanoidBoneName.RightEye)}lookAt(e){const t=e.x,n=e.y;this._leftEye&&(F.x=t<0?-this._curveVerticalDown.map(-t):this._curveVerticalUp.map(t),F.y=n<0?-this._curveHorizontalInner.map(-n):this._curveHorizontalOuter.map(n),this._leftEye.quaternion.setFromEuler(F)),this._rightEye&&(F.x=t<0?-this._curveVerticalDown.map(-t):this._curveVerticalUp.map(t),F.y=n<0?-this._curveHorizontalOuter.map(-n):this._curveHorizontalInner.map(n),this._rightEye.quaternion.setFromEuler(F))}}const H=Math.PI/180;class W{import(e,t,n,i){var r;const o=null===(r=e.parser.json.extensions)||void 0===r?void 0:r.VRM;if(!o)return null;const s=o.firstPerson;if(!s)return null;const a=this._importApplyer(s,n,i);return new G(t,a||void 0)}_importApplyer(e,t,n){const i=e.lookAtHorizontalInner,r=e.lookAtHorizontalOuter,o=e.lookAtVerticalDown,s=e.lookAtVerticalUp;switch(e.lookAtTypeName){case h.FirstPersonLookAtTypeName.Bone:return void 0===i||void 0===r||void 0===o||void 0===s?null:new k(n,this._importCurveMapperBone(i),this._importCurveMapperBone(r),this._importCurveMapperBone(o),this._importCurveMapperBone(s));case h.FirstPersonLookAtTypeName.BlendShape:return void 0===r||void 0===o||void 0===s?null:new I(t,this._importCurveMapperBlendShape(r),this._importCurveMapperBlendShape(o),this._importCurveMapperBlendShape(s));default:return null}}_importCurveMapperBone(e){return new O(\"number\"==typeof e.xRange?H*e.xRange:void 0,\"number\"==typeof e.yRange?H*e.yRange:void 0,e.curve)}_importCurveMapperBlendShape(e){return new O(\"number\"==typeof e.xRange?H*e.xRange:void 0,e.yRange,e.curve)}}const z=(t,n)=>{const i=(t=>{switch(t){case e.LinearEncoding:return[\"Linear\",\"( value )\"];case e.sRGBEncoding:return[\"sRGB\",\"( value )\"];case e.RGBEEncoding:return[\"RGBE\",\"( value )\"];case e.RGBM7Encoding:return[\"RGBM\",\"( value, 7.0 )\"];case e.RGBM16Encoding:return[\"RGBM\",\"( value, 16.0 )\"];case e.RGBDEncoding:return[\"RGBD\",\"( value, 256.0 )\"];case e.GammaEncoding:return[\"Gamma\",\"( value, float( GAMMA_FACTOR ) )\"];default:throw new Error(\"unsupported encoding: \"+t)}})(n);return\"vec4 \"+t+\"( vec4 value ) { return \"+i[0]+\"ToLinear\"+i[1]+\"; }\"};const j=2*Math.PI;var Y,X,q,Q,Z;!function(e){e[e.Off=0]=\"Off\",e[e.Front=1]=\"Front\",e[e.Back=2]=\"Back\"}(Y||(Y={})),function(e){e[e.None=0]=\"None\",e[e.Normal=1]=\"Normal\",e[e.LitShadeRate=2]=\"LitShadeRate\",e[e.UV=3]=\"UV\"}(X||(X={})),function(e){e[e.FixedColor=0]=\"FixedColor\",e[e.MixedLighting=1]=\"MixedLighting\"}(q||(q={})),function(e){e[e.None=0]=\"None\",e[e.WorldCoordinates=1]=\"WorldCoordinates\",e[e.ScreenCoordinates=2]=\"ScreenCoordinates\"}(Q||(Q={})),function(e){e[e.Opaque=0]=\"Opaque\",e[e.Cutout=1]=\"Cutout\",e[e.Transparent=2]=\"Transparent\",e[e.TransparentWithZWrite=3]=\"TransparentWithZWrite\"}(Z||(Z={}));class $ extends e.ShaderMaterial{constructor(t={}){super(),this.isMToonMaterial=!0,this.cutoff=.5,this.color=new e.Vector4(1,1,1,1),this.shadeColor=new e.Vector4(.97,.81,.86,1),this.map=null,this.mainTex_ST=new e.Vector4(0,0,1,1),this.shadeTexture=null,this.normalMap=null,this.normalMapType=e.TangentSpaceNormalMap,this.normalScale=new e.Vector2(1,1),this.receiveShadowRate=1,this.receiveShadowTexture=null,this.shadingGradeRate=1,this.shadingGradeTexture=null,this.shadeShift=0,this.shadeToony=.9,this.lightColorAttenuation=0,this.indirectLightIntensity=.1,this.rimTexture=null,this.rimColor=new e.Vector4(0,0,0,1),this.rimLightingMix=0,this.rimFresnelPower=1,this.rimLift=0,this.sphereAdd=null,this.emissionColor=new e.Vector4(0,0,0,1),this.emissiveMap=null,this.outlineWidthTexture=null,this.outlineWidth=.5,this.outlineScaledMaxDistance=1,this.outlineColor=new e.Vector4(0,0,0,1),this.outlineLightingMix=1,this.uvAnimMaskTexture=null,this.uvAnimScrollX=0,this.uvAnimScrollY=0,this.uvAnimRotation=0,this.shouldApplyUniforms=!0,this._debugMode=X.None,this._blendMode=Z.Opaque,this._outlineWidthMode=Q.None,this._outlineColorMode=q.FixedColor,this._cullMode=Y.Back,this._outlineCullMode=Y.Front,this._isOutline=!1,this._uvAnimOffsetX=0,this._uvAnimOffsetY=0,this._uvAnimPhase=0,this.encoding=t.encoding||e.LinearEncoding,this.encoding!==e.LinearEncoding&&this.encoding!==e.sRGBEncoding&&console.warn(\"The specified color encoding does not work properly with MToonMaterial. You might want to use THREE.sRGBEncoding instead.\"),[\"mToonVersion\",\"shadeTexture_ST\",\"bumpMap_ST\",\"receiveShadowTexture_ST\",\"shadingGradeTexture_ST\",\"rimTexture_ST\",\"sphereAdd_ST\",\"emissionMap_ST\",\"outlineWidthTexture_ST\",\"uvAnimMaskTexture_ST\",\"srcBlend\",\"dstBlend\"].forEach((e=>{void 0!==t[e]&&delete t[e]})),t.fog=!0,t.lights=!0,t.clipping=!0,parseInt(e.REVISION,10)<129&&(t.skinning=t.skinning||!1),parseInt(e.REVISION,10)<131&&(t.morphTargets=t.morphTargets||!1,t.morphNormals=t.morphNormals||!1),t.uniforms=e.UniformsUtils.merge([e.UniformsLib.common,e.UniformsLib.normalmap,e.UniformsLib.emissivemap,e.UniformsLib.fog,e.UniformsLib.lights,{cutoff:{value:.5},color:{value:new e.Color(1,1,1)},colorAlpha:{value:1},shadeColor:{value:new e.Color(.97,.81,.86)},mainTex_ST:{value:new e.Vector4(0,0,1,1)},shadeTexture:{value:null},receiveShadowRate:{value:1},receiveShadowTexture:{value:null},shadingGradeRate:{value:1},shadingGradeTexture:{value:null},shadeShift:{value:0},shadeToony:{value:.9},lightColorAttenuation:{value:0},indirectLightIntensity:{value:.1},rimTexture:{value:null},rimColor:{value:new e.Color(0,0,0)},rimLightingMix:{value:0},rimFresnelPower:{value:1},rimLift:{value:0},sphereAdd:{value:null},emissionColor:{value:new e.Color(0,0,0)},outlineWidthTexture:{value:null},outlineWidth:{value:.5},outlineScaledMaxDistance:{value:1},outlineColor:{value:new e.Color(0,0,0)},outlineLightingMix:{value:1},uvAnimMaskTexture:{value:null},uvAnimOffsetX:{value:0},uvAnimOffsetY:{value:0},uvAnimTheta:{value:0}}]),this.setValues(t),this._updateShaderCode(),this._applyUniforms()}get mainTex(){return this.map}set mainTex(e){this.map=e}get bumpMap(){return this.normalMap}set bumpMap(e){this.normalMap=e}get bumpScale(){return this.normalScale.x}set bumpScale(e){this.normalScale.set(e,e)}get emissionMap(){return this.emissiveMap}set emissionMap(e){this.emissiveMap=e}get blendMode(){return this._blendMode}set blendMode(e){this._blendMode=e,this.depthWrite=this._blendMode!==Z.Transparent,this.transparent=this._blendMode===Z.Transparent||this._blendMode===Z.TransparentWithZWrite,this._updateShaderCode()}get debugMode(){return this._debugMode}set debugMode(e){this._debugMode=e,this._updateShaderCode()}get outlineWidthMode(){return this._outlineWidthMode}set outlineWidthMode(e){this._outlineWidthMode=e,this._updateShaderCode()}get outlineColorMode(){return this._outlineColorMode}set outlineColorMode(e){this._outlineColorMode=e,this._updateShaderCode()}get cullMode(){return this._cullMode}set cullMode(e){this._cullMode=e,this._updateCullFace()}get outlineCullMode(){return this._outlineCullMode}set outlineCullMode(e){this._outlineCullMode=e,this._updateCullFace()}get zWrite(){return this.depthWrite?1:0}set zWrite(e){this.depthWrite=.5<=e}get isOutline(){return this._isOutline}set isOutline(e){this._isOutline=e,this._updateShaderCode(),this._updateCullFace()}updateVRMMaterials(e){this._uvAnimOffsetX=this._uvAnimOffsetX+e*this.uvAnimScrollX,this._uvAnimOffsetY=this._uvAnimOffsetY-e*this.uvAnimScrollY,this._uvAnimPhase=this._uvAnimPhase+e*this.uvAnimRotation,this._applyUniforms()}copy(e){return super.copy(e),this.cutoff=e.cutoff,this.color.copy(e.color),this.shadeColor.copy(e.shadeColor),this.map=e.map,this.mainTex_ST.copy(e.mainTex_ST),this.shadeTexture=e.shadeTexture,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(this.normalScale),this.receiveShadowRate=e.receiveShadowRate,this.receiveShadowTexture=e.receiveShadowTexture,this.shadingGradeRate=e.shadingGradeRate,this.shadingGradeTexture=e.shadingGradeTexture,this.shadeShift=e.shadeShift,this.shadeToony=e.shadeToony,this.lightColorAttenuation=e.lightColorAttenuation,this.indirectLightIntensity=e.indirectLightIntensity,this.rimTexture=e.rimTexture,this.rimColor.copy(e.rimColor),this.rimLightingMix=e.rimLightingMix,this.rimFresnelPower=e.rimFresnelPower,this.rimLift=e.rimLift,this.sphereAdd=e.sphereAdd,this.emissionColor.copy(e.emissionColor),this.emissiveMap=e.emissiveMap,this.outlineWidthTexture=e.outlineWidthTexture,this.outlineWidth=e.outlineWidth,this.outlineScaledMaxDistance=e.outlineScaledMaxDistance,this.outlineColor.copy(e.outlineColor),this.outlineLightingMix=e.outlineLightingMix,this.uvAnimMaskTexture=e.uvAnimMaskTexture,this.uvAnimScrollX=e.uvAnimScrollX,this.uvAnimScrollY=e.uvAnimScrollY,this.uvAnimRotation=e.uvAnimRotation,this.debugMode=e.debugMode,this.blendMode=e.blendMode,this.outlineWidthMode=e.outlineWidthMode,this.outlineColorMode=e.outlineColorMode,this.cullMode=e.cullMode,this.outlineCullMode=e.outlineCullMode,this.isOutline=e.isOutline,this}_applyUniforms(){this.uniforms.uvAnimOffsetX.value=this._uvAnimOffsetX,this.uniforms.uvAnimOffsetY.value=this._uvAnimOffsetY,this.uniforms.uvAnimTheta.value=j*this._uvAnimPhase,this.shouldApplyUniforms&&(this.shouldApplyUniforms=!1,this.uniforms.cutoff.value=this.cutoff,this.uniforms.color.value.setRGB(this.color.x,this.color.y,this.color.z),this.uniforms.colorAlpha.value=this.color.w,this.uniforms.shadeColor.value.setRGB(this.shadeColor.x,this.shadeColor.y,this.shadeColor.z),this.uniforms.map.value=this.map,this.uniforms.mainTex_ST.value.copy(this.mainTex_ST),this.uniforms.shadeTexture.value=this.shadeTexture,this.uniforms.normalMap.value=this.normalMap,this.uniforms.normalScale.value.copy(this.normalScale),this.uniforms.receiveShadowRate.value=this.receiveShadowRate,this.uniforms.receiveShadowTexture.value=this.receiveShadowTexture,this.uniforms.shadingGradeRate.value=this.shadingGradeRate,this.uniforms.shadingGradeTexture.value=this.shadingGradeTexture,this.uniforms.shadeShift.value=this.shadeShift,this.uniforms.shadeToony.value=this.shadeToony,this.uniforms.lightColorAttenuation.value=this.lightColorAttenuation,this.uniforms.indirectLightIntensity.value=this.indirectLightIntensity,this.uniforms.rimTexture.value=this.rimTexture,this.uniforms.rimColor.value.setRGB(this.rimColor.x,this.rimColor.y,this.rimColor.z),this.uniforms.rimLightingMix.value=this.rimLightingMix,this.uniforms.rimFresnelPower.value=this.rimFresnelPower,this.uniforms.rimLift.value=this.rimLift,this.uniforms.sphereAdd.value=this.sphereAdd,this.uniforms.emissionColor.value.setRGB(this.emissionColor.x,this.emissionColor.y,this.emissionColor.z),this.uniforms.emissiveMap.value=this.emissiveMap,this.uniforms.outlineWidthTexture.value=this.outlineWidthTexture,this.uniforms.outlineWidth.value=this.outlineWidth,this.uniforms.outlineScaledMaxDistance.value=this.outlineScaledMaxDistance,this.uniforms.outlineColor.value.setRGB(this.outlineColor.x,this.outlineColor.y,this.outlineColor.z),this.uniforms.outlineLightingMix.value=this.outlineLightingMix,this.uniforms.uvAnimMaskTexture.value=this.uvAnimMaskTexture,this.encoding===e.sRGBEncoding&&(this.uniforms.color.value.convertSRGBToLinear(),this.uniforms.shadeColor.value.convertSRGBToLinear(),this.uniforms.rimColor.value.convertSRGBToLinear(),this.uniforms.emissionColor.value.convertSRGBToLinear(),this.uniforms.outlineColor.value.convertSRGBToLinear()),this._updateCullFace())}_updateShaderCode(){const t=null!==this.outlineWidthTexture,n=null!==this.map||null!==this.shadeTexture||null!==this.receiveShadowTexture||null!==this.shadingGradeTexture||null!==this.rimTexture||null!==this.uvAnimMaskTexture;this.defines={THREE_VRM_THREE_REVISION:parseInt(e.REVISION,10),OUTLINE:this._isOutline,BLENDMODE_OPAQUE:this._blendMode===Z.Opaque,BLENDMODE_CUTOUT:this._blendMode===Z.Cutout,BLENDMODE_TRANSPARENT:this._blendMode===Z.Transparent||this._blendMode===Z.TransparentWithZWrite,MTOON_USE_UV:t||n,MTOON_UVS_VERTEX_ONLY:t&&!n,USE_SHADETEXTURE:null!==this.shadeTexture,USE_RECEIVESHADOWTEXTURE:null!==this.receiveShadowTexture,USE_SHADINGGRADETEXTURE:null!==this.shadingGradeTexture,USE_RIMTEXTURE:null!==this.rimTexture,USE_SPHEREADD:null!==this.sphereAdd,USE_OUTLINEWIDTHTEXTURE:null!==this.outlineWidthTexture,USE_UVANIMMASKTEXTURE:null!==this.uvAnimMaskTexture,DEBUG_NORMAL:this._debugMode===X.Normal,DEBUG_LITSHADERATE:this._debugMode===X.LitShadeRate,DEBUG_UV:this._debugMode===X.UV,OUTLINE_WIDTH_WORLD:this._outlineWidthMode===Q.WorldCoordinates,OUTLINE_WIDTH_SCREEN:this._outlineWidthMode===Q.ScreenCoordinates,OUTLINE_COLOR_FIXED:this._outlineColorMode===q.FixedColor,OUTLINE_COLOR_MIXED:this._outlineColorMode===q.MixedLighting};const i=(null!==this.shadeTexture?z(\"shadeTextureTexelToLinear\",this.shadeTexture.encoding)+\"\\n\":\"\")+(null!==this.sphereAdd?z(\"sphereAddTexelToLinear\",this.sphereAdd.encoding)+\"\\n\":\"\")+(null!==this.rimTexture?z(\"rimTextureTexelToLinear\",this.rimTexture.encoding)+\"\\n\":\"\");this.vertexShader=\"// #define PHONG\\n\\nvarying vec3 vViewPosition;\\n\\n#ifndef FLAT_SHADED\\n  varying vec3 vNormal;\\n#endif\\n\\n#include <common>\\n\\n// #include <uv_pars_vertex>\\n#ifdef MTOON_USE_UV\\n  #ifdef MTOON_UVS_VERTEX_ONLY\\n    vec2 vUv;\\n  #else\\n    varying vec2 vUv;\\n  #endif\\n\\n  uniform vec4 mainTex_ST;\\n#endif\\n\\n#include <uv2_pars_vertex>\\n// #include <displacementmap_pars_vertex>\\n// #include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\n\\n#ifdef USE_OUTLINEWIDTHTEXTURE\\n  uniform sampler2D outlineWidthTexture;\\n#endif\\n\\nuniform float outlineWidth;\\nuniform float outlineScaledMaxDistance;\\n\\nvoid main() {\\n\\n  // #include <uv_vertex>\\n  #ifdef MTOON_USE_UV\\n    vUv = uv;\\n    vUv.y = 1.0 - vUv.y; // uv.y is opposite from UniVRM's\\n    vUv = mainTex_ST.st + mainTex_ST.pq * vUv;\\n    vUv.y = 1.0 - vUv.y; // reverting the previous flip\\n  #endif\\n\\n  #include <uv2_vertex>\\n  #include <color_vertex>\\n\\n  #include <beginnormal_vertex>\\n  #include <morphnormal_vertex>\\n  #include <skinbase_vertex>\\n  #include <skinnormal_vertex>\\n\\n  // we need this to compute the outline properly\\n  objectNormal = normalize( objectNormal );\\n\\n  #include <defaultnormal_vertex>\\n\\n  #ifndef FLAT_SHADED // Normal computed with derivatives when FLAT_SHADED\\n    vNormal = normalize( transformedNormal );\\n  #endif\\n\\n  #include <begin_vertex>\\n\\n  #include <morphtarget_vertex>\\n  #include <skinning_vertex>\\n  // #include <displacementmap_vertex>\\n  #include <project_vertex>\\n  #include <logdepthbuf_vertex>\\n  #include <clipping_planes_vertex>\\n\\n  vViewPosition = - mvPosition.xyz;\\n\\n  float outlineTex = 1.0;\\n\\n  #ifdef OUTLINE\\n    #ifdef USE_OUTLINEWIDTHTEXTURE\\n      outlineTex = texture2D( outlineWidthTexture, vUv ).r;\\n    #endif\\n\\n    #ifdef OUTLINE_WIDTH_WORLD\\n      float worldNormalLength = length( transformedNormal );\\n      vec3 outlineOffset = 0.01 * outlineWidth * outlineTex * worldNormalLength * objectNormal;\\n      gl_Position = projectionMatrix * modelViewMatrix * vec4( outlineOffset + transformed, 1.0 );\\n    #endif\\n\\n    #ifdef OUTLINE_WIDTH_SCREEN\\n      vec3 clipNormal = ( projectionMatrix * modelViewMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\n      vec2 projectedNormal = normalize( clipNormal.xy );\\n      projectedNormal *= min( gl_Position.w, outlineScaledMaxDistance );\\n      projectedNormal.x *= projectionMatrix[ 0 ].x / projectionMatrix[ 1 ].y;\\n      gl_Position.xy += 0.01 * outlineWidth * outlineTex * projectedNormal.xy;\\n    #endif\\n\\n    gl_Position.z += 1E-6 * gl_Position.w; // anti-artifact magic\\n  #endif\\n\\n  #include <worldpos_vertex>\\n  // #include <envmap_vertex>\\n  #include <shadowmap_vertex>\\n  #include <fog_vertex>\\n\\n}\",this.fragmentShader=i+'// #define PHONG\\n\\n#ifdef BLENDMODE_CUTOUT\\n  uniform float cutoff;\\n#endif\\n\\nuniform vec3 color;\\nuniform float colorAlpha;\\nuniform vec3 shadeColor;\\n#ifdef USE_SHADETEXTURE\\n  uniform sampler2D shadeTexture;\\n#endif\\n\\nuniform float receiveShadowRate;\\n#ifdef USE_RECEIVESHADOWTEXTURE\\n  uniform sampler2D receiveShadowTexture;\\n#endif\\n\\nuniform float shadingGradeRate;\\n#ifdef USE_SHADINGGRADETEXTURE\\n  uniform sampler2D shadingGradeTexture;\\n#endif\\n\\nuniform float shadeShift;\\nuniform float shadeToony;\\nuniform float lightColorAttenuation;\\nuniform float indirectLightIntensity;\\n\\n#ifdef USE_RIMTEXTURE\\n  uniform sampler2D rimTexture;\\n#endif\\nuniform vec3 rimColor;\\nuniform float rimLightingMix;\\nuniform float rimFresnelPower;\\nuniform float rimLift;\\n\\n#ifdef USE_SPHEREADD\\n  uniform sampler2D sphereAdd;\\n#endif\\n\\nuniform vec3 emissionColor;\\n\\nuniform vec3 outlineColor;\\nuniform float outlineLightingMix;\\n\\n#ifdef USE_UVANIMMASKTEXTURE\\n  uniform sampler2D uvAnimMaskTexture;\\n#endif\\n\\nuniform float uvAnimOffsetX;\\nuniform float uvAnimOffsetY;\\nuniform float uvAnimTheta;\\n\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n\\n// #include <uv_pars_fragment>\\n#if ( defined( MTOON_USE_UV ) && !defined( MTOON_UVS_VERTEX_ONLY ) )\\n  varying vec2 vUv;\\n#endif\\n\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n// #include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n// #include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n// #include <envmap_common_pars_fragment>\\n// #include <envmap_pars_fragment>\\n// #include <cube_uv_reflection_fragment>\\n#include <fog_pars_fragment>\\n\\n// #include <bsdfs>\\nvec3 BRDF_Lambert( const in vec3 diffuseColor ) {\\n    return RECIPROCAL_PI * diffuseColor;\\n}\\n\\n#include <lights_pars_begin>\\n\\n// #include <lights_phong_pars_fragment>\\nvarying vec3 vViewPosition;\\n\\n#ifndef FLAT_SHADED\\n  varying vec3 vNormal;\\n#endif\\n\\nstruct MToonMaterial {\\n  vec3 diffuseColor;\\n  vec3 shadeColor;\\n  float shadingGrade;\\n  float receiveShadow;\\n};\\n\\n#define Material_LightProbeLOD( material ) (0)\\n\\n#include <shadowmap_pars_fragment>\\n// #include <bumpmap_pars_fragment>\\n\\n// #include <normalmap_pars_fragment>\\n#ifdef USE_NORMALMAP\\n\\n  uniform sampler2D normalMap;\\n  uniform vec2 normalScale;\\n\\n#endif\\n\\n#ifdef OBJECTSPACE_NORMALMAP\\n\\n  uniform mat3 normalMatrix;\\n\\n#endif\\n\\n#if ! defined ( USE_TANGENT ) && defined ( TANGENTSPACE_NORMALMAP )\\n\\n  // Per-Pixel Tangent Space Normal Mapping\\n  // http://hacksoflife.blogspot.ch/2009/11/per-pixel-tangent-space-normal-mapping.html\\n\\n  // three-vrm specific change: it requires `uv` as an input in order to support uv scrolls\\n\\n  // Temporary compat against shader change @ Three.js r126\\n  // See: #21205, #21307, #21299\\n  #if THREE_VRM_THREE_REVISION >= 126\\n\\n    vec3 perturbNormal2Arb( vec2 uv, vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {\\n\\n      vec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\\n      vec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\\n      vec2 st0 = dFdx( uv.st );\\n      vec2 st1 = dFdy( uv.st );\\n\\n      vec3 N = normalize( surf_norm );\\n\\n      vec3 q1perp = cross( q1, N );\\n      vec3 q0perp = cross( N, q0 );\\n\\n      vec3 T = q1perp * st0.x + q0perp * st1.x;\\n      vec3 B = q1perp * st0.y + q0perp * st1.y;\\n\\n      // three-vrm specific change: Workaround for the issue that happens when delta of uv = 0.0\\n      // TODO: Is this still required? Or shall I make a PR about it?\\n      if ( length( T ) == 0.0 || length( B ) == 0.0 ) {\\n        return surf_norm;\\n      }\\n\\n      float det = max( dot( T, T ), dot( B, B ) );\\n      float scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );\\n\\n      return normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );\\n\\n    }\\n\\n  #else\\n\\n    vec3 perturbNormal2Arb( vec2 uv, vec3 eye_pos, vec3 surf_norm, vec3 mapN ) {\\n\\n      // Workaround for Adreno 3XX dFd*( vec3 ) bug. See #9988\\n\\n      vec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\\n      vec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\\n      vec2 st0 = dFdx( uv.st );\\n      vec2 st1 = dFdy( uv.st );\\n\\n      float scale = sign( st1.t * st0.s - st0.t * st1.s ); // we do not care about the magnitude\\n\\n      vec3 S = ( q0 * st1.t - q1 * st0.t ) * scale;\\n      vec3 T = ( - q0 * st1.s + q1 * st0.s ) * scale;\\n\\n      // three-vrm specific change: Workaround for the issue that happens when delta of uv = 0.0\\n      // TODO: Is this still required? Or shall I make a PR about it?\\n\\n      if ( length( S ) == 0.0 || length( T ) == 0.0 ) {\\n        return surf_norm;\\n      }\\n\\n      S = normalize( S );\\n      T = normalize( T );\\n      vec3 N = normalize( surf_norm );\\n\\n      #ifdef DOUBLE_SIDED\\n\\n        // Workaround for Adreno GPUs gl_FrontFacing bug. See #15850 and #10331\\n\\n        bool frontFacing = dot( cross( S, T ), N ) > 0.0;\\n\\n        mapN.xy *= ( float( frontFacing ) * 2.0 - 1.0 );\\n\\n      #else\\n\\n        mapN.xy *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\n      #endif\\n\\n      mat3 tsn = mat3( S, T, N );\\n      return normalize( tsn * mapN );\\n\\n    }\\n\\n  #endif\\n\\n#endif\\n\\n// #include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\n\\n// == lighting stuff ===========================================================\\nfloat getLightIntensity(\\n  const in IncidentLight directLight,\\n  const in GeometricContext geometry,\\n  const in float shadow,\\n  const in float shadingGrade\\n) {\\n  float lightIntensity = dot( geometry.normal, directLight.direction );\\n  lightIntensity = 0.5 + 0.5 * lightIntensity;\\n  lightIntensity = lightIntensity * shadow;\\n  lightIntensity = lightIntensity * shadingGrade;\\n  lightIntensity = lightIntensity * 2.0 - 1.0;\\n  return shadeToony == 1.0\\n    ? step( shadeShift, lightIntensity )\\n    : smoothstep( shadeShift, shadeShift + ( 1.0 - shadeToony ), lightIntensity );\\n}\\n\\nvec3 getLighting( const in vec3 lightColor ) {\\n  vec3 lighting = lightColor;\\n  lighting = mix(\\n    lighting,\\n    vec3( max( 0.001, max( lighting.x, max( lighting.y, lighting.z ) ) ) ),\\n    lightColorAttenuation\\n  );\\n\\n  #ifndef PHYSICALLY_CORRECT_LIGHTS\\n    lighting *= PI;\\n  #endif\\n\\n  return lighting;\\n}\\n\\nvec3 getDiffuse(\\n  const in MToonMaterial material,\\n  const in float lightIntensity,\\n  const in vec3 lighting\\n) {\\n  #ifdef DEBUG_LITSHADERATE\\n    return vec3( BRDF_Lambert( lightIntensity * lighting ) );\\n  #endif\\n\\n  return lighting * BRDF_Lambert( mix( material.shadeColor, material.diffuseColor, lightIntensity ) );\\n}\\n\\n// == post correction ==========================================================\\nvoid postCorrection() {\\n  #include <tonemapping_fragment>\\n  #include <encodings_fragment>\\n  #include <fog_fragment>\\n  #include <premultiplied_alpha_fragment>\\n  #include <dithering_fragment>\\n}\\n\\n// == main procedure ===========================================================\\nvoid main() {\\n  #include <clipping_planes_fragment>\\n\\n  vec2 uv = vec2(0.5, 0.5);\\n\\n  #if ( defined( MTOON_USE_UV ) && !defined( MTOON_UVS_VERTEX_ONLY ) )\\n    uv = vUv;\\n\\n    float uvAnimMask = 1.0;\\n    #ifdef USE_UVANIMMASKTEXTURE\\n      uvAnimMask = texture2D( uvAnimMaskTexture, uv ).x;\\n    #endif\\n\\n    uv = uv + vec2( uvAnimOffsetX, uvAnimOffsetY ) * uvAnimMask;\\n    float uvRotCos = cos( uvAnimTheta * uvAnimMask );\\n    float uvRotSin = sin( uvAnimTheta * uvAnimMask );\\n    uv = mat2( uvRotCos, uvRotSin, -uvRotSin, uvRotCos ) * ( uv - 0.5 ) + 0.5;\\n  #endif\\n\\n  #ifdef DEBUG_UV\\n    gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\\n    #if ( defined( MTOON_USE_UV ) && !defined( MTOON_UVS_VERTEX_ONLY ) )\\n      gl_FragColor = vec4( uv, 0.0, 1.0 );\\n    #endif\\n    return;\\n  #endif\\n\\n  vec4 diffuseColor = vec4( color, colorAlpha );\\n  ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n  vec3 totalEmissiveRadiance = emissionColor;\\n\\n  #include <logdepthbuf_fragment>\\n\\n  // #include <map_fragment>\\n  #ifdef USE_MAP\\n    diffuseColor *= mapTexelToLinear( texture2D( map, uv ) );\\n  #endif\\n\\n  #include <color_fragment>\\n  // #include <alphamap_fragment>\\n\\n  // -- MToon: alpha -----------------------------------------------------------\\n  // #include <alphatest_fragment>\\n  #ifdef BLENDMODE_CUTOUT\\n    if ( diffuseColor.a <= cutoff ) { discard; }\\n    diffuseColor.a = 1.0;\\n  #endif\\n\\n  #ifdef BLENDMODE_OPAQUE\\n    diffuseColor.a = 1.0;\\n  #endif\\n\\n  #if defined( OUTLINE ) && defined( OUTLINE_COLOR_FIXED ) // omitting DebugMode\\n    gl_FragColor = vec4( outlineColor, diffuseColor.a );\\n    postCorrection();\\n    return;\\n  #endif\\n\\n  // #include <specularmap_fragment>\\n  #include <normal_fragment_begin>\\n\\n  #ifdef OUTLINE\\n    normal *= -1.0;\\n  #endif\\n\\n  // #include <normal_fragment_maps>\\n\\n  #ifdef OBJECTSPACE_NORMALMAP\\n\\n    normal = texture2D( normalMap, uv ).xyz * 2.0 - 1.0; // overrides both flatShading and attribute normals\\n\\n    #ifdef FLIP_SIDED\\n\\n      normal = - normal;\\n\\n    #endif\\n\\n    #ifdef DOUBLE_SIDED\\n\\n      // Temporary compat against shader change @ Three.js r126\\n      // See: #21205, #21307, #21299\\n      #if THREE_VRM_THREE_REVISION >= 126\\n\\n        normal = normal * faceDirection;\\n\\n      #else\\n\\n        normal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\n      #endif\\n\\n    #endif\\n\\n    normal = normalize( normalMatrix * normal );\\n\\n  #elif defined( TANGENTSPACE_NORMALMAP )\\n\\n    vec3 mapN = texture2D( normalMap, uv ).xyz * 2.0 - 1.0;\\n    mapN.xy *= normalScale;\\n\\n    #ifdef USE_TANGENT\\n\\n      normal = normalize( vTBN * mapN );\\n\\n    #else\\n\\n      // Temporary compat against shader change @ Three.js r126\\n      // See: #21205, #21307, #21299\\n      #if THREE_VRM_THREE_REVISION >= 126\\n\\n        normal = perturbNormal2Arb( uv, -vViewPosition, normal, mapN, faceDirection );\\n\\n      #else\\n\\n        normal = perturbNormal2Arb( uv, -vViewPosition, normal, mapN );\\n\\n      #endif\\n\\n    #endif\\n\\n  #endif\\n\\n  // #include <emissivemap_fragment>\\n  #ifdef USE_EMISSIVEMAP\\n    totalEmissiveRadiance *= emissiveMapTexelToLinear( texture2D( emissiveMap, uv ) ).rgb;\\n  #endif\\n\\n  #ifdef DEBUG_NORMAL\\n    gl_FragColor = vec4( 0.5 + 0.5 * normal, 1.0 );\\n    return;\\n  #endif\\n\\n  // -- MToon: lighting --------------------------------------------------------\\n  // accumulation\\n  // #include <lights_phong_fragment>\\n  MToonMaterial material;\\n\\n  material.diffuseColor = diffuseColor.rgb;\\n\\n  material.shadeColor = shadeColor;\\n  #ifdef USE_SHADETEXTURE\\n    material.shadeColor *= shadeTextureTexelToLinear( texture2D( shadeTexture, uv ) ).rgb;\\n  #endif\\n\\n  material.shadingGrade = 1.0;\\n  #ifdef USE_SHADINGGRADETEXTURE\\n    material.shadingGrade = 1.0 - shadingGradeRate * ( 1.0 - texture2D( shadingGradeTexture, uv ).r );\\n  #endif\\n\\n  material.receiveShadow = receiveShadowRate;\\n  #ifdef USE_RECEIVESHADOWTEXTURE\\n    material.receiveShadow *= texture2D( receiveShadowTexture, uv ).a;\\n  #endif\\n\\n  // #include <lights_fragment_begin>\\n  GeometricContext geometry;\\n\\n  geometry.position = - vViewPosition;\\n  geometry.normal = normal;\\n  geometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\\n\\n  IncidentLight directLight;\\n  vec3 lightingSum = vec3( 0.0 );\\n\\n  // since these variables will be used in unrolled loop, we have to define in prior\\n  float atten, shadow, lightIntensity;\\n  vec3 lighting;\\n\\n  #if ( NUM_POINT_LIGHTS > 0 )\\n    PointLight pointLight;\\n\\n    #if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\\n    PointLightShadow pointLightShadow;\\n    #endif\\n\\n    #pragma unroll_loop_start\\n    for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n      pointLight = pointLights[ i ];\\n\\n      #if THREE_VRM_THREE_REVISION >= 132\\n        getPointLightInfo( pointLight, geometry, directLight );\\n      #else\\n        getPointDirectLightIrradiance( pointLight, geometry, directLight );\\n      #endif\\n\\n      atten = 1.0;\\n      #if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\\n      pointLightShadow = pointLightShadows[ i ];\\n      atten = all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\\n      #endif\\n\\n      shadow = 1.0 - material.receiveShadow * ( 1.0 - ( 0.5 + 0.5 * atten ) );\\n      lightIntensity = getLightIntensity( directLight, geometry, shadow, material.shadingGrade );\\n      lighting = getLighting( directLight.color );\\n      reflectedLight.directDiffuse += getDiffuse( material, lightIntensity, lighting );\\n      lightingSum += lighting;\\n    }\\n    #pragma unroll_loop_end\\n  #endif\\n\\n  #if ( NUM_SPOT_LIGHTS > 0 )\\n    SpotLight spotLight;\\n\\n    #if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\\n    SpotLightShadow spotLightShadow;\\n    #endif\\n\\n    #pragma unroll_loop_start\\n    for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n      spotLight = spotLights[ i ];\\n\\n      #if THREE_VRM_THREE_REVISION >= 132\\n        getSpotLightInfo( spotLight, geometry, directLight );\\n      #else\\n        getSpotDirectLightIrradiance( spotLight, geometry, directLight );\\n      #endif\\n\\n      atten = 1.0;\\n      #if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\\n      spotLightShadow = spotLightShadows[ i ];\\n      atten = all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n      #endif\\n\\n      shadow = 1.0 - material.receiveShadow * ( 1.0 - ( 0.5 + 0.5 * atten ) );\\n      lightIntensity = getLightIntensity( directLight, geometry, shadow, material.shadingGrade );\\n      lighting = getLighting( directLight.color );\\n      reflectedLight.directDiffuse += getDiffuse( material, lightIntensity, lighting );\\n      lightingSum += lighting;\\n    }\\n    #pragma unroll_loop_end\\n  #endif\\n\\n  #if ( NUM_DIR_LIGHTS > 0 )\\n    DirectionalLight directionalLight;\\n\\n    #if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\\n    DirectionalLightShadow directionalLightShadow;\\n    #endif\\n\\n    #pragma unroll_loop_start\\n    for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n      directionalLight = directionalLights[ i ];\\n\\n      #if THREE_VRM_THREE_REVISION >= 132\\n        getDirectionalLightInfo( directionalLight, geometry, directLight );\\n      #else\\n        getDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\\n      #endif\\n\\n      atten = 1.0;\\n      #if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\\n      directionalLightShadow = directionalLightShadows[ i ];\\n      atten = all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n      #endif\\n\\n      shadow = 1.0 - material.receiveShadow * ( 1.0 - ( 0.5 + 0.5 * atten ) );\\n      lightIntensity = getLightIntensity( directLight, geometry, shadow, material.shadingGrade );\\n      lighting = getLighting( directLight.color );\\n      reflectedLight.directDiffuse += getDiffuse( material, lightIntensity, lighting );\\n      lightingSum += lighting;\\n    }\\n    #pragma unroll_loop_end\\n  #endif\\n\\n  // #if defined( RE_IndirectDiffuse )\\n  vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\\n  #if THREE_VRM_THREE_REVISION >= 133\\n    irradiance += getLightProbeIrradiance( lightProbe, geometry.normal );\\n  #else\\n    irradiance += getLightProbeIrradiance( lightProbe, geometry );\\n  #endif\\n  #if ( NUM_HEMI_LIGHTS > 0 )\\n    #pragma unroll_loop_start\\n    for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n      irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n    }\\n    #pragma unroll_loop_end\\n  #endif\\n  // #endif\\n\\n  // #include <lights_fragment_maps>\\n  #ifdef USE_LIGHTMAP\\n    vec4 lightMapTexel = texture2D( lightMap, vUv2 );\\n    vec3 lightMapIrradiance = lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\\n    #ifndef PHYSICALLY_CORRECT_LIGHTS\\n      lightMapIrradiance *= PI;\\n    #endif\\n    irradiance += lightMapIrradiance;\\n  #endif\\n\\n  // #include <lights_fragment_end>\\n  // RE_IndirectDiffuse here\\n  reflectedLight.indirectDiffuse += indirectLightIntensity * irradiance * BRDF_Lambert( material.diffuseColor );\\n\\n  // modulation\\n  #include <aomap_fragment>\\n\\n  vec3 col = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;\\n\\n  // The \"comment out if you want to PBR absolutely\" line\\n  #ifndef DEBUG_LITSHADERATE\\n    col = min(col, material.diffuseColor);\\n  #endif\\n\\n  #if defined( OUTLINE ) && defined( OUTLINE_COLOR_MIXED )\\n    gl_FragColor = vec4(\\n      outlineColor.rgb * mix( vec3( 1.0 ), col, outlineLightingMix ),\\n      diffuseColor.a\\n    );\\n    postCorrection();\\n    return;\\n  #endif\\n\\n  #ifdef DEBUG_LITSHADERATE\\n    gl_FragColor = vec4( col, diffuseColor.a );\\n    postCorrection();\\n    return;\\n  #endif\\n\\n  // -- MToon: parametric rim lighting -----------------------------------------\\n  vec3 viewDir = normalize( vViewPosition );\\n  vec3 rimMix = mix( vec3( 1.0 ), lightingSum + indirectLightIntensity * irradiance, rimLightingMix );\\n  vec3 rim = rimColor * pow( saturate( 1.0 - dot( viewDir, normal ) + rimLift ), rimFresnelPower );\\n  #ifdef USE_RIMTEXTURE\\n    rim *= rimTextureTexelToLinear( texture2D( rimTexture, uv ) ).rgb;\\n  #endif\\n  col += rim;\\n\\n  // -- MToon: additive matcap -------------------------------------------------\\n  #ifdef USE_SPHEREADD\\n    {\\n      vec3 x = normalize( vec3( viewDir.z, 0.0, -viewDir.x ) );\\n      vec3 y = cross( viewDir, x ); // guaranteed to be normalized\\n      vec2 sphereUv = 0.5 + 0.5 * vec2( dot( x, normal ), -dot( y, normal ) );\\n      vec3 matcap = sphereAddTexelToLinear( texture2D( sphereAdd, sphereUv ) ).xyz;\\n      col += matcap;\\n    }\\n  #endif\\n\\n  // -- MToon: Emission --------------------------------------------------------\\n  col += totalEmissiveRadiance;\\n\\n  // #include <envmap_fragment>\\n\\n  // -- Almost done! -----------------------------------------------------------\\n  gl_FragColor = vec4( col, diffuseColor.a );\\n  postCorrection();\\n}',this.needsUpdate=!0}_updateCullFace(){this.isOutline?this.outlineCullMode===Y.Off?this.side=e.DoubleSide:this.outlineCullMode===Y.Front?this.side=e.BackSide:this.outlineCullMode===Y.Back&&(this.side=e.FrontSide):this.cullMode===Y.Off?this.side=e.DoubleSide:this.cullMode===Y.Front?this.side=e.BackSide:this.cullMode===Y.Back&&(this.side=e.FrontSide)}}var J;!function(e){e[e.Opaque=0]=\"Opaque\",e[e.Cutout=1]=\"Cutout\",e[e.Transparent=2]=\"Transparent\",e[e.TransparentWithZWrite=3]=\"TransparentWithZWrite\"}(J||(J={}));class K extends e.ShaderMaterial{constructor(t){super(),this.isVRMUnlitMaterial=!0,this.cutoff=.5,this.map=null,this.mainTex_ST=new e.Vector4(0,0,1,1),this._renderType=J.Opaque,this.shouldApplyUniforms=!0,void 0===t&&(t={}),t.fog=!0,t.clipping=!0,parseInt(e.REVISION,10)<129&&(t.skinning=t.skinning||!1),parseInt(e.REVISION,10)<131&&(t.morphTargets=t.morphTargets||!1,t.morphNormals=t.morphNormals||!1),t.uniforms=e.UniformsUtils.merge([e.UniformsLib.common,e.UniformsLib.fog,{cutoff:{value:.5},mainTex_ST:{value:new e.Vector4(0,0,1,1)}}]),this.setValues(t),this._updateShaderCode(),this._applyUniforms()}get mainTex(){return this.map}set mainTex(e){this.map=e}get renderType(){return this._renderType}set renderType(e){this._renderType=e,this.depthWrite=this._renderType!==J.Transparent,this.transparent=this._renderType===J.Transparent||this._renderType===J.TransparentWithZWrite,this._updateShaderCode()}updateVRMMaterials(e){this._applyUniforms()}copy(e){return super.copy(e),this.cutoff=e.cutoff,this.map=e.map,this.mainTex_ST.copy(e.mainTex_ST),this.renderType=e.renderType,this}_applyUniforms(){this.shouldApplyUniforms&&(this.shouldApplyUniforms=!1,this.uniforms.cutoff.value=this.cutoff,this.uniforms.map.value=this.map,this.uniforms.mainTex_ST.value.copy(this.mainTex_ST))}_updateShaderCode(){this.defines={RENDERTYPE_OPAQUE:this._renderType===J.Opaque,RENDERTYPE_CUTOUT:this._renderType===J.Cutout,RENDERTYPE_TRANSPARENT:this._renderType===J.Transparent||this._renderType===J.TransparentWithZWrite},this.vertexShader=\"#include <common>\\n\\n// #include <uv_pars_vertex>\\n#ifdef USE_MAP\\n  varying vec2 vUv;\\n  uniform vec4 mainTex_ST;\\n#endif\\n\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\n\\nvoid main() {\\n\\n  // #include <uv_vertex>\\n  #ifdef USE_MAP\\n    vUv = vec2( mainTex_ST.p * uv.x + mainTex_ST.s, mainTex_ST.q * uv.y + mainTex_ST.t );\\n  #endif\\n\\n  #include <uv2_vertex>\\n  #include <color_vertex>\\n  #include <skinbase_vertex>\\n\\n  #ifdef USE_ENVMAP\\n\\n  #include <beginnormal_vertex>\\n  #include <morphnormal_vertex>\\n  #include <skinnormal_vertex>\\n  #include <defaultnormal_vertex>\\n\\n  #endif\\n\\n  #include <begin_vertex>\\n  #include <morphtarget_vertex>\\n  #include <skinning_vertex>\\n  #include <project_vertex>\\n  #include <logdepthbuf_vertex>\\n\\n  #include <worldpos_vertex>\\n  #include <clipping_planes_vertex>\\n  #include <envmap_vertex>\\n  #include <fog_vertex>\\n\\n}\",this.fragmentShader=\"#ifdef RENDERTYPE_CUTOUT\\n  uniform float cutoff;\\n#endif\\n\\n#include <common>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n// #include <alphamap_pars_fragment>\\n// #include <aomap_pars_fragment>\\n// #include <lightmap_pars_fragment>\\n// #include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n// #include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\n\\n// == main procedure ===========================================================\\nvoid main() {\\n  #include <clipping_planes_fragment>\\n\\n  vec4 diffuseColor = vec4( 1.0 );\\n\\n  #include <logdepthbuf_fragment>\\n\\n  // #include <map_fragment>\\n  #ifdef USE_MAP\\n    diffuseColor *= mapTexelToLinear( texture2D( map, vUv ) );\\n  #endif\\n\\n  #include <color_fragment>\\n  // #include <alphamap_fragment>\\n\\n  // MToon: alpha\\n  // #include <alphatest_fragment>\\n  #ifdef RENDERTYPE_CUTOUT\\n    if ( diffuseColor.a <= cutoff ) { discard; }\\n    diffuseColor.a = 1.0;\\n  #endif\\n\\n  #ifdef RENDERTYPE_OPAQUE\\n    diffuseColor.a = 1.0;\\n  #endif\\n\\n  // #include <specularmap_fragment>\\n\\n  ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\n  // accumulation (baked indirect lighting only)\\n  #ifdef USE_LIGHTMAP\\n    reflectedLight.indirectDiffuse += texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n  #else\\n    reflectedLight.indirectDiffuse += vec3( 1.0 );\\n  #endif\\n\\n  // modulation\\n  // #include <aomap_fragment>\\n\\n  reflectedLight.indirectDiffuse *= diffuseColor.rgb;\\n  vec3 outgoingLight = reflectedLight.indirectDiffuse;\\n\\n  // #include <envmap_fragment>\\n\\n  gl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\n  #include <premultiplied_alpha_fragment>\\n  #include <tonemapping_fragment>\\n  #include <encodings_fragment>\\n  #include <fog_fragment>\\n}\",this.needsUpdate=!0}}class ee{constructor(t={}){this._encoding=t.encoding||e.LinearEncoding,this._encoding!==e.LinearEncoding&&this._encoding!==e.sRGBEncoding&&console.warn(\"The specified color encoding might not work properly with VRMMaterialImporter. You might want to use THREE.sRGBEncoding instead.\"),this._requestEnvMap=t.requestEnvMap}convertGLTFMaterials(e){var n;return t(this,void 0,void 0,(function*(){const i=null===(n=e.parser.json.extensions)||void 0===n?void 0:n.VRM;if(!i)return null;const r=i.materialProperties;if(!r)return null;const o=yield c(e),s={},a=[];return yield Promise.all(Array.from(o.entries()).map((([n,i])=>t(this,void 0,void 0,(function*(){const o=e.parser.json.nodes[n],l=e.parser.json.meshes[o.mesh];yield Promise.all(i.map(((n,i)=>t(this,void 0,void 0,(function*(){const t=l.primitives[i];if(!t)return;const o=n.geometry,d=o.index?o.index.count:o.attributes.position.count/3;Array.isArray(n.material)||(n.material=[n.material],o.addGroup(0,d,0));const h=t.material;let u,c=r[h];c||(console.warn(`VRMMaterialImporter: There are no material definition for material #${h} on VRM extension.`),c={shader:\"VRM_USE_GLTFSHADER\"}),s[h]?u=s[h]:(u=yield this.createVRMMaterials(n.material[0],c,e),s[h]=u,a.push(u.surface),u.outline&&a.push(u.outline)),n.material[0]=u.surface,this._requestEnvMap&&u.surface.isMeshStandardMaterial&&this._requestEnvMap().then((e=>{u.surface.envMap=e,u.surface.needsUpdate=!0})),n.renderOrder=c.renderQueue||2e3,u.outline&&(n.material[1]=u.outline,o.addGroup(0,d,1))})))))}))))),a}))}createVRMMaterials(e,n,i){return t(this,void 0,void 0,(function*(){let t,r;if(\"VRM/MToon\"===n.shader){const o=yield this._extractMaterialProperties(e,n,i);[\"srcBlend\",\"dstBlend\",\"isFirstSetup\"].forEach((e=>{void 0!==o[e]&&delete o[e]})),[\"mainTex\",\"shadeTexture\",\"emissionMap\",\"sphereAdd\",\"rimTexture\"].forEach((e=>{void 0!==o[e]&&(o[e].encoding=this._encoding)})),o.encoding=this._encoding,t=new $(o),o.outlineWidthMode!==Q.None&&(o.isOutline=!0,r=new $(o))}else if(\"VRM/UnlitTexture\"===n.shader){const r=yield this._extractMaterialProperties(e,n,i);r.renderType=J.Opaque,t=new K(r)}else if(\"VRM/UnlitCutout\"===n.shader){const r=yield this._extractMaterialProperties(e,n,i);r.renderType=J.Cutout,t=new K(r)}else if(\"VRM/UnlitTransparent\"===n.shader){const r=yield this._extractMaterialProperties(e,n,i);r.renderType=J.Transparent,t=new K(r)}else if(\"VRM/UnlitTransparentZWrite\"===n.shader){const r=yield this._extractMaterialProperties(e,n,i);r.renderType=J.TransparentWithZWrite,t=new K(r)}else\"VRM_USE_GLTFSHADER\"!==n.shader&&console.warn(`Unknown shader detected: \"${n.shader}\"`),t=this._convertGLTFMaterial(e.clone());return t.name=e.name,t.userData=JSON.parse(JSON.stringify(e.userData)),t.userData.vrmMaterialProperties=n,r&&(r.name=e.name+\" (Outline)\",r.userData=JSON.parse(JSON.stringify(e.userData)),r.userData.vrmMaterialProperties=n),{surface:t,outline:r}}))}_renameMaterialProperty(e){return\"_\"!==e[0]?(console.warn(`VRMMaterials: Given property name \"${e}\" might be invalid`),e):(e=e.substring(1),/[A-Z]/.test(e[0])?e[0].toLowerCase()+e.substring(1):(console.warn(`VRMMaterials: Given property name \"${e}\" might be invalid`),e))}_convertGLTFMaterial(t){if(t.isMeshStandardMaterial){const n=t;n.map&&(n.map.encoding=this._encoding),n.emissiveMap&&(n.emissiveMap.encoding=this._encoding),this._encoding===e.LinearEncoding&&(n.color.convertLinearToSRGB(),n.emissive.convertLinearToSRGB())}if(t.isMeshBasicMaterial){const n=t;n.map&&(n.map.encoding=this._encoding),this._encoding===e.LinearEncoding&&n.color.convertLinearToSRGB()}return t}_extractMaterialProperties(t,n,i){const r=[],o={};if(n.textureProperties)for(const e of Object.keys(n.textureProperties)){const t=this._renameMaterialProperty(e),s=n.textureProperties[e];r.push(i.parser.getDependency(\"texture\",s).then((e=>{o[t]=e})))}if(n.floatProperties)for(const e of Object.keys(n.floatProperties)){const t=this._renameMaterialProperty(e);o[t]=n.floatProperties[e]}if(n.vectorProperties)for(const t of Object.keys(n.vectorProperties)){let i=this._renameMaterialProperty(t);[\"_MainTex\",\"_ShadeTexture\",\"_BumpMap\",\"_ReceiveShadowTexture\",\"_ShadingGradeTexture\",\"_RimTexture\",\"_SphereAdd\",\"_EmissionMap\",\"_OutlineWidthTexture\",\"_UvAnimMaskTexture\"].some((e=>t===e))&&(i+=\"_ST\"),o[i]=new e.Vector4(...n.vectorProperties[t])}return parseInt(e.REVISION,10)<129&&(o.skinning=t.skinning||!1),parseInt(e.REVISION,10)<131&&(o.morphTargets=t.morphTargets||!1,o.morphNormals=t.morphNormals||!1),Promise.all(r).then((()=>o))}}class te{constructor(e){var t;this.ignoreTexture=null!==(t=null==e?void 0:e.ignoreTexture)&&void 0!==t&&t}import(e){var n;return t(this,void 0,void 0,(function*(){const t=null===(n=e.parser.json.extensions)||void 0===n?void 0:n.VRM;if(!t)return null;const i=t.meta;if(!i)return null;let r;return this.ignoreTexture||null==i.texture||-1===i.texture||(r=yield e.parser.getDependency(\"texture\",i.texture)),{allowedUserName:i.allowedUserName,author:i.author,commercialUssageName:i.commercialUssageName,contactInformation:i.contactInformation,licenseName:i.licenseName,otherLicenseUrl:i.otherLicenseUrl,otherPermissionUrl:i.otherPermissionUrl,reference:i.reference,sexualUssageName:i.sexualUssageName,texture:null!=r?r:void 0,title:i.title,version:i.version,violentUssageName:i.violentUssageName}}))}}const ne=new e.Matrix4;function ie(e){return e.invert?e.invert():e.getInverse(ne.copy(e)),e}class re{constructor(t){this._inverseCache=new e.Matrix4,this._shouldUpdateInverse=!0,this.matrix=t;const n={set:(e,t,n)=>(this._shouldUpdateInverse=!0,e[t]=n,!0)};this._originalElements=t.elements,t.elements=new Proxy(t.elements,n)}get inverse(){return this._shouldUpdateInverse&&(ie(this._inverseCache.copy(this.matrix)),this._shouldUpdateInverse=!1),this._inverseCache}revert(){this.matrix.elements=this._originalElements}}const oe=Object.freeze(new e.Matrix4),se=Object.freeze(new e.Quaternion),ae=new e.Vector3,le=new e.Vector3,de=new e.Vector3,he=new e.Quaternion,ue=new e.Matrix4,ce=new e.Matrix4;class pe{constructor(t,n={}){var i,r,o,s,a,l;if(this._currentTail=new e.Vector3,this._prevTail=new e.Vector3,this._nextTail=new e.Vector3,this._boneAxis=new e.Vector3,this._centerSpacePosition=new e.Vector3,this._center=null,this._parentWorldRotation=new e.Quaternion,this._initialLocalMatrix=new e.Matrix4,this._initialLocalRotation=new e.Quaternion,this._initialLocalChildPosition=new e.Vector3,this.bone=t,this.bone.matrixAutoUpdate=!1,this.radius=null!==(i=n.radius)&&void 0!==i?i:.02,this.stiffnessForce=null!==(r=n.stiffnessForce)&&void 0!==r?r:1,this.gravityDir=n.gravityDir?(new e.Vector3).copy(n.gravityDir):(new e.Vector3).set(0,-1,0),this.gravityPower=null!==(o=n.gravityPower)&&void 0!==o?o:0,this.dragForce=null!==(s=n.dragForce)&&void 0!==s?s:.4,this.colliders=null!==(a=n.colliders)&&void 0!==a?a:[],this._centerSpacePosition.setFromMatrixPosition(this.bone.matrixWorld),this._initialLocalMatrix.copy(this.bone.matrix),this._initialLocalRotation.copy(this.bone.quaternion),0===this.bone.children.length)this._initialLocalChildPosition.copy(this.bone.position).normalize().multiplyScalar(.07);else{const e=this.bone.children[0];this._initialLocalChildPosition.copy(e.position)}this.bone.localToWorld(this._currentTail.copy(this._initialLocalChildPosition)),this._prevTail.copy(this._currentTail),this._nextTail.copy(this._currentTail),this._boneAxis.copy(this._initialLocalChildPosition).normalize(),this._centerSpaceBoneLength=ae.copy(this._initialLocalChildPosition).applyMatrix4(this.bone.matrixWorld).sub(this._centerSpacePosition).length(),this.center=null!==(l=n.center)&&void 0!==l?l:null}get center(){return this._center}set center(e){var t;this._getMatrixCenterToWorld(ue),this._currentTail.applyMatrix4(ue),this._prevTail.applyMatrix4(ue),this._nextTail.applyMatrix4(ue),(null===(t=this._center)||void 0===t?void 0:t.userData.inverseCacheProxy)&&(this._center.userData.inverseCacheProxy.revert(),delete this._center.userData.inverseCacheProxy),this._center=e,this._center&&(this._center.userData.inverseCacheProxy||(this._center.userData.inverseCacheProxy=new re(this._center.matrixWorld))),this._getMatrixWorldToCenter(ue),this._currentTail.applyMatrix4(ue),this._prevTail.applyMatrix4(ue),this._nextTail.applyMatrix4(ue),ue.multiply(this.bone.matrixWorld),this._centerSpacePosition.setFromMatrixPosition(ue),this._centerSpaceBoneLength=ae.copy(this._initialLocalChildPosition).applyMatrix4(ue).sub(this._centerSpacePosition).length()}reset(){this.bone.quaternion.copy(this._initialLocalRotation),this.bone.updateMatrix(),this.bone.matrixWorld.multiplyMatrices(this._getParentMatrixWorld(),this.bone.matrix),this._centerSpacePosition.setFromMatrixPosition(this.bone.matrixWorld),this.bone.localToWorld(this._currentTail.copy(this._initialLocalChildPosition)),this._prevTail.copy(this._currentTail),this._nextTail.copy(this._currentTail)}update(e){if(e<=0)return;this.bone.matrixWorld.multiplyMatrices(this._getParentMatrixWorld(),this.bone.matrix),this.bone.parent?g(this.bone.parent,this._parentWorldRotation):this._parentWorldRotation.copy(se),this._getMatrixWorldToCenter(ue),ue.multiply(this.bone.matrixWorld),this._centerSpacePosition.setFromMatrixPosition(ue),this._getMatrixWorldToCenter(ce),ce.multiply(this._getParentMatrixWorld());const t=this.stiffnessForce*e,n=le.copy(this.gravityDir).multiplyScalar(this.gravityPower*e);this._nextTail.copy(this._currentTail).add(ae.copy(this._currentTail).sub(this._prevTail).multiplyScalar(1-this.dragForce)).add(ae.copy(this._boneAxis).applyMatrix4(this._initialLocalMatrix).applyMatrix4(ce).sub(this._centerSpacePosition).normalize().multiplyScalar(t)).add(n),this._nextTail.sub(this._centerSpacePosition).normalize().multiplyScalar(this._centerSpaceBoneLength).add(this._centerSpacePosition),this._collision(this._nextTail),this._prevTail.copy(this._currentTail),this._currentTail.copy(this._nextTail);const i=ie(ue.copy(ce.multiply(this._initialLocalMatrix))),r=he.setFromUnitVectors(this._boneAxis,ae.copy(this._nextTail).applyMatrix4(i).normalize());this.bone.quaternion.copy(this._initialLocalRotation).multiply(r),this.bone.updateMatrix(),this.bone.matrixWorld.multiplyMatrices(this._getParentMatrixWorld(),this.bone.matrix)}_collision(e){this.colliders.forEach((t=>{this._getMatrixWorldToCenter(ue),ue.multiply(t.matrixWorld);const n=ae.setFromMatrixPosition(ue),i=t.geometry.boundingSphere.radius,r=this.radius+i;if(e.distanceToSquared(n)<=r*r){const t=le.subVectors(e,n).normalize(),i=de.addVectors(n,t.multiplyScalar(r));e.copy(i.sub(this._centerSpacePosition).normalize().multiplyScalar(this._centerSpaceBoneLength).add(this._centerSpacePosition))}}))}_getMatrixCenterToWorld(e){return this._center?e.copy(this._center.matrixWorld):e.identity(),e}_getMatrixWorldToCenter(e){return this._center?e.copy(this._center.userData.inverseCacheProxy.inverse):e.identity(),e}_getParentMatrixWorld(){return this.bone.parent?this.bone.parent.matrixWorld:oe}}class me{constructor(e,t){this.colliderGroups=[],this.springBoneGroupList=[],this.colliderGroups=e,this.springBoneGroupList=t}setCenter(e){this.springBoneGroupList.forEach((t=>{t.forEach((t=>{t.center=e}))}))}lateUpdate(e){this.springBoneGroupList.forEach((t=>{t.forEach((t=>{t.update(e)}))}))}reset(){this.springBoneGroupList.forEach((e=>{e.forEach((e=>{e.reset()}))}))}}const fe=new e.Vector3,ge=new e.MeshBasicMaterial({visible:!1});class _e{import(e){var n;return t(this,void 0,void 0,(function*(){const t=null===(n=e.parser.json.extensions)||void 0===n?void 0:n.VRM;if(!t)return null;const i=t.secondaryAnimation;if(!i)return null;const r=yield this._importColliderMeshGroups(e,i),o=yield this._importSpringBoneGroupList(e,i,r);return new me(r,o)}))}_createSpringBone(e,t={}){return new pe(e,t)}_importSpringBoneGroupList(n,i,r){return t(this,void 0,void 0,(function*(){const o=i.boneGroups||[],s=[];return yield Promise.all(o.map((i=>t(this,void 0,void 0,(function*(){if(void 0===i.stiffiness||void 0===i.gravityDir||void 0===i.gravityDir.x||void 0===i.gravityDir.y||void 0===i.gravityDir.z||void 0===i.gravityPower||void 0===i.dragForce||void 0===i.hitRadius||void 0===i.colliderGroups||void 0===i.bones||void 0===i.center)return;const o=i.stiffiness,a=new e.Vector3(i.gravityDir.x,i.gravityDir.y,-i.gravityDir.z),l=i.gravityPower,d=i.dragForce,h=i.hitRadius,u=[];i.colliderGroups.forEach((e=>{u.push(...r[e].colliders)}));const c=[];yield Promise.all(i.bones.map((e=>t(this,void 0,void 0,(function*(){const t=yield n.parser.getDependency(\"node\",e),r=-1!==i.center?yield n.parser.getDependency(\"node\",i.center):null;t&&t.traverse((e=>{const t=this._createSpringBone(e,{radius:h,stiffnessForce:o,gravityDir:a,gravityPower:l,dragForce:d,colliders:u,center:r});c.push(t)}))}))))),s.push(c)}))))),s}))}_importColliderMeshGroups(e,n){return t(this,void 0,void 0,(function*(){const i=n.colliderGroups;if(void 0===i)return[];const r=[];return i.forEach((n=>t(this,void 0,void 0,(function*(){if(void 0===n.node||void 0===n.colliders)return;const t=yield e.parser.getDependency(\"node\",n.node),i=[];n.colliders.forEach((e=>{if(void 0===e.offset||void 0===e.offset.x||void 0===e.offset.y||void 0===e.offset.z||void 0===e.radius)return;const n=fe.set(e.offset.x,e.offset.y,-e.offset.z),r=this._createColliderMesh(e.radius,n);t.add(r),i.push(r)}));const o={node:n.node,colliders:i};r.push(o)})))),r}))}_createColliderMesh(t,n){const i=new e.Mesh(new e.SphereBufferGeometry(t,8,4),ge);return i.position.copy(n),i.name=\"vrmColliderSphere\",i.geometry.computeBoundingSphere(),i}}class ve{constructor(e={}){this._metaImporter=e.metaImporter||new te,this._blendShapeImporter=e.blendShapeImporter||new v,this._lookAtImporter=e.lookAtImporter||new W,this._humanoidImporter=e.humanoidImporter||new C,this._firstPersonImporter=e.firstPersonImporter||new E,this._materialImporter=e.materialImporter||new ee,this._springBoneImporter=e.springBoneImporter||new _e}import(e){return t(this,void 0,void 0,(function*(){if(void 0===e.parser.json.extensions||void 0===e.parser.json.extensions.VRM)throw new Error(\"Could not find VRM extension on the GLTF\");const t=e.scene;t.updateMatrixWorld(!1),t.traverse((e=>{e.isMesh&&(e.frustumCulled=!1)}));const n=(yield this._metaImporter.import(e))||void 0,i=(yield this._materialImporter.convertGLTFMaterials(e))||void 0,r=(yield this._humanoidImporter.import(e))||void 0,o=r&&(yield this._firstPersonImporter.import(e,r))||void 0,s=(yield this._blendShapeImporter.import(e))||void 0,a=o&&s&&r&&(yield this._lookAtImporter.import(e,o,s,r))||void 0,l=(yield this._springBoneImporter.import(e))||void 0;return new ye({scene:e.scene,meta:n,materials:i,humanoid:r,firstPerson:o,blendShapeProxy:s,lookAt:a,springBoneManager:l})}))}}class ye{constructor(e){this.scene=e.scene,this.humanoid=e.humanoid,this.blendShapeProxy=e.blendShapeProxy,this.firstPerson=e.firstPerson,this.lookAt=e.lookAt,this.materials=e.materials,this.springBoneManager=e.springBoneManager,this.meta=e.meta}static from(e,n={}){return t(this,void 0,void 0,(function*(){const t=new ve(n);return yield t.import(e)}))}update(e){this.lookAt&&this.lookAt.update(e),this.blendShapeProxy&&this.blendShapeProxy.update(),this.springBoneManager&&this.springBoneManager.lateUpdate(e),this.materials&&this.materials.forEach((t=>{t.updateVRMMaterials&&t.updateVRMMaterials(e)}))}dispose(){var e,t;const n=this.scene;n&&n.traverse(i),null===(t=null===(e=this.meta)||void 0===e?void 0:e.texture)||void 0===t||t.dispose()}}const Te=new e.Vector2,xe=new e.OrthographicCamera(-1,1,-1,1,-1,1),Se=new e.MeshBasicMaterial({color:16777215,side:e.DoubleSide}),Me=new e.Mesh(new e.PlaneBufferGeometry(2,2),Se),Ee=new e.Scene;Ee.add(Me);class Le{constructor(){}}Le.extractThumbnailBlob=function(e,t,n=512){var i;const r=null===(i=t.meta)||void 0===i?void 0:i.texture;if(!r)throw new Error(\"extractThumbnailBlob: This VRM does not have a thumbnail\");const o=e.getContext().canvas;e.getSize(Te);const s=Te.x,a=Te.y;return e.setSize(n,n,!1),Se.map=r,e.render(Ee,xe),Se.map=null,o instanceof OffscreenCanvas?o.convertToBlob().finally((()=>{e.setSize(s,a,!1)})):new Promise(((t,n)=>{o.toBlob((i=>{e.setSize(s,a,!1),null==i?n(\"extractThumbnailBlob: Failed to create a blob\"):t(i)}))}))},Le.removeUnnecessaryJoints=function(t){const n=new Map;t.traverse((t=>{if(\"SkinnedMesh\"!==t.type)return;const i=t,r=i.geometry.getAttribute(\"skinIndex\");let o=n.get(r);if(!o){const t=[],s=[],a={},l=r.array;for(let e=0;e<l.length;e++){const n=l[e];void 0===a[n]&&(a[n]=t.length,t.push(i.skeleton.bones[n]),s.push(i.skeleton.boneInverses[n])),l[e]=a[n]}r.copyArray(l),r.needsUpdate=!0,o=new e.Skeleton(t,s),n.set(r,o)}i.bind(o,new e.Matrix4)}))};const we=new e.Vector3;class Re extends G{setupHelper(t,n){n.disableFaceDirectionHelper||(this._faceDirectionHelper=new e.ArrowHelper(new e.Vector3(0,0,-1),new e.Vector3(0,0,0),.5,16711935),t.add(this._faceDirectionHelper))}update(e){super.update(e),this._faceDirectionHelper&&(this.firstPerson.getFirstPersonWorldPosition(this._faceDirectionHelper.position),this._faceDirectionHelper.setDirection(this.getLookAtWorldDirection(we)))}}class Pe extends W{import(e,t,n,i){var r;const o=null===(r=e.parser.json.extensions)||void 0===r?void 0:r.VRM;if(!o)return null;const s=o.firstPerson;if(!s)return null;const a=this._importApplyer(s,n,i);return new Re(t,a||void 0)}}const Ae=new e.MeshBasicMaterial({color:16711935,wireframe:!0,transparent:!0,depthTest:!1});class Ce extends me{setupHelper(e,t){t.disableSpringBoneHelper||(this.springBoneGroupList.forEach((t=>{t.forEach((t=>{if(t.getGizmo){const n=t.getGizmo();e.add(n)}}))})),this.colliderGroups.forEach((e=>{e.colliders.forEach((e=>{e.material=Ae,e.renderOrder=De}))})))}}const Oe=new e.Vector3;class be extends pe{constructor(e,t){super(e,t)}getGizmo(){if(this._gizmo)return this._gizmo;const t=Oe.copy(this._nextTail).sub(this._centerSpacePosition),n=t.length();return this._gizmo=new e.ArrowHelper(t.normalize(),this._centerSpacePosition,n,16776960,this.radius,this.radius),this._gizmo.line.renderOrder=De,this._gizmo.cone.renderOrder=De,this._gizmo.line.material.depthTest=!1,this._gizmo.line.material.transparent=!0,this._gizmo.cone.material.depthTest=!1,this._gizmo.cone.material.transparent=!0,this._gizmo}update(e){super.update(e),this._updateGizmo()}_updateGizmo(){if(!this._gizmo)return;const e=Oe.copy(this._currentTail).sub(this._centerSpacePosition),t=e.length();this._gizmo.setDirection(e.normalize()),this._gizmo.setLength(t,this.radius,this.radius),this._gizmo.position.copy(this._centerSpacePosition)}}class Ie extends _e{import(e){var n;return t(this,void 0,void 0,(function*(){const t=null===(n=e.parser.json.extensions)||void 0===n?void 0:n.VRM;if(!t)return null;const i=t.secondaryAnimation;if(!i)return null;const r=yield this._importColliderMeshGroups(e,i),o=yield this._importSpringBoneGroupList(e,i,r);return new Ce(r,o)}))}_createSpringBone(e,t){return new be(e,t)}}class Ne extends ve{constructor(e={}){e.lookAtImporter=e.lookAtImporter||new Pe,e.springBoneImporter=e.springBoneImporter||new Ie,super(e)}import(e,n={}){return t(this,void 0,void 0,(function*(){if(void 0===e.parser.json.extensions||void 0===e.parser.json.extensions.VRM)throw new Error(\"Could not find VRM extension on the GLTF\");const t=e.scene;t.updateMatrixWorld(!1),t.traverse((e=>{e.isMesh&&(e.frustumCulled=!1)}));const i=(yield this._metaImporter.import(e))||void 0,r=(yield this._materialImporter.convertGLTFMaterials(e))||void 0,o=(yield this._humanoidImporter.import(e))||void 0,s=o&&(yield this._firstPersonImporter.import(e,o))||void 0,a=(yield this._blendShapeImporter.import(e))||void 0,l=s&&a&&o&&(yield this._lookAtImporter.import(e,s,a,o))||void 0;l.setupHelper&&l.setupHelper(t,n);const d=(yield this._springBoneImporter.import(e))||void 0;return d.setupHelper&&d.setupHelper(t,n),new Ue({scene:e.scene,meta:i,materials:r,humanoid:o,firstPerson:s,blendShapeProxy:a,lookAt:l,springBoneManager:d},n)}))}}const De=1e4;class Ue extends ye{static from(e,n={},i={}){return t(this,void 0,void 0,(function*(){const t=new Ne(n);return yield t.import(e,i)}))}constructor(t,n={}){super(t),n.disableBoxHelper||this.scene.add(new e.BoxHelper(this.scene)),n.disableSkeletonHelper||this.scene.add(new e.SkeletonHelper(this.scene))}update(e){super.update(e)}}export{$ as MToonMaterial,Y as MToonMaterialCullMode,X as MToonMaterialDebugMode,q as MToonMaterialOutlineColorMode,Q as MToonMaterialOutlineWidthMode,Z as MToonMaterialRenderMode,ye as VRM,d as VRMBlendShapeGroup,v as VRMBlendShapeImporter,_ as VRMBlendShapeProxy,O as VRMCurveMapper,Ue as VRMDebug,M as VRMFirstPerson,E as VRMFirstPersonImporter,L as VRMHumanBone,A as VRMHumanoid,C as VRMHumanoidImporter,ve as VRMImporter,b as VRMLookAtApplyer,I as VRMLookAtBlendShapeApplyer,k as VRMLookAtBoneApplyer,G as VRMLookAtHead,W as VRMLookAtImporter,ee as VRMMaterialImporter,te as VRMMetaImporter,S as VRMRendererFirstPersonFlags,h as VRMSchema,pe as VRMSpringBone,be as VRMSpringBoneDebug,_e as VRMSpringBoneImporter,Ie as VRMSpringBoneImporterDebug,me as VRMSpringBoneManager,K as VRMUnlitMaterial,J as VRMUnlitMaterialRenderType,Le as VRMUtils,De as VRM_GIZMO_RENDER_ORDER};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}