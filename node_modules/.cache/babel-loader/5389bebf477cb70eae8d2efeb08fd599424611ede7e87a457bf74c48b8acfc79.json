{"ast":null,"code":"var _jsxFileName = \"/Users/hzh-mac/Downloads/VRM/vrm-app/src/index.js\";\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader.js';\nimport { VRM, VRMSchema, VRMUtils } from '@pixiv/three-vrm';\nimport { drawConnectors, drawLandmarks } from '@mediapipe/drawing_utils';\nimport { Holistic, FACEMESH_TESSELATION } from '@mediapipe/holistic';\nimport { Face, Utils, Vector } from 'kalidokit';\nimport * as CameraUtils from '@mediapipe/camera_utils';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst clamp = Utils.clamp;\nconst lerp = Vector.lerp;\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.toggleCamera = () => {\n      this.setState(prevState => ({\n        isCameraOn: !prevState.isCameraOn\n      }));\n    };\n    this.toggleDrawing = () => {\n      this.setState(prevState => ({\n        isDrawingEnabled: !prevState.isDrawingEnabled\n      }));\n    };\n    this.state = {\n      isCameraOn: true,\n      isDrawingEnabled: true\n    };\n    this.rendererRe = /*#__PURE__*/React.createRef();\n    this.canvasRef = /*#__PURE__*/React.createRef();\n    this.cameraRef = /*#__PURE__*/React.createRef();\n    this.controlsRef = /*#__PURE__*/React.createRef();\n    this.sceneRef = /*#__PURE__*/React.createRef();\n    this.currentVrmRef = /*#__PURE__*/React.createRef();\n  }\n  componentDidMount() {\n    var _this = this;\n    this.videoElement = document.querySelector(\".input_video\");\n    this.guideCanvas = document.querySelector('canvas.guides');\n    const renderer = new THREE.WebGLRenderer({\n      alpha: true\n    });\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    renderer.setPixelRatio(window.devicePixelRatio);\n    this.rendererRe.current = renderer;\n    document.body.appendChild(renderer.domElement);\n    const orbitCamera = new THREE.PerspectiveCamera(70, window.innerWidth / window.innerHeight, 0.1, 1000);\n    orbitCamera.position.set(0.0, 1.4, 0.7);\n    this.cameraRef.current = orbitCamera;\n    const orbitControls = new OrbitControls(orbitCamera, renderer.domElement);\n    orbitControls.screenSpacePanning = true;\n    orbitControls.target.set(0.0, 1.4, 0.0);\n    orbitControls.update();\n    this.controlsRef.current = orbitControls;\n    const scene = new THREE.Scene();\n    this.sceneRef.current = scene;\n    const light = new THREE.DirectionalLight(0xafbfff);\n    light.position.set(0.5, 0.5, 1.0).normalize();\n    scene.add(light);\n    const clock = new THREE.Clock();\n    const loader = new GLTFLoader();\n    loader.crossOrigin = 'anonymous';\n    new Promise((resolve, reject) => {\n      loader.load('https://rolling-filters.s3.amazonaws.com/3d/vroid.vrm', gltf => {\n        VRMUtils.removeUnnecessaryJoints(gltf.scene);\n        VRM.from(gltf).then(vrm => {\n          scene.add(vrm.scene);\n          this.currentVrmRef.current = vrm;\n          this.currentVrmRef.current.scene.rotation.y = Math.PI;\n          resolve();\n        });\n      }, progress => {\n        console.log('Loading model...', 100.0 * (progress.loaded / progress.total), '%');\n      }, error => {\n        console.error(error);\n        reject(error);\n      });\n      const bgTexture = new THREE.TextureLoader();\n      bgTexture.load(\"https://images.pexels.com/photos/1205301/pexels-photo-1205301.jpeg\", function (texture) {\n        scene.background = texture;\n      });\n    }).then(() => {\n      const animate = () => {\n        if (!this.currentVrmRef) {\n          return;\n        }\n        requestAnimationFrame(animate);\n        if (this.currentVrmRef.current) {\n          this.currentVrmRef.current.update(clock.getDelta());\n        }\n        renderer.render(scene, orbitCamera);\n      };\n      animate();\n      const rigRotation = function (name) {\n        let rotation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n          x: 0,\n          y: 0,\n          z: 0\n        };\n        let dampener = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n        let lerpAmount = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0.3;\n        if (!_this.currentVrmRef.current) {\n          return;\n        }\n        const Part = _this.currentVrmRef.current.humanoid.getBoneNode(VRMSchema.HumanoidBoneName[name]);\n        if (!Part) {\n          return;\n        }\n        const euler = new THREE.Euler(rotation.x * dampener, rotation.y * dampener, rotation.z * dampener);\n        const quaternion = new THREE.Quaternion().setFromEuler(euler);\n        Part.quaternion.slerp(quaternion, lerpAmount);\n      };\n      const rigFace = riggedFace => {\n        if (!this.currentVrmRef.current) {\n          return;\n        }\n        rigRotation('Neck', riggedFace.head, 0.7);\n        const Blendshape = this.currentVrmRef.current.blendShapeProxy;\n        const PresetName = VRMSchema.BlendShapePresetName;\n        riggedFace.eye.l = lerp(clamp(1 - riggedFace.eye.l, 0, 1), Blendshape.getValue(PresetName.Blink), 0.5);\n        riggedFace.eye.r = lerp(clamp(1 - riggedFace.eye.r, 0, 1), Blendshape.getValue(PresetName.Blink), 0.5);\n        riggedFace.eye = Face.stabilizeBlink(riggedFace.eye, riggedFace.head.y);\n        Blendshape.setValue(PresetName.Blink, riggedFace.eye.l);\n        Blendshape.setValue(PresetName.I, lerp(riggedFace.mouth.shape.I, Blendshape.getValue(PresetName.I), 0.5));\n        Blendshape.setValue(PresetName.A, lerp(riggedFace.mouth.shape.A, Blendshape.getValue(PresetName.A), 0.5));\n        Blendshape.setValue(PresetName.E, lerp(riggedFace.mouth.shape.E, Blendshape.getValue(PresetName.E), 0.5));\n        Blendshape.setValue(PresetName.O, lerp(riggedFace.mouth.shape.O, Blendshape.getValue(PresetName.O), 0.5));\n        Blendshape.setValue(PresetName.U, lerp(riggedFace.mouth.shape.U, Blendshape.getValue(PresetName.U), 0.5));\n        let lookTarget = new THREE.Euler(lerp(oldLookTarget.x, riggedFace.pupil.y, 0.4), lerp(oldLookTarget.y, riggedFace.pupil.x, 0.4), 0, 'XYZ');\n        oldLookTarget.copy(lookTarget);\n        this.currentVrmRef.current.lookAt.applyer.lookAt(lookTarget);\n      };\n      const animateVRM = (vrm, results) => {\n        if (!vrm) {\n          return;\n        }\n        let riggedFace;\n        const faceLandmarks = results.faceLandmarks;\n        if (faceLandmarks) {\n          riggedFace = Face.solve(faceLandmarks, {\n            runtime: 'mediapipe',\n            video: this.videoElement\n          });\n          rigFace(riggedFace);\n        }\n      };\n      let oldLookTarget = new THREE.Euler();\n      const onResults = results => {\n        drawResults(results);\n        this.res = results;\n        animateVRM(this.currentVrmRef.current, results);\n      };\n      const drawResults = results => {\n        if (this.state.isDrawingEnabled) {\n          this.guideCanvas.width = this.videoElement.videoWidth;\n          this.guideCanvas.height = this.videoElement.videoHeight;\n          const canvasCtx = this.guideCanvas.getContext('2d');\n          canvasCtx.save();\n          canvasCtx.clearRect(0, 0, this.guideCanvas.width, this.guideCanvas.height);\n          drawConnectors(canvasCtx, results.faceLandmarks, FACEMESH_TESSELATION, {\n            color: '#C0C0C070',\n            lineWidth: 1\n          });\n          if (results.faceLandmarks && results.faceLandmarks.length === 478) {\n            drawLandmarks(canvasCtx, [results.faceLandmarks[468], results.faceLandmarks[468 + 5]], {\n              color: '#ffe603',\n              lineWidth: 2\n            });\n          }\n        }\n      };\n      const holistic = new Holistic({\n        locateFile: file => {\n          return `https://cdn.jsdelivr.net/npm/@mediapipe/holistic@0.5.1635989137/${file}`;\n        }\n      });\n      holistic.setOptions({\n        modelComplexity: 1,\n        smoothLandmarks: true,\n        minDetectionConfidence: 0.7,\n        minTrackingConfidence: 0.7,\n        refineFaceLandmarks: true\n      });\n      holistic.onResults(onResults);\n      this.camera = new CameraUtils.Camera(this.videoElement, {\n        onFrame: async () => {\n          await holistic.send({\n            image: this.videoElement\n          });\n        },\n        width: 480,\n        height: 360\n      });\n      this.camera.start();\n    });\n  }\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.isCameraOn !== this.state.isCameraOn || prevState.isDrawingEnabled !== this.state.isDrawingEnabled) {\n      this.guideCanvas.width = this.videoElement.videoWidth;\n      this.guideCanvas.height = this.videoElement.videoHeight;\n      const canvasCtx = this.guideCanvas.getContext('2d');\n      canvasCtx.save();\n      canvasCtx.clearRect(0, 0, this.guideCanvas.width, this.guideCanvas.height);\n      if (this.state.isDrawingEnabled) {\n        drawConnectors(canvasCtx, this.res.faceLandmarks, FACEMESH_TESSELATION, {\n          color: '#C0C0C070',\n          lineWidth: 1\n        });\n        if (this.res.faceLandmarks && this.res.faceLandmarks.length === 478) {\n          drawLandmarks(canvasCtx, [this.res.faceLandmarks[468], this.res.faceLandmarks[468 + 5]], {\n            color: '#ffe603',\n            lineWidth: 2\n          });\n        }\n      }\n      if (this.state.isCameraOn) {\n        this.camera.start();\n      } else {\n        this.camera.stop();\n      }\n    }\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.toggleCamera,\n        style: {\n          top: '10px',\n          right: '10px'\n        },\n        children: this.state.isCameraOn ? 'Turn camera off' : 'Turn camera on'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.toggleDrawing,\n        style: {\n          top: '40px',\n          right: '10px'\n        },\n        children: this.state.isDrawingEnabled ? 'Disable Drawing' : 'Enable Drawing'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: \"relative\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"video\", {\n          className: \"input_video\",\n          style: {\n            position: \"absolute\",\n            top: 0,\n            left: 0\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n          className: \"guides\",\n          style: {\n            position: \"absolute\",\n            top: 0,\n            left: 0\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 7\n    }, this);\n  }\n}\nReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 281,\n  columnNumber: 17\n}, this), document.getElementById('root'));","map":{"version":3,"names":["React","Component","ReactDOM","THREE","OrbitControls","GLTFLoader","VRM","VRMSchema","VRMUtils","drawConnectors","drawLandmarks","Holistic","FACEMESH_TESSELATION","Face","Utils","Vector","CameraUtils","jsxDEV","_jsxDEV","clamp","lerp","App","constructor","props","toggleCamera","setState","prevState","isCameraOn","toggleDrawing","isDrawingEnabled","state","rendererRe","createRef","canvasRef","cameraRef","controlsRef","sceneRef","currentVrmRef","componentDidMount","_this","videoElement","document","querySelector","guideCanvas","renderer","WebGLRenderer","alpha","setSize","window","innerWidth","innerHeight","setPixelRatio","devicePixelRatio","current","body","appendChild","domElement","orbitCamera","PerspectiveCamera","position","set","orbitControls","screenSpacePanning","target","update","scene","Scene","light","DirectionalLight","normalize","add","clock","Clock","loader","crossOrigin","Promise","resolve","reject","load","gltf","removeUnnecessaryJoints","from","then","vrm","rotation","y","Math","PI","progress","console","log","loaded","total","error","bgTexture","TextureLoader","texture","background","animate","requestAnimationFrame","getDelta","render","rigRotation","name","arguments","length","undefined","x","z","dampener","lerpAmount","Part","humanoid","getBoneNode","HumanoidBoneName","euler","Euler","quaternion","Quaternion","setFromEuler","slerp","rigFace","riggedFace","head","Blendshape","blendShapeProxy","PresetName","BlendShapePresetName","eye","l","getValue","Blink","r","stabilizeBlink","setValue","I","mouth","shape","A","E","O","U","lookTarget","oldLookTarget","pupil","copy","lookAt","applyer","animateVRM","results","faceLandmarks","solve","runtime","video","onResults","drawResults","res","width","videoWidth","height","videoHeight","canvasCtx","getContext","save","clearRect","color","lineWidth","holistic","locateFile","file","setOptions","modelComplexity","smoothLandmarks","minDetectionConfidence","minTrackingConfidence","refineFaceLandmarks","camera","Camera","onFrame","send","image","start","componentDidUpdate","prevProps","stop","children","onClick","style","top","right","fileName","_jsxFileName","lineNumber","columnNumber","className","left","getElementById"],"sources":["/Users/hzh-mac/Downloads/VRM/vrm-app/src/index.js"],"sourcesContent":["import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader.js';\nimport { VRM, VRMSchema, VRMUtils } from '@pixiv/three-vrm';\nimport { drawConnectors, drawLandmarks } from '@mediapipe/drawing_utils'\nimport { Holistic, FACEMESH_TESSELATION } from '@mediapipe/holistic';\nimport { Face, Utils, Vector } from 'kalidokit';\nimport * as CameraUtils from '@mediapipe/camera_utils';\nimport './index.css';\n\nconst clamp = Utils.clamp;\nconst lerp = Vector.lerp;\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isCameraOn: true,\n      isDrawingEnabled: true\n    };\n\n    this.rendererRe = React.createRef();\n    this.canvasRef = React.createRef();\n    this.cameraRef = React.createRef();\n    this.controlsRef = React.createRef();\n    this.sceneRef = React.createRef();\n    this.currentVrmRef = React.createRef();\n  }\n\n  componentDidMount() {\n    \n    this.videoElement = document.querySelector(\".input_video\");\n    this.guideCanvas = document.querySelector('canvas.guides');\n\n    const renderer = new THREE.WebGLRenderer({ alpha: true });\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    renderer.setPixelRatio(window.devicePixelRatio);\n    this.rendererRe.current = renderer;\n    document.body.appendChild(renderer.domElement);\n\n    const orbitCamera = new THREE.PerspectiveCamera(70, window.innerWidth / window.innerHeight, 0.1, 1000);\n    orbitCamera.position.set(0.0, 1.4, 0.7);\n    this.cameraRef.current = orbitCamera;\n\n    const orbitControls = new OrbitControls(orbitCamera, renderer.domElement);\n    orbitControls.screenSpacePanning = true;\n    orbitControls.target.set(0.0, 1.4, 0.0);\n    orbitControls.update();\n    this.controlsRef.current = orbitControls;\n\n    const scene = new THREE.Scene();\n    this.sceneRef.current = scene;\n\n    const light = new THREE.DirectionalLight(0xafbfff);\n    light.position.set(0.5, 0.5, 1.0).normalize();\n    scene.add(light);\n\n    const clock = new THREE.Clock();\n    const loader = new GLTFLoader();\n    loader.crossOrigin = 'anonymous';\n    new Promise((resolve, reject) => {\n      loader.load(\n        'https://rolling-filters.s3.amazonaws.com/3d/vroid.vrm',\n        (gltf) => {\n          VRMUtils.removeUnnecessaryJoints(gltf.scene);\n    \n          VRM.from(gltf).then((vrm) => {\n            scene.add(vrm.scene);\n            this.currentVrmRef.current = vrm;\n            this.currentVrmRef.current.scene.rotation.y = Math.PI;\n            resolve(); \n          });\n        },\n        (progress) => {\n          console.log('Loading model...', 100.0 * (progress.loaded / progress.total), '%');\n        },\n        (error) => {\n          console.error(error);\n          reject(error); \n        }\n      );\n\n      const bgTexture = new THREE.TextureLoader();\n      bgTexture.load(\"https://images.pexels.com/photos/1205301/pexels-photo-1205301.jpeg\",  function(texture)\n      {\n        scene.background = texture;  \n       });\n      \n    })\n    .then(() => {\n      const animate = () => {\n        if (!this.currentVrmRef) {\n          return;\n        }\n        requestAnimationFrame(animate);\n        if (this.currentVrmRef.current) {\n          this.currentVrmRef.current.update(clock.getDelta());\n        }\n        renderer.render(scene, orbitCamera);\n      }\n      animate();\n  \n      \n  \n      const rigRotation = (name, rotation = { x: 0, y: 0, z: 0 }, dampener = 1, lerpAmount = 0.3) => {\n        if (!this.currentVrmRef.current) {\n          return;\n        }\n        const Part = this.currentVrmRef.current.humanoid.getBoneNode(VRMSchema.HumanoidBoneName[name]);\n        if (!Part) {\n          return;\n        }\n  \n        const euler = new THREE.Euler(rotation.x * dampener, rotation.y * dampener, rotation.z * dampener);\n        const quaternion = new THREE.Quaternion().setFromEuler(euler);\n        Part.quaternion.slerp(quaternion, lerpAmount);\n      };\n  \n      \n  \n      const rigFace = (riggedFace) => {\n        if (!this.currentVrmRef.current) {\n          return;\n        }\n        rigRotation('Neck', riggedFace.head, 0.7);\n  \n        const Blendshape = this.currentVrmRef.current.blendShapeProxy;\n        const PresetName = VRMSchema.BlendShapePresetName;\n  \n        riggedFace.eye.l = lerp(clamp(1 - riggedFace.eye.l, 0, 1), Blendshape.getValue(PresetName.Blink), 0.5);\n        riggedFace.eye.r = lerp(clamp(1 - riggedFace.eye.r, 0, 1), Blendshape.getValue(PresetName.Blink), 0.5);\n        riggedFace.eye = Face.stabilizeBlink(riggedFace.eye, riggedFace.head.y);\n        Blendshape.setValue(PresetName.Blink, riggedFace.eye.l);\n  \n        Blendshape.setValue(PresetName.I, lerp(riggedFace.mouth.shape.I, Blendshape.getValue(PresetName.I), 0.5));\n        Blendshape.setValue(PresetName.A, lerp(riggedFace.mouth.shape.A, Blendshape.getValue(PresetName.A), 0.5));\n        Blendshape.setValue(PresetName.E, lerp(riggedFace.mouth.shape.E, Blendshape.getValue(PresetName.E), 0.5));\n        Blendshape.setValue(PresetName.O, lerp(riggedFace.mouth.shape.O, Blendshape.getValue(PresetName.O), 0.5));\n        Blendshape.setValue(PresetName.U, lerp(riggedFace.mouth.shape.U, Blendshape.getValue(PresetName.U), 0.5));\n  \n        let lookTarget = new THREE.Euler(\n          lerp(oldLookTarget.x, riggedFace.pupil.y, 0.4),\n          lerp(oldLookTarget.y, riggedFace.pupil.x, 0.4),\n          0,\n          'XYZ'\n        );\n        oldLookTarget.copy(lookTarget);\n        this.currentVrmRef.current.lookAt.applyer.lookAt(lookTarget);\n      };\n  \n      const animateVRM = (vrm, results) => {\n        if (!vrm) {\n          return;\n        }\n        let riggedFace;\n  \n        const faceLandmarks = results.faceLandmarks;\n  \n        if (faceLandmarks) {\n          riggedFace = Face.solve(faceLandmarks, {\n            runtime: 'mediapipe',\n            video: this.videoElement,\n          });\n          rigFace(riggedFace);\n        }\n      };\n  \n      let oldLookTarget = new THREE.Euler();\n      const onResults = (results) => {\n        drawResults(results);\n        this.res = results;\n        animateVRM(this.currentVrmRef.current, results);\n      };\n  \n      const drawResults = (results) => {\n        if (this.state.isDrawingEnabled) {\n          this.guideCanvas.width = this.videoElement.videoWidth;\n          this.guideCanvas.height = this.videoElement.videoHeight;\n          const canvasCtx = this.guideCanvas.getContext('2d');\n          canvasCtx.save();\n          canvasCtx.clearRect(0, 0, this.guideCanvas.width, this.guideCanvas.height);\n          drawConnectors(canvasCtx, results.faceLandmarks, FACEMESH_TESSELATION, {\n            color: '#C0C0C070',\n            lineWidth: 1,\n          });\n          if (results.faceLandmarks && results.faceLandmarks.length === 478) {\n            drawLandmarks(canvasCtx, [results.faceLandmarks[468], results.faceLandmarks[468 + 5]], {\n              color: '#ffe603',\n              lineWidth: 2,\n            });\n          }\n        }\n      };\n  \n      const holistic = new Holistic({\n        locateFile: (file) => {\n          return `https://cdn.jsdelivr.net/npm/@mediapipe/holistic@0.5.1635989137/${file}`;\n        },\n      },);\n  \n      holistic.setOptions({\n        modelComplexity: 1,\n        smoothLandmarks: true,\n        minDetectionConfidence: 0.7,\n        minTrackingConfidence: 0.7,\n        refineFaceLandmarks: true,\n      });\n    \n      holistic.onResults(onResults);\n  \n      \n      this.camera = new CameraUtils.Camera(this.videoElement, {\n        onFrame: async () => {\n          await holistic.send({ image: this.videoElement });\n        },\n        width: 480,\n        height: 360\n      });\n      this.camera.start();\n    })\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.isCameraOn !== this.state.isCameraOn || prevState.isDrawingEnabled !== this.state.isDrawingEnabled) {\n      this.guideCanvas.width = this.videoElement.videoWidth;\n      this.guideCanvas.height = this.videoElement.videoHeight;\n      const canvasCtx = this.guideCanvas.getContext('2d');\n      canvasCtx.save();\n      canvasCtx.clearRect(0, 0, this.guideCanvas.width, this.guideCanvas.height);\n      if (this.state.isDrawingEnabled) {\n      drawConnectors(canvasCtx, this.res.faceLandmarks, FACEMESH_TESSELATION, {\n        color: '#C0C0C070',\n        lineWidth: 1,\n      });\n      if (this.res.faceLandmarks && this.res.faceLandmarks.length === 478) {\n        drawLandmarks(canvasCtx, [this.res.faceLandmarks[468], this.res.faceLandmarks[468 + 5]], {\n          color: '#ffe603',\n          lineWidth: 2,\n        });\n      }}\n      if (this.state.isCameraOn) {\n        this.camera.start();\n      } else {\n        this.camera.stop();\n      }\n    }\n  }\n\n  toggleCamera = () => {\n    this.setState((prevState) => ({\n      isCameraOn: !prevState.isCameraOn\n    }));\n  };\n\n  toggleDrawing = () => {\n    this.setState((prevState) => ({\n      isDrawingEnabled: !prevState.isDrawingEnabled\n    }));\n  };\n\n  render() {\n    return (\n      <div>\n        <button onClick={this.toggleCamera} style={{ top: '10px', right: '10px' }}>\n          {this.state.isCameraOn ? 'Turn camera off' : 'Turn camera on'}\n        </button>\n        <button onClick={this.toggleDrawing} style={{ top: '40px', right: '10px' }}>\n          {this.state.isDrawingEnabled ? 'Disable Drawing' : 'Enable Drawing'}\n        </button>\n        <div style={{ position: \"relative\" }}>\n          <video className=\"input_video\" style={{ position: \"absolute\", top: 0, left: 0 }}/>\n          <canvas className=\"guides\" style={{ position: \"absolute\", top: 0, left: 0 }} />\n        </div>\n      </div>\n    );\n  }\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}